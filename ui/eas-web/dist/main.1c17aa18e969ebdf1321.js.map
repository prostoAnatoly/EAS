{"version":3,"file":"main.1c17aa18e969ebdf1321.js","mappings":"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","sources":["webpack://eas-web-ui/./src/utils/Token.ts","webpack://eas-web-ui/./src/config/RoutingBase.ts","webpack://eas-web-ui/./src/config/api.ts","webpack://eas-web-ui/./src/modules/register/config/routingByRegister.ts","webpack://eas-web-ui/./src/modules/shell/config/routingByShell.ts","webpack://eas-web-ui/./src/modules/organizations/config/routingByOrganizations.ts","webpack://eas-web-ui/./src/modules/dashboard/pages/Main/Main.page.tsx","webpack://eas-web-ui/./src/kit/buttons/ButtonAdd.tsx","webpack://eas-web-ui/./src/kit/buttons/ButtonBack.tsx","webpack://eas-web-ui/./src/kit/buttons/ButtonDelete.tsx","webpack://eas-web-ui/./src/kit/buttons/ButtonSave.tsx","webpack://eas-web-ui/./src/kit/buttons/ButtonRefresh.tsx","webpack://eas-web-ui/./src/kit/buttons/ButtonCancel.tsx","webpack://eas-web-ui/./src/kit/dialogs/AlertDialog.tsx","webpack://eas-web-ui/./src/kit/dialogs/FormDialog.tsx","webpack://eas-web-ui/./src/kit/progresses/LoadingProgress.tsx","webpack://eas-web-ui/./src/kit/snackBars/SnackBarError.tsx","webpack://eas-web-ui/./src/kit/pageParts/PageContent.tsx","webpack://eas-web-ui/./src/kit/menu/MenuItemDef.ts","webpack://eas-web-ui/./src/kit/hrs/colorHr.tsx","webpack://eas-web-ui/./src/kit/backdrops/BackdropLoading.tsx","webpack://eas-web-ui/./src/kit/formParts/FormContent.tsx","webpack://eas-web-ui/./src/kit/formParts/FormErrorMessage.tsx","webpack://eas-web-ui/./src/kit/formParts/FormRow.tsx","webpack://eas-web-ui/./src/kit/formParts/FormSimpleHeader.tsx","webpack://eas-web-ui/./src/kit/formParts/Form.tsx","webpack://eas-web-ui/./src/kit/formParts/FormButtonPanel.tsx","webpack://eas-web-ui/./src/kit/formParts/FormOnPaper.tsx","webpack://eas-web-ui/./src/forms/FormDef.ts","webpack://eas-web-ui/./src/utils/date-utils.ts","webpack://eas-web-ui/./src/utils/hooks.ts","webpack://eas-web-ui/./src/forms/extensions/RefObjectExtensions.ts","webpack://eas-web-ui/./src/forms/controls/Control.tsx","webpack://eas-web-ui/./src/forms/controls/MaskControl.tsx","webpack://eas-web-ui/./src/forms/controls/InputControl.tsx","webpack://eas-web-ui/./src/forms/controls/PasswordControl.tsx","webpack://eas-web-ui/./src/forms/controls/DateControl.tsx","webpack://eas-web-ui/./src/forms/controls/PhoneNumberControl.tsx","webpack://eas-web-ui/./src/forms/controls/RadioButtonsControl.tsx","webpack://eas-web-ui/./src/forms/validations/Validation.ts","webpack://eas-web-ui/./src/forms/validations/IsRequiredValidation.ts","webpack://eas-web-ui/./src/forms/validations/PhoneNumberValidation.ts","webpack://eas-web-ui/./src/forms/validations/MaxLengthValidation.ts","webpack://eas-web-ui/./src/forms/validations/MinDateValidation.ts","webpack://eas-web-ui/./src/forms/validations/MaxDateValidation.ts","webpack://eas-web-ui/./src/forms/validations/EmailValidation.ts","webpack://eas-web-ui/./src/forms/validations/MinLengthValidation.ts","webpack://eas-web-ui/./src/forms/ItemInfo.ts","webpack://eas-web-ui/./src/utils/queryPath.ts","webpack://eas-web-ui/./src/utils/web/HttpRequestError.ts","webpack://eas-web-ui/./src/sharedModels/FullName.ts","webpack://eas-web-ui/./src/modules/register/domain/ProfileUser.ts","webpack://eas-web-ui/./src/intermediary/Mediator.ts","webpack://eas-web-ui/./src/messageBroker/MessageBrokerConfig.ts","webpack://eas-web-ui/./src/messageBroker/MemoryServiceBus.ts","webpack://eas-web-ui/./src/modules/register/application/infrastructure/services/TokenService.ts","webpack://eas-web-ui/./src/utils/web/HttpClient.ts","webpack://eas-web-ui/./src/factories/HttpClientFactory.ts","webpack://eas-web-ui/./src/modules/register/infrastructure/clients/IdentityClient.ts","webpack://eas-web-ui/./src/modules/register/infrastructure/clients/InvitationsClient.ts","webpack://eas-web-ui/./src/modules/register/infrastructure/clients/RegistrationClient.ts","webpack://eas-web-ui/./src/modules/register/infrastructure/clients/UsersClient.ts","webpack://eas-web-ui/./src/modules/register/RegisterServiceCollection.ts","webpack://eas-web-ui/./src/utils/caches/LocalCache.ts","webpack://eas-web-ui/./src/modules/register/CurrentProfileUserCache.ts","webpack://eas-web-ui/./src/utils/caches/CacheBase.ts","webpack://eas-web-ui/./src/modules/register/stores/CurrentProfileUserStore.ts","webpack://eas-web-ui/./src/modules/register/application/features/LoginCommand.ts","webpack://eas-web-ui/./src/modules/register/contracts/events/RegisterLoginedIntegrationEvent.ts","webpack://eas-web-ui/./src/modules/register/pages/Login/Login.form.tsx","webpack://eas-web-ui/./src/modules/register/pages/Login/Login.page.tsx","webpack://eas-web-ui/./src/modules/register/contracts/events/ErrorRegisterIntegrationEvent.ts","webpack://eas-web-ui/./src/modules/register/contracts/events/UserRegisteredIntegrationEvent.ts","webpack://eas-web-ui/./src/modules/register/contracts/events/AlreadyRegisteredIntegrationEvent.ts","webpack://eas-web-ui/./src/modules/register/pages/Registration/Registration.form.tsx","webpack://eas-web-ui/./src/modules/register/pages/Registration/Registration.page.tsx","webpack://eas-web-ui/./src/modules/register/application/features/RegistrationUserCommand.ts","webpack://eas-web-ui/./src/modules/register/pages/UserRegistration/UserRegistration.form.tsx","webpack://eas-web-ui/./src/modules/register/pages/UserRegistration/UserRegistration.page.tsx","webpack://eas-web-ui/./src/modules/register/pages/Agreement/AgreementUser.form.tsx","webpack://eas-web-ui/./src/modules/register/pages/Agreement/AgreementUser.page.tsx","webpack://eas-web-ui/./src/modules/register/application/features/CheckInvitationCode/InvitationCheckResult.ts","webpack://eas-web-ui/./src/modules/register/application/features/CheckInvitationCode/CheckInvitationCodeCommand.ts","webpack://eas-web-ui/./src/modules/register/application/features/RegistrationUserByCodeCommand.ts","webpack://eas-web-ui/./src/modules/register/pages/Join/Join.form.tsx","webpack://eas-web-ui/./src/modules/register/pages/Join/Join.page.tsx","webpack://eas-web-ui/./src/modules/employees/config/routingByEmployees.ts","webpack://eas-web-ui/./src/modules/employees/config/menuByEmployees.ts","webpack://eas-web-ui/./src/modules/organizations/config/menuByOrganizations.ts","webpack://eas-web-ui/./src/modules/organizations/stores/OrganizationsStore.ts","webpack://eas-web-ui/./src/modules/shell/infrastructure/clients/IdentityClient.ts","webpack://eas-web-ui/./src/modules/shell/application/features/LogoutCommand.ts","webpack://eas-web-ui/./src/modules/shell/ShellServiceCollection.ts","webpack://eas-web-ui/./src/modules/shell/stores/ShellStore.ts","webpack://eas-web-ui/./src/utils/fullname-utils.ts","webpack://eas-web-ui/./src/modules/shell/pages/brand/Brand.tsx","webpack://eas-web-ui/./src/modules/shell/pages/menu/MainMenu.tsx","webpack://eas-web-ui/./src/modules/shell/pages/Layout/OrganizationInfoView.tsx","webpack://eas-web-ui/./src/modules/shell/pages/Layout/Layout.tsx","webpack://eas-web-ui/./src/modules/shell/pages/Forbidden/Forbidden.form.tsx","webpack://eas-web-ui/./src/modules/shell/pages/Forbidden/Forbidden.page.tsx","webpack://eas-web-ui/./src/modules/shell/pages/NotFound/NotFound.form.tsx","webpack://eas-web-ui/./src/modules/shell/pages/NotFound/NotFound.page.tsx","webpack://eas-web-ui/./src/modules/shell/pages/NoConnectionToServer/NoConnectionToServer.form.tsx","webpack://eas-web-ui/./src/modules/shell/pages/NoConnectionToServer/NoConnectionToServer.page.tsx","webpack://eas-web-ui/./src/modules/organizations/domain/Organization.ts","webpack://eas-web-ui/./src/modules/organizations/infrastructure/clients/OrganizationsClient.ts","webpack://eas-web-ui/./src/modules/organizations/OrganizationsServiceCollection.ts","webpack://eas-web-ui/./src/modules/organizations/application/features/GetOrganizationsQuery.ts","webpack://eas-web-ui/./src/modules/organizations/contracts/events/SelectedOrganizationChangedIntegrationEvent.ts","webpack://eas-web-ui/./src/modules/organizations/pages/OrganizationsList/OrganizationsList.form.tsx","webpack://eas-web-ui/./src/modules/organizations/pages/OrganizationsList/OrganizationsList.page.tsx","webpack://eas-web-ui/./src/modules/organizations/application/infrastructure/clients/OrganizationsClient/arguments/CreateOrganizationArgs.ts","webpack://eas-web-ui/./src/modules/organizations/application/features/CreateOrganizationCommand.ts","webpack://eas-web-ui/./src/modules/organizations/pages/CreateOrganization/CreateOrganization.form.tsx","webpack://eas-web-ui/./src/modules/organizations/pages/CreateOrganization/CreateOrganization.page.tsx","webpack://eas-web-ui/./src/modules/organizations/api/consumers/RegisterLoginedConsumer.ts","webpack://eas-web-ui/./src/modules/shell/api/consumers/AlreadyRegisteredConsumer.ts","webpack://eas-web-ui/./src/modules/shell/api/consumers/ErrorRegisterEventConsumer.ts","webpack://eas-web-ui/./src/modules/shell/api/consumers/SelectedOrganizationChangedConsumer.ts","webpack://eas-web-ui/./src/modules/employees/stores/EmployeesStore.ts","webpack://eas-web-ui/./src/modules/employees/api/consumers/SelectedOrganizationChangedConsumer.ts","webpack://eas-web-ui/./src/kit/tables/ExTable.tsx","webpack://eas-web-ui/./src/sharedModels/exTableView/Pagination.ts","webpack://eas-web-ui/./src/modules/employees/domain/Employees/Employee.ts","webpack://eas-web-ui/./src/modules/employees/domain/Employees/EmployeeState.ts","webpack://eas-web-ui/./src/modules/employees/infrastructure/clients/EmployeesClient.ts","webpack://eas-web-ui/./src/modules/employees/EmployeesServiceCollection.ts","webpack://eas-web-ui/./src/modules/employees/application/features/GetEmployeesQuery.ts","webpack://eas-web-ui/./src/sharedModels/exTableView/AnyObjectItemsSearch.ts","webpack://eas-web-ui/./src/modules/employees/application/infrastructure/clients/EmployeesClient/arguments/GetEmployeesArgs.ts","webpack://eas-web-ui/./src/modules/employees/pages/EmployeesList/EmployeesList.form.tsx","webpack://eas-web-ui/./src/utils/phone-utils.ts","webpack://eas-web-ui/./src/modules/employees/pages/EmployeesList/EmployeesList.page.tsx","webpack://eas-web-ui/./src/modules/employees/application/infrastructure/clients/EmployeesClient/arguments/CreateEmployeeArgs.ts","webpack://eas-web-ui/./src/modules/employees/application/features/CreateEmployeeCommand.ts","webpack://eas-web-ui/./src/modules/employees/pages/CreateEmployee/CreateEmployee.form.tsx","webpack://eas-web-ui/./src/modules/employees/pages/CreateEmployee/CreateEmployee.page.tsx","webpack://eas-web-ui/./src/modules/employees/application/features/GetEmployeeQuery.ts","webpack://eas-web-ui/./src/modules/employees/application/infrastructure/clients/EmployeesClient/arguments/UpdateEmployeeArgs.ts","webpack://eas-web-ui/./src/modules/employees/application/features/UpdateEmployeeCommand.ts","webpack://eas-web-ui/./src/modules/employees/pages/EditEmployee/EditEmployee.form.tsx","webpack://eas-web-ui/./src/modules/employees/pages/EditEmployee/EditEmployee.page.tsx","webpack://eas-web-ui/./src/App.tsx","webpack://eas-web-ui/./src/modules/organizations/api/configApi.ts","webpack://eas-web-ui/./src/modules/shell/api/configApi.ts","webpack://eas-web-ui/./src/modules/employees/api/configApi.ts","webpack://eas-web-ui/./src/modules/register/api/configApi.ts","webpack://eas-web-ui/./src/entry.tsx"],"sourcesContent":["\r\nexport class Jwt {\r\n    exp: number = 0;\r\n}\r\n\r\nexport class Token {\r\n    // ���������\r\n    private static readonly TOKEN_STORAGE_KEY: string = 'eas_public_tokenKey';\r\n\r\n    // ���\r\n    private static jwtInfo: Jwt | null = null;\r\n\r\n    private static getJwtInfoByToken(token: string): Jwt | null {\r\n        const payload = this.getPayloadFromToken(token);\r\n        if (payload) {\r\n            const result: any = new Jwt();\r\n            const jwt = JSON.parse(payload);\r\n            for (let prop in jwt) {\r\n                if (result.hasOwnProperty(prop)) {\r\n                    result[prop] = jwt[prop];\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private static getPayloadFromToken(token: string): string | null {\r\n        const parts = token.split('.');\r\n        if (parts.length === 3) {\r\n            const base64Url = token.split('.')[1];\r\n            if (base64Url) {\r\n                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                const payload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\r\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n                }).join(''));\r\n\r\n                return payload;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public save(accessToken: string) {\r\n        if (accessToken) {\r\n            Token.clear();\r\n            Token.jwtInfo = Token.getJwtInfoByToken(accessToken);\r\n            localStorage.setItem(Token.TOKEN_STORAGE_KEY, accessToken);\r\n        }\r\n    }\r\n\r\n    public static get(): string {\r\n        const item = localStorage.getItem(Token.TOKEN_STORAGE_KEY);\r\n        if (item) {\r\n            return item;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    public static clear() {\r\n        // ������� ���������\r\n        localStorage.removeItem(Token.TOKEN_STORAGE_KEY);\r\n        // ������� ���\r\n        Token.jwtInfo = null;\r\n    }\r\n\r\n    private static getJwtInfo(): Jwt | null {\r\n        if (Token.jwtInfo === null) {\r\n            const token = Token.get();\r\n            if (token) {\r\n                Token.jwtInfo = Token.getJwtInfoByToken(token);\r\n            }\r\n        }\r\n        return Token.jwtInfo;\r\n    }\r\n\r\n    public static getIsExpired(): boolean {\r\n        const jwt = Token.getJwtInfo();\r\n        return jwt === null || (Date.now() >= jwt.exp * 1000);\r\n    }\r\n}","\r\nimport { api } from './api';\r\n\r\nconst ROOT_APP = api.rootApp;\r\n\r\nexport abstract class RoutingBase {\r\n\r\n    public static readonly ROOT_APP = ROOT_APP;\r\n}","export const api = {\r\n    rootApp: process.env.REACT_ROOT_APP,\r\n    rootApiUrl: process.env.REACT_APP_API_URL\r\n}","import { RoutingBase } from \"../../../config/RoutingBase\";\r\n\r\nexport class RoutingByRegister extends RoutingBase  {\r\n\r\n    public static readonly REGISTRATION = this.ROOT_APP + '/registration';\r\n\r\n    public static readonly USER_REGISTRATION = this.ROOT_APP + '/registration/user/new';\r\n\r\n    /** Присоединение сотрудника к организации по приглашению */\r\n    public static readonly JOIN_TO_ORGANIZATION = this.ROOT_APP + '/join-to-organization';\r\n\r\n    public static readonly AGREEMENT_USER = this.ROOT_APP + '/user/agreement';\r\n}","import { RoutingBase } from \"../../../config/RoutingBase\";\r\n\r\nexport class RoutingByShell extends RoutingBase  {\r\n\r\n    public static readonly ROOT = this.ROOT_APP + '/';\r\n    public static readonly FORBIDDEN = this.ROOT_APP + '/forbidden';\r\n    public static readonly NOT_FOUND = this.ROOT_APP + '/not-found';\r\n\r\n    public static readonly LOGIN = this.ROOT_APP + '/login';\r\n\r\n    public static readonly NO_CONNECTION_TO_SERVER = this.ROOT_APP + '/no_connect';\r\n}","import { RoutingBase } from \"../../../config/RoutingBase\";\r\n\r\nexport class RoutingByOrganizations extends RoutingBase  {\r\n\r\n    public static readonly ORGANIZATIONS = this.ROOT_APP + '/organizations';\r\n\r\n    public static readonly CREATE_ORGANIZATION = this.ROOT_APP + '/organizations/add';\r\n}","import * as React from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nconst NameApp = () => {\r\n    return (<Box component=\"div\" sx={{\r\n        fontSize: 'calc(10px + 2vw)',\r\n        color: 'chocolate',\r\n        marginTop: (theme) => theme.spacing(1),\r\n    }}>\r\n        Система учёта сотрудников\r\n    </Box>\r\n    );\r\n};\r\n\r\nexport function MainPage() {\r\n    return (\r\n        <>\r\n            <NameApp />\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Add } from '@mui/icons-material';\r\n\r\nconst BootstrapButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.success.main,\r\n    color: theme.palette.success.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.success.dark\r\n    },\r\n    \"&:disabled\": {\r\n        backgroundColor: theme.palette.success.light\r\n    }\r\n}));\r\n\r\nexport function ButtonAdd(props: ButtonProps) {\r\n    return (<BootstrapButton {...props} startIcon={ <Add />} />)\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ArrowBack } from '@mui/icons-material';\r\n\r\nconst BootstrapButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    \"&:disabled\": {\r\n        backgroundColor: theme.palette.primary.light\r\n    }\r\n}));\r\n\r\nexport function ButtonBack(props: ButtonProps) {\r\n    return (<BootstrapButton {...props} startIcon={<ArrowBack />} />)\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Delete } from '@mui/icons-material';\r\n\r\nconst BootstrapButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.error.main,\r\n    color: theme.palette.error.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    \"&:disabled\": {\r\n        backgroundColor: theme.palette.error.light\r\n    }\r\n}));\r\n\r\nexport function ButtonDelete(props: ButtonProps) {\r\n    return (<BootstrapButton {...props} startIcon={<Delete />} />)\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Save } from '@mui/icons-material';\r\n\r\nconst BootstrapButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.secondary.dark\r\n    },\r\n    \"&:disabled\": {\r\n        backgroundColor: theme.palette.secondary.light\r\n    }\r\n}));\r\n\r\nexport function ButtonSave(props: ButtonProps) {\r\n    return (<BootstrapButton {...props} startIcon={<Save />} />)\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Refresh } from '@mui/icons-material';\r\n\r\nconst BootstrapButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    \"&:disabled\": {\r\n        backgroundColor: theme.palette.primary.light\r\n    }\r\n}));\r\n\r\nexport function ButtonRefresh(props: ButtonProps) {\r\n    return (<BootstrapButton {...props} startIcon={<Refresh />} />)\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Cancel } from '@mui/icons-material';\r\n\r\nconst BootstrapButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: '#457cc7',\r\n    color: theme.palette.primary.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: '#2f4e98'\r\n    },\r\n    \"&:disabled\": {\r\n        backgroundColor: '#c2e0f7'\r\n    }\r\n}));\r\n\r\nexport function ButtonCancel(props: ButtonProps) {\r\n    return (<BootstrapButton {...props} startIcon={<Cancel />} />)\r\n}","import * as React from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, ButtonProps, DialogTitleProps } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nexport interface AlertDialogProps {\r\n    title: string;\r\n    contentText: string;\r\n    yesButtonText: string;\r\n    noButtonText: string;\r\n    open: boolean;\r\n    onHandleYes?: () => void;\r\n    onHandleNo?: () => void;\r\n}\r\n\r\nconst BootstrapButtonYes = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.secondary.dark\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = styled(DialogTitle)<DialogTitleProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n}));\r\n\r\nexport function AlertDialog(props: AlertDialogProps) {\r\n\r\n    const handleYes = () => {\r\n        if (props.onHandleYes) {\r\n            props.onHandleYes();\r\n        }\r\n    };\r\n\r\n    const handleNo = () => {\r\n        if (props.onHandleNo) {\r\n            props.onHandleNo();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={handleNo}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\">\r\n\r\n            <BootstrapDialogTitle id=\"alert-dialog-title\">\r\n                {props.title}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {props.contentText}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleNo}>{props.noButtonText}</Button>\r\n                <BootstrapButtonYes onClick={handleYes} autoFocus>\r\n                    {props.yesButtonText}\r\n                </BootstrapButtonYes>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, ButtonProps, DialogTitleProps } from '@mui/material';\r\n\r\nexport interface FormDialogProps {\r\n    title: string;\r\n    contentText: string;\r\n    yesButtonText: string;\r\n    noButtonText: string;\r\n    open: boolean;\r\n    onHandleYes?: () => void;\r\n    onHandleNo?: () => void;\r\n    children?: React.ReactNode,\r\n}\r\n\r\nconst BootstrapButtonYes = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.secondary.dark\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = styled(DialogTitle)<DialogTitleProps>(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n}));\r\n\r\nexport function FormDialog(props: FormDialogProps) {\r\n\r\n    const handleYes = () => {\r\n        if (props.onHandleYes) {\r\n            props.onHandleYes();\r\n        }\r\n    };\r\n\r\n    const handleNo = () => {\r\n        if (props.onHandleNo) {\r\n            props.onHandleNo();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={handleNo}>\r\n            <BootstrapDialogTitle>{props.title}</BootstrapDialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {props.contentText}\r\n                </DialogContentText>\r\n                {props.children}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleNo}>{props.noButtonText}</Button>\r\n                <BootstrapButtonYes onClick={handleYes} autoFocus>\r\n                    {props.yesButtonText}\r\n                </BootstrapButtonYes>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import * as React from 'react';\r\nimport { CircularProgress, Box } from '@mui/material';\r\n\r\nexport interface LoadingProgressProps {\r\n    text?: string;\r\n}\r\n\r\nexport function LoadingProgress(props: LoadingProgressProps) {\r\n    const text = props.text ?? \"Идет загрузка данных...\";\r\n    return <Box component=\"div\" sx={{ textAlign: 'center'}}>\r\n        <CircularProgress />\r\n        <div><Box component=\"span\" sx={{ paddingTop: (theme) => theme.spacing(2)}}>{text}</Box></div>\r\n    </Box>\r\n}","import React from 'react';\r\n\r\nimport { Snackbar, Alert, AlertTitle } from \"@mui/material\";\r\n\r\ninterface SnackBarProps {\r\n    message: string,\r\n    handleCloseMessage: Function,\r\n}\r\n\r\nexport function SnackBarError (props: SnackBarProps) {\r\n    return (\r\n        <Snackbar\r\n            sx={{\r\n                '& .MuiAlert-icon': {\r\n                    '& svg': {\r\n                        display: 'none'\r\n                    }\r\n                }\r\n            }}\r\n            open={props.message.length > 0} onClose={() => props.handleCloseMessage()}>\r\n            <Alert elevation={6}\r\n                onClose={() => props.handleCloseMessage()} severity='error'>\r\n                <AlertTitle>������</AlertTitle>\r\n                {props.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}","import { Paper } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nexport class PageContentProps {\r\n    constructor(public children?: React.ReactNode) {\r\n\r\n    }\r\n}\r\n\r\nconst style = {\r\n    paper: {\r\n        padding: (theme) => theme.spacing(2),\r\n        backgroundColor: 'var(--EAS-BACKGROUND-COLOR-MAIN)',\r\n    }\r\n};\r\n\r\nexport function PageContent(props: PageContentProps) {\r\n    return <Paper sx={style.paper} elevation={0}>\r\n        {props.children}\r\n    </Paper>\r\n}","\r\n\r\nexport class MenuItemDef {\r\n    constructor(public to: string, public text: string) { }\r\n}","import * as React from 'react';\r\n\r\nconst getStyle = () => {\r\n    return {\r\n        color: '#7a59d9',\r\n        height: '1px',\r\n        backgroundColor: '#7a59d9',\r\n        border: '0 none',\r\n    };\r\n};\r\n\r\nexport function ColorHr() {\r\n    return (<hr style={getStyle()} />);\r\n}","import { Backdrop } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { LoadingProgress } from '../kit';\r\n\r\nexport interface BackdropLoadingProps {\r\n    text?: string;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport function BackdropLoading(props: BackdropLoadingProps) {\r\n    return <>{\r\n        props.isLoading && <Backdrop sx={{\r\n            zIndex: (theme) => theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        }} open={props.isLoading}>\r\n            <LoadingProgress text={props.text} />\r\n        </Backdrop>\r\n    }</>;\r\n}","import * as React from 'react';\r\nimport { Box, BoxProps, styled } from '@mui/material';\r\n\r\nconst BootstrapBox = styled(Box)<BoxProps>(({ theme }) => ({\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n}));\r\n\r\nclass FormContentProps {\r\n    constructor(\r\n        public readonly boxProps?: BoxProps,\r\n        public readonly children?: React.ReactNode) { }\r\n}\r\n\r\nexport function FormContent(props: FormContentProps) {\r\n    return (<>\r\n        {\r\n            props.children &&\r\n            <BootstrapBox {...props.boxProps}>{props.children}</BootstrapBox>\r\n        }\r\n    </>);\r\n}","import { FormHelperText } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\ninterface FormErrorMessageProps {\r\n    message?: string;\r\n}\r\n\r\nexport function FormErrorMessage(props: FormErrorMessageProps) {\r\n    return (<>{\r\n        props.message &&\r\n            <FormHelperText error>\r\n                {props.message}\r\n            </FormHelperText>\r\n    }</>);\r\n}","import * as React from 'react';\r\nimport { Box, BoxProps, styled } from '@mui/material';\r\n\r\nconst BootstrapBox = styled(Box)<BoxProps>(() => ({\r\n    display: 'flex',\r\n    width: '100%',\r\n}));\r\n\r\nclass FormRowProps {\r\n    constructor(\r\n        public readonly boxProps?: BoxProps,\r\n        public readonly children?: React.ReactNode) { }\r\n}\r\n\r\nexport function FormRow(props: FormRowProps) {\r\n    return (<>\r\n        {\r\n            props.children &&\r\n            <BootstrapBox {...props.boxProps}>{props.children}</BootstrapBox>\r\n        }\r\n    </>);\r\n}","import * as React from 'react';\r\nimport { Typography } from '@mui/material';\r\n\r\nclass FormSimpleHeaderProps {\r\n    constructor(public readonly children?: React.ReactNode) { }\r\n}\r\n\r\nexport function FormSimpleHeader(props: FormSimpleHeaderProps) {\r\n    return (<>{\r\n        props.children && <Typography component=\"h1\" variant=\"h5\">\r\n            {props.children}\r\n        </Typography>\r\n    }</>);\r\n}","import * as React from 'react';\r\nimport { Box, BoxProps, styled } from '@mui/material';\r\n\r\nconst BootstrapBox = styled(Box)<BoxProps>(({ theme }) => ({\r\n    marginTop: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n}));\r\n\r\nclass FormProps {\r\n    constructor(\r\n        public readonly boxProps?: BoxProps,\r\n        public readonly children?: React.ReactNode) { }\r\n}\r\n\r\nexport function Form(props: FormProps) {\r\n    return (<>\r\n        {\r\n            props.children &&\r\n            <BootstrapBox {...props.boxProps}>{props.children}</BootstrapBox>\r\n        }\r\n    </>);\r\n}","import * as React from 'react';\r\nimport { Box, BoxProps, styled } from '@mui/material';\r\n\r\nconst BootstrapBox = styled(Box)<BoxProps>(({ theme }) => ({\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    display: 'block',\r\n    textAlign: 'right',\r\n    paddingRight: theme.spacing(2),\r\n}));\r\n\r\nclass FormButtonPanelProps {\r\n    constructor(\r\n        public readonly boxProps?: BoxProps,\r\n        public readonly children?: React.ReactNode) { }\r\n}\r\n\r\nexport function FormButtonPanel(props: FormButtonPanelProps) {\r\n    return (<>\r\n        {\r\n            props.children &&\r\n            <BootstrapBox {...props.boxProps}>{props.children}</BootstrapBox>\r\n        }\r\n    </>);\r\n}","import * as React from 'react';\r\nimport { BoxProps, Paper, PaperProps, styled } from '@mui/material';\r\nimport { Form } from './Form';\r\n\r\nconst BootstrapPaper = styled(Paper)<PaperProps>(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    backgroundColor: 'snow',\r\n}));\r\n\r\nclass FormOnPaperProps {\r\n    constructor(\r\n        public readonly paperProps?: PaperProps,\r\n        public readonly boxProps?: BoxProps,\r\n        public readonly children?: React.ReactNode) { }\r\n}\r\n\r\nexport function FormOnPaper(props: FormOnPaperProps) {\r\n    return (<BootstrapPaper {...props.paperProps}><Form boxProps={props.boxProps}>{props.children}</Form></BootstrapPaper>);\r\n}","import { Control } from './controls/Control';\r\n\r\nexport class FormDef {\r\n\r\n    public validation(): boolean {\r\n        let counter = 0;\r\n        let isValid = true;\r\n        for (var prop in this) {\r\n            const control = this[prop] as unknown as Control;\r\n            if (control) {\r\n                const v = control.validation();\r\n                if (!v) {\r\n                    if (counter === 0) {\r\n                        control.focus();\r\n                    }\r\n                    isValid = false;\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    public setDisabled(disabled: boolean): void {\r\n        for (var prop in this) {\r\n            const control = this[prop] as unknown as Control;\r\n            if (control) {\r\n                control.props.disabled = disabled || control.props.allwaysDisabled;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isChanged(): boolean {\r\n        for (var prop in this) {\r\n            const control = this[prop] as unknown as Control;\r\n            if (control) {\r\n                if (control.isChanged()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { isNullOrUndefined } from 'util';\r\nconst hyphen: string = '-';\r\nconst monthNames = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\",\r\n    \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"\r\n];\r\n\r\nfunction splitDate(date: Date) {\r\n    const yyyy = date.getFullYear().toString();\r\n    const mm = (date.getMonth() + 1).toString();\r\n    const day = date.getDate().toString();\r\n    const h = date.getHours().toString();\r\n    const m = date.getMinutes().toString();\r\n    const s = date.getSeconds().toString();\r\n    return { yyyy, mm, day, h, m, s };\r\n}\r\n\r\nfunction padTwo(val: string): string {\r\n    return val.length < 2 ? \"0\" + val : val;\r\n}\r\n\r\nexport function dateToFormatYmd(date: Date | string | undefined): string {\r\n    if (isNullOrUndefined(date)) { return ''; }\r\n\r\n    const d = new Date(date);\r\n    let { yyyy, mm, day } = splitDate(d);\r\n    return `${yyyy}${hyphen}${padTwo(mm)}${hyphen}${padTwo(day)}`;\r\n}\r\n\r\nexport function dateToFormatDmy(date: Date | string | undefined): string {\r\n    if (isNullOrUndefined(date)) { return ''; }\r\n\r\n    const d = new Date(date);\r\n    let { yyyy, mm, day } = splitDate(d);\r\n    return `${padTwo(day)}${hyphen}${padTwo(mm)}${hyphen}${yyyy}`;\r\n}\r\n\r\nexport function dateYmdToFormatJson(date: string | undefined): string | undefined {\r\n    if (isNullOrUndefined(date)) { return undefined; }\r\n\r\n    const d = createDate(date);\r\n    if (isNullOrUndefined(d)) { return undefined; }\r\n\r\n    const { yyyy, mm, day } = splitDate(d);\r\n    return `${yyyy}${hyphen}${padTwo(mm)}${hyphen}${padTwo(day)}T00:00:00`;\r\n}\r\n\r\nexport function createDate(rawDateOnly: string | undefined): Date | undefined {\r\n    if (!isNullOrUndefined(rawDateOnly)) {\r\n        let dt = rawDateOnly.split('T');\r\n        let parts = dt[0].split(hyphen);\r\n        if (parts.length >= 3) {\r\n            const yyyy = Number(parts[0]);\r\n            const mm = Number(parts[1]) - 1;\r\n            const dd = Number(parts[2]);\r\n            const newDate = new Date(yyyy, mm, dd);\r\n            newDate.setFullYear(yyyy); // нужно чтоб работать с годом менее чем 100 лет от н.э.\r\n            newDate.setHours(0, 0, 0, 0);\r\n            return newDate;\r\n        }\r\n    }\r\n    return undefined\r\n}\r\n\r\nexport function addYears(date: Date, years: number): Date {\r\n    date.setFullYear(date.getFullYear() + years);\r\n    return date;\r\n}\r\n\r\nexport function addMonths(date: Date, months: number): Date {\r\n    date.setMonth(date.getMonth() + months);\r\n    return date;\r\n}\r\n\r\nexport function getMaskedDate(date: Date | string | undefined): string {\r\n    if (isNullOrUndefined(date)) { return ''; }\r\n\r\n    const d = new Date(date);\r\n    const mm = monthNames[d.getMonth()];\r\n    const day = d.getDate().toString();\r\n\r\n    return `${day} ${padTwo(mm)}`;\r\n}","import { useState, useCallback, DependencyList, useRef, useEffect, useMemo } from 'react';\r\nimport { NavigateFunction, useLocation, useNavigate } from 'react-router';\r\n\r\nexport class ProcessingAgrs {\r\n    public tag?: any;\r\n}\r\n\r\nexport function useProcessingOnlyOne(func: (e: ProcessingAgrs) => Promise<void>,\r\n    deps: DependencyList,\r\n    errorHandler: ((err: unknown) => void) | undefined = undefined): [boolean, (params?: any) => Promise<void>] {\r\n\r\n    const [isProcessing, setIsProcessing] = useStateSmart(false);\r\n\r\n    const callback = useCallback(async (params?: any) => {\r\n        if (isProcessing) { return };\r\n\r\n        setIsProcessing(true);\r\n\r\n        const args = new ProcessingAgrs();\r\n        args.tag = params;\r\n        try {\r\n            await func(args);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            if (errorHandler) {\r\n                errorHandler(error);\r\n            }\r\n        }\r\n        finally {\r\n            setIsProcessing(false);\r\n        }\r\n\r\n    }, [isProcessing, ...deps]);\r\n\r\n    return [isProcessing, callback];\r\n}\r\n\r\nexport function usePathnames(): string[] {\r\n    const location = useLocation();\r\n    return location.pathname.split('/');\r\n}\r\n\r\nexport function useMounted(funcEffect?: () => void) {\r\n    const mounted = useRef(true);\r\n    useEffect(() => {\r\n        if (funcEffect) {\r\n            funcEffect();\r\n        }\r\n        return () => { mounted.current = false };\r\n    }, []);\r\n\r\n    return mounted;\r\n}\r\n\r\nexport function useStateSmart<T>(initialState: T | (() => T), funcEffect?: () => void): [T, (newState: T | ((prev: T) => T)) => void] {\r\n    const [state, setState] = useState(initialState);\r\n    const mounted = useMounted(funcEffect);\r\n\r\n    const eventHandler = (newState: T | ((prev: T) => T)) => {\r\n        if (mounted.current) {\r\n            setState(newState);\r\n        }\r\n    };\r\n\r\n    return [state, eventHandler];\r\n}\r\n\r\nexport function useQuery() {\r\n    const { search } = useLocation();\r\n\r\n    return useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nexport function useNavigateSearch () {\r\n    const navigate = useNavigate();\r\n\r\n    return useNavigateSearchWithNav(navigate);\r\n};\r\n\r\nexport function useNavigateSearchWithNav(navigate: NavigateFunction) {\r\n    return (pathname, params) =>\r\n        navigate({ pathname, search: `?${new URLSearchParams(params)}` });\r\n};","import { RefObject } from 'react';\r\n\r\nexport class RefObjectExtensions {\r\n\r\n\tpublic static getValue(refObject: RefObject<HTMLInputElement>): string {\r\n\t\tif (refObject && refObject.current) {\r\n\t\t\treturn refObject.current.value;\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic static setValue(refObject: RefObject<HTMLInputElement>, val: string): void {\r\n\t\tif (refObject && refObject.current) {\r\n\t\t\trefObject.current.value = val;\r\n\t\t}\r\n\t}\r\n\r\n}","import * as React from 'react';\r\n\r\nimport { IValidation, MaxLengthValidation, IsRequiredValidation, ValidationResult, MinDateValidation, MaxDateValidation } from '../Forms';\r\n\r\nimport { dateToFormatYmd } from '../../utils/date-utils';\r\nimport { useStateSmart } from '../../utils/hooks';\r\nimport { RefObjectExtensions } from '../extensions/RefObjectExtensions';\r\n\r\nexport class ControlProps {\r\n    public validations: IValidation[] = [];\r\n    public title: string = '';\r\n    public onKeyPress?: React.KeyboardEventHandler<HTMLDivElement> = undefined;\r\n    public disabled?: boolean = false;\r\n    public initialValue?: string = undefined;\r\n    public onChangeValue?: () => void = undefined;\r\n    public allwaysDisabled?: boolean = false;\r\n    public isAutofocus?: boolean = false;\r\n}\r\n\r\nclass ControlState {\r\n    constructor(public validation: ValidationResult) {\r\n    }\r\n}\r\n\r\nexport abstract class Control {\r\n\r\n    private readonly emptyValidationResult = new ValidationResult(false, '');\r\n\r\n    private readonly state: [ControlState, (newState: ControlState | ((prev: ControlState) => ControlState)) => void];\r\n    protected inputRef: React.RefObject<HTMLInputElement>;\r\n    private readonly initialValueRef: React.MutableRefObject<string | undefined>;\r\n    private readonly isSetValueRef = React.useRef(false);\r\n\r\n    constructor(public props: ControlProps) {\r\n        this.inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n        this.state = useStateSmart(new ControlState(this.emptyValidationResult));\r\n        this.initialValueRef = React.useRef(props.initialValue);\r\n\r\n        this.onChangeValue = this.onChangeValue.bind(this);      \r\n    }\r\n\r\n    protected processNewValue(val: string): string {\r\n        return val;\r\n    }\r\n\r\n    public getValue(): string {\r\n        if (this.isSetValueRef.current || !this.initialValueRef.current) {\r\n            return RefObjectExtensions.getValue(this.inputRef);\r\n        }\r\n        return this.initialValueRef.current;\r\n    }\r\n\r\n    public setNewInitialValue(val?: string): void {\r\n        const v = this.setValueOnly(val);\r\n        this.initialValueRef.current = v;\r\n    }\r\n\r\n    public setValue(val?: string): void {\r\n        const v = this.setValueOnly(val);\r\n\r\n        const validResult = this.getValidResult(v);\r\n\r\n        this.initialValueRef.current = v;\r\n\r\n        this.isSetValueRef.current = true;\r\n\r\n        this.state[1](prev => ({ ...prev, validation: validResult }));\r\n    }\r\n\r\n    public isChanged(): boolean {\r\n        return (this.initialValueRef.current || '') !== this.getValue();\r\n    }\r\n\r\n    protected setValueInner(val?: string): void {\r\n        const v = this.setValueOnly(val);\r\n\r\n        const validResult = this.getValidResult(v);\r\n\r\n        this.isSetValueRef.current = true;\r\n\r\n        this.state[1](prev => ({ ...prev, validation: validResult }));\r\n    }\r\n\r\n    private setValueOnly(val?: string): string {\r\n        val = val ?? '';\r\n        const v = this.processNewValue(val);\r\n\r\n        RefObjectExtensions.setValue(this.inputRef, v);\r\n\r\n        return v;\r\n    }\r\n\r\n    protected onChangeValue(e): void {\r\n        let v = e.target.value ?? '';\r\n\r\n        v = this.processNewValue(v);\r\n\r\n        const validResult = this.getValidResult(v);\r\n\r\n        this.state[1](prev => ({ ...prev, validation: validResult }));\r\n\r\n        if (this.props.onChangeValue) {\r\n            this.props.onChangeValue();\r\n        }\r\n    };\r\n\r\n    private getValidResult(val: string): ValidationResult {\r\n        let validationResult: ValidationResult = this.emptyValidationResult;\r\n\r\n        if (this.props.validations.length !== 0) {\r\n            for (let item of this.props.validations) {\r\n                validationResult = item.validation(val);\r\n                if (validationResult.getInvalid()) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return validationResult;\r\n    }\r\n\r\n    /**\r\n     * Представление контрола на форме\r\n     */\r\n    public abstract view();\r\n\r\n    /**\r\n     * true - ошибок нет\r\n     * false - есть ошибки\r\n     */\r\n    public validation(): boolean {\r\n        const v = this.getValue();\r\n\r\n        const validResult = this.getValidResult(v);\r\n\r\n        this.state[1](prev => ({ ...prev, validation: validResult }));\r\n\r\n        return !validResult.getInvalid();\r\n    }\r\n\r\n    /**\r\n     * true - ошибок нет\r\n     * false - есть ошибки\r\n     */\r\n    public isValid(): boolean {\r\n        const v = this.getValue();\r\n\r\n        const validResult = this.getValidResult(v);\r\n\r\n        return !validResult.getInvalid();\r\n    }\r\n\r\n    public focus() {\r\n        if (this.inputRef && this.inputRef.current) {\r\n            this.inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    protected isRequired(): boolean {\r\n        return this.props.validations.some(x => x instanceof IsRequiredValidation);\r\n    }\r\n\r\n    protected getStyleField() {\r\n        return {\r\n            margin: (theme) => theme.spacing(2, 1, 1).toString() + ' !important',\r\n        };\r\n    }\r\n\r\n    protected getInputPropsBase(): {} {\r\n        const inputProps = {\r\n        };\r\n        if (this.props.validations) {\r\n            this.setMaxLength(inputProps);\r\n            this.setMaxDate(inputProps);\r\n            this.setMinDate(inputProps);\r\n        }\r\n        return inputProps;\r\n    }\r\n\r\n    protected getValidationInfo(): ValidationResult {\r\n        return this.state[0].validation;\r\n    }\r\n\r\n    private setMaxLength(inputProps: {}): void {\r\n        const maxLengthValidation = this.props.validations.find(x => x instanceof MaxLengthValidation) as MaxLengthValidation\r\n        if (maxLengthValidation) {\r\n            inputProps['maxLength'] = maxLengthValidation.maxLength;\r\n        }\r\n    }\r\n\r\n    private setMaxDate(inputProps: {}): void {\r\n        const maxValidation = this.props.validations.find(x => x instanceof MaxDateValidation) as MaxDateValidation\r\n        if (maxValidation) {\r\n            inputProps['max'] = dateToFormatYmd(maxValidation.maxDate);\r\n        }\r\n    }\r\n\r\n    private setMinDate(inputProps: {}): void {\r\n        const mimValidation = this.props.validations.find(x => x instanceof MinDateValidation) as MinDateValidation\r\n        if (mimValidation) {\r\n            inputProps['min'] = dateToFormatYmd(mimValidation.minDate);\r\n        }\r\n    }\r\n\r\n}","import { TextField } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nimport { ControlProps, Control } from '../Forms';\r\nimport InputMask from 'react-input-mask';\r\n\r\nexport class MaskControlProps extends ControlProps {\r\n\r\n}\r\n\r\nexport abstract class MaskControl extends Control {\r\n\r\n    constructor(public props: MaskControlProps,\r\n        protected mask: string, protected maskChar: string) {\r\n\r\n        super(props);\r\n    }\r\n\r\n    protected abstract clean(val: string): string;\r\n\r\n    protected override processNewValue(val: string): string {\r\n        return this.clean(val);\r\n    }\r\n\r\n    public override getValue() {\r\n        return this.clean(super.getValue());\r\n    }\r\n\r\n    public view() {\r\n\r\n        const isRequired = this.isRequired();\r\n        const inputProps = this.getInputPropsBase();\r\n\r\n        const field = this.getStyleField();\r\n\r\n        return (<InputMask mask={this.mask}\r\n            maskChar={this.maskChar}\r\n            disabled={this.props.disabled}\r\n            value={this.getValue()}\r\n            onChange={this.onChangeValue}\r\n        >\r\n            {() => <TextField\r\n                inputRef={this.inputRef}\r\n                sx={field}\r\n                disabled={this.props.disabled}\r\n                error={this.getValidationInfo().getInvalid()}\r\n                helperText={this.getValidationInfo().getErrorText()}\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label={this.props.title}\r\n                type=\"text\"\r\n                required={isRequired}\r\n                variant=\"outlined\"\r\n                autoFocus={this.props.isAutofocus}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={inputProps}\r\n            />}\r\n        </InputMask>);\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport { Control, ControlProps } from '../Forms';\r\n\r\nimport { TextField } from '@mui/material';\r\n\r\nexport class InputControlProps extends ControlProps {\r\n\r\n}\r\n\r\nexport class InputControl extends Control {\r\n\r\n    constructor(public props: InputControlProps) {\r\n        super(props);\r\n    }\r\n\r\n    public view() {\r\n        const isRequired = this.isRequired();\r\n        const inputProps = this.getInputPropsBase();\r\n\r\n        const field = this.getStyleField();\r\n\r\n        return (<TextField sx={field}\r\n            inputRef={this.inputRef}\r\n            onChange={this.onChangeValue}\r\n            value={this.getValue()}\r\n            onKeyPress={this.props.onKeyPress}\r\n            disabled={this.props.disabled}\r\n            error={this.getValidationInfo().getInvalid()}\r\n            helperText={this.getValidationInfo().getErrorText()}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label={this.props.title}\r\n            type=\"text\"\r\n            required={isRequired}\r\n            variant=\"outlined\"\r\n            autoFocus={this.props.isAutofocus}\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            inputProps={inputProps}\r\n        />);\r\n    }\r\n\r\n}","import * as React from 'react';\r\n\r\nimport { Control, ControlProps } from '../Forms';\r\n\r\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { useStateSmart } from '../../utils/hooks';\r\n\r\nexport class PasswordControlProps extends ControlProps {\r\n\r\n    public autocomplete?: string = 'current-password';\r\n}\r\n\r\nexport class PasswordControl extends Control {\r\n\r\n    private readonly statePassword: [boolean, (newState: boolean | ((prev: boolean) => boolean)) => void];\r\n\r\n    constructor(public props: PasswordControlProps) {\r\n        super(props);\r\n        this.statePassword = useStateSmart<boolean>(false);\r\n    }\r\n\r\n    public override view() {\r\n\r\n        const isRequired = this.isRequired();\r\n\r\n        const inputProps = this.getInputPropsBase();\r\n\r\n        const field = this.getStyleField();\r\n\r\n        const handleClickShowPassword = () => {\r\n            this.statePassword[1](prev => !prev);\r\n        };\r\n\r\n        const handleMouseDownPassword = (event) => {\r\n            event.preventDefault();\r\n        };\r\n\r\n        const showPassword = this.statePassword[0];\r\n\r\n        return (<TextField sx={field}\r\n            inputRef={this.inputRef}\r\n            onChange={this.onChangeValue}\r\n            value={this.getValue()}\r\n            onKeyPress={this.props.onKeyPress}\r\n            disabled={this.props.disabled}\r\n            error={this.getValidationInfo().getInvalid()}\r\n            helperText={this.getValidationInfo().getErrorText()}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label={this.props.title}\r\n            type={showPassword ? 'text' : 'password'}\r\n            required={isRequired}\r\n            variant=\"outlined\"\r\n            autoFocus={this.props.isAutofocus}\r\n            autoComplete={this.props.autocomplete}\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            inputProps={inputProps}\r\n            InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            size='small'\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                        >\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n        />);\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport { Control, ControlProps } from '../Forms';\r\n\r\nimport { dateToFormatYmd, dateYmdToFormatJson } from '../../utils/date-utils';\r\nimport { TextField } from '@mui/material';\r\n\r\nexport class DateControlProps extends ControlProps {\r\n\r\n}\r\n\r\nexport class DateControl extends Control {\r\n\r\n    constructor(public props: DateControlProps) {\r\n        super(props);\r\n    }\r\n\r\n    public getValueToJson(): string | undefined {\r\n        var raw = super.getValue();\r\n        if (raw) {\r\n            return dateYmdToFormatJson(raw);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected override processNewValue(val: string): string {\r\n        if (val) {\r\n            return dateToFormatYmd(new Date(val));\r\n        }\r\n        return val;\r\n    }\r\n\r\n    public override view() {\r\n        const isRequired = this.isRequired();\r\n        const inputProps = this.getInputPropsBase();\r\n\r\n        const field = this.getStyleField();\r\n\r\n        return (<TextField sx={field}\r\n            inputRef={this.inputRef}\r\n            onChange={this.onChangeValue}\r\n            value={this.getValue()}\r\n            disabled={this.props.disabled}\r\n            error={this.getValidationInfo().getInvalid()}\r\n            helperText={this.getValidationInfo().getErrorText()}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label={this.props.title}\r\n            type=\"date\"\r\n            required={isRequired}\r\n            variant=\"outlined\"\r\n            autoFocus={this.props.isAutofocus}\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            inputProps={inputProps}\r\n        />);\r\n    }\r\n}","import { MaskControl, MaskControlProps } from '../Forms';\r\n\r\nexport class PhoneNumberControlProps extends MaskControlProps {\r\n\r\n}\r\n\r\nexport class PhoneNumberControl extends MaskControl {\r\n\r\n    constructor(public props: PhoneNumberControlProps) {\r\n        super(props, '+7 999 999 99 99', ' ');\r\n    }\r\n\r\n    protected override clean(val: string): string {\r\n        if (val) {\r\n            val = val.replace(/\\D+/g, '');\r\n        }\r\n        return val;\r\n    }\r\n\r\n}","import * as React from 'react';\r\n\r\nimport { Control, ControlProps, ItemInfo } from '../Forms';\r\n\r\nimport { FormControl, FormControlLabel, FormHelperText, FormLabel, Radio, RadioGroup, TextField } from '@mui/material';\r\n\r\nexport class RadioButtonsControlProps extends ControlProps {\r\n\r\n    constructor(public items: ItemInfo[]) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class RadioButtonsControl extends Control {\r\n\r\n    constructor(public props: RadioButtonsControlProps) {\r\n        super(props);\r\n    }\r\n\r\n    public view() {\r\n\r\n        const onChangeValue = (e) => {\r\n            const val = e.target.value;\r\n            this.setValueInner(val);\r\n\r\n            if (this.props.onChangeValue) {\r\n                this.props.onChangeValue();\r\n            }\r\n        };\r\n\r\n        const field = this.getStyleField();\r\n\r\n        return (<FormControl sx={field} component=\"fieldset\" disabled={this.props.disabled}>\r\n            <FormLabel component=\"legend\">{this.props.title}</FormLabel>\r\n            <TextField sx={{\r\n                display: 'none !important',\r\n            }}\r\n                inputRef={this.inputRef}\r\n                value={this.getValue()}\r\n            />\r\n            <RadioGroup row name=\"row-radio-buttons-group\" value={this.getValue()} onChange={onChangeValue}>\r\n                {this.props.items.map((item, ind) =>\r\n                    <FormControlLabel key={ind} value={item.value} control={<Radio />} label={item.text} />)}\r\n            </RadioGroup>\r\n            {this.getValidationInfo().getInvalid() ?\r\n                <FormHelperText error={this.getValidationInfo().getInvalid()}>{this.getValidationInfo().getErrorText()}</FormHelperText> : null}\r\n        </FormControl>);\r\n    }\r\n\r\n}","\r\nexport interface IValidation {\r\n    validation(val?: string): ValidationResult;\r\n}\r\n\r\nexport class ValidationResult {\r\n\r\n    constructor(private invalid: boolean,\r\n        private errorText: string) {\r\n    }\r\n\r\n    public getErrorText() {\r\n        return this.invalid ? this.errorText : '';\r\n    }\r\n\r\n    public getInvalid() {\r\n        return this.invalid;\r\n    }\r\n}","import { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nconst requiredFieldText: string = 'Не может быть пусто';\r\nconst cannotContainOnlySpacesFieldText: string = 'Не может содержать одни пробелы';\r\n\r\nexport class IsRequiredValidation implements IValidation {\r\n    validation(val?: string): ValidationResult {\r\n        let isValid = false;\r\n        let errorText = '';\r\n        if (val) {\r\n            isValid = true;\r\n            const spaces = val.trim();\r\n            if (spaces === '') {\r\n                isValid = false;\r\n                errorText = cannotContainOnlySpacesFieldText;\r\n            }\r\n        }\r\n        else {\r\n            errorText = requiredFieldText;\r\n        }\r\n        return new ValidationResult(!isValid, errorText);\r\n    }\r\n}","import { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nexport class PhoneNumberValidation implements IValidation {\r\n    private readonly lenPhone = 11;\r\n\r\n    validation(val?: string): ValidationResult {\r\n        let invalid = false;\r\n        let errorText = '';\r\n        if (val) {\r\n            val = val.replace(/\\D+/g, '');// Оставляем только цифры\r\n            if (val.length !== this.lenPhone) {\r\n                invalid = true;\r\n                errorText = `Номер телефона должен содержать ${this.lenPhone} цифр`;\r\n            }\r\n        }\r\n        return new ValidationResult(invalid, errorText)\r\n    }\r\n}","import { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nexport class MaxLengthValidation implements IValidation {\r\n    constructor(public maxLength: number) {\r\n\r\n    }\r\n\r\n    validation(val?: string): ValidationResult {\r\n        let isValid = true;\r\n        let errorText = '';\r\n        if (val) {\r\n            const len = val.length;\r\n            if (len > this.maxLength) {\r\n                isValid = false;\r\n                errorText = `Превышена максимальная длина. Ожидалось ${this.maxLength}`;\r\n            }\r\n        }\r\n        return new ValidationResult(!isValid, errorText);\r\n    }\r\n}","import { createDate, dateToFormatYmd } from \"../../utils/date-utils\";\r\nimport { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nexport class MinDateValidation implements IValidation {\r\n    constructor(public minDate: Date) {\r\n\r\n    }\r\n\r\n    validation(val?: string): ValidationResult {\r\n        let isValid = true;\r\n        let errorText = '';\r\n\r\n        if (val) {\r\n            const curDate = createDate(val);\r\n            if (curDate && curDate < this.minDate) {\r\n                isValid = false;\r\n                errorText = `Дата должна быть больше или равна ${dateToFormatYmd(this.minDate)}`;\r\n            }\r\n        }\r\n        return new ValidationResult(!isValid, errorText);\r\n    }\r\n\r\n    public static getMinDate(): MinDateValidation {\r\n        return new MinDateValidation(new Date(1901, 0, 1));\r\n    }\r\n}","import { createDate, dateToFormatYmd } from \"../../utils/date-utils\";\r\nimport { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nexport class MaxDateValidation implements IValidation {\r\n    constructor(public maxDate: Date) {\r\n\r\n    }\r\n\r\n    validation(val?: string): ValidationResult {\r\n        let isValid = true;\r\n        let errorText = '';\r\n\r\n        if (val) {\r\n            const curDate = createDate(val);\r\n            if (curDate && curDate > this.maxDate) {\r\n                isValid = false;\r\n                errorText = `Дата должна быть меньше или равна ${dateToFormatYmd(this.maxDate)}`;\r\n            }\r\n        }\r\n        return new ValidationResult(!isValid, errorText);\r\n    }\r\n\r\n}","import { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nexport class EmailValidation implements IValidation {\r\n\r\n    private static readonly MAIL_FORMAT = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n\r\n    validation(val?: string): ValidationResult {\r\n        let invalid = true;\r\n        let errorText = 'Адрес электронной почты некорректный';\r\n        if (!val || val.match(EmailValidation.MAIL_FORMAT)) {\r\n            invalid = false;\r\n            errorText = '';\r\n        }\r\n        return new ValidationResult(invalid, errorText)\r\n    }\r\n}","import { IValidation, ValidationResult } from \"./Validation\";\r\n\r\nexport class MinLengthValidation implements IValidation {\r\n    constructor(public minLength: number) {\r\n\r\n    }\r\n\r\n    validation(val?: string): ValidationResult {\r\n        let isValid = true;\r\n        let errorText = '';\r\n        if (val) {\r\n            const len = val.length;\r\n            if (len < this.minLength) {\r\n                isValid = false;\r\n                errorText = `Длина должна быть не менее ${this.minLength}`;\r\n            }\r\n        }\r\n        return new ValidationResult(!isValid, errorText);\r\n    }\r\n}","\r\nexport class ItemInfo {\r\n    constructor(public value: string,\r\n        public text: string) { }\r\n}","\r\nexport enum QueryPath {\r\n    FORBIDDEN_RESOURCE = 'resource',\r\n    BACK = 'back',\r\n    ERROR = 'error',\r\n    TARGET = 'target',\r\n}","\r\nexport class HttpRequestError extends Error {\r\n    constructor(statusCode: number, message?: string) {\r\n        super(message);\r\n        this.statusCode = statusCode;\r\n    }\r\n\r\n    statusCode: number;\r\n\r\n    public static createFromPromiseCatch(err: any): HttpRequestError {\r\n        if (err instanceof HttpRequestError) {\r\n            return err;\r\n        }\r\n        else {\r\n            console.log(err);\r\n\r\n            return new HttpRequestError(0, 'Что-то пошло не так. Код ошибки F-0');\r\n        }\r\n    }\r\n}","\r\nexport class FullName {\r\n    constructor(\r\n        public readonly name: string,\r\n        public readonly surname: string,\r\n        public readonly patronymic?: string) { }\r\n\r\n    public ToString(): string {\r\n        const s = this.surname || '';\r\n        const f = this.name || '';\r\n        if (this.patronymic) {\r\n            return `${s} ${f} ${this.patronymic}`;\r\n        }\r\n        return `${s} ${f}`;\r\n    }\r\n}","import { FullName, Guid } from \"../../../sharedModels/indexSharedModels\";\r\n\r\n\r\nexport class ProfileUser {\r\n\tconstructor(\r\n\t\tpublic fullName?: FullName,\r\n\t\tpublic avatarUrl?: string,\r\n\t\tpublic userName?: string) {\r\n\t}\r\n}","import { ICommandPromise, ICommandPromiseWithResult } from \"./ICommand\";\r\nimport { IPipelineBehavior } from \"./IPipelineBehavior\";\r\nimport { ISender } from \"./ISender\";\r\n\r\nexport class Mediator implements ISender {\r\n\r\n    private readonly pipelineBehaviors: IPipelineBehavior[] | undefined;\r\n\r\n    constructor(pipelineBehaviors: IPipelineBehavior[] | undefined = undefined) {\r\n        this.pipelineBehaviors = pipelineBehaviors;\r\n    }\r\n\r\n    send(request: ICommandPromise): Promise<void>\r\n    send<TResult>(request: ICommandPromiseWithResult<TResult>): Promise<TResult>;\r\n    send<TResult>(request: ICommandPromise | ICommandPromiseWithResult<TResult>): Promise<void> | Promise<TResult> {\r\n        let handler = () => request.execute();\r\n\r\n        if (this.pipelineBehaviors) {\r\n            handler = this.pipelineBehaviors\r\n                .reverse()\r\n                .reduce((next, pipeline) => () => pipeline.handle(request, next), handler);\r\n        }\r\n\r\n        return handler();\r\n    }\r\n\r\n}","import { IBusEvent } from \"./IBusEvent\";\r\nimport { IConsumer } from \"./IConsumer\";\r\n\r\nexport class MessageBrokerConfig {\r\n\r\n    private static consumers: IConsumer<IBusEvent>[] = [];\r\n\r\n    public static RegistraionConsumer(consumer: IConsumer<IBusEvent>) {\r\n        MessageBrokerConfig.consumers.push(consumer);\r\n    }\r\n\r\n    public static getConsumers(): IConsumer<IBusEvent>[] {\r\n        return MessageBrokerConfig.consumers;\r\n    }\r\n}","import { IBusEvent } from \"./IBusEvent\";\r\nimport { IServiceBus } from \"./IServiceBus\";\r\nimport { MessageBrokerConfig } from \"./MessageBrokerConfig\";\r\n\r\nexport class MemoryServiceBus implements IServiceBus {\r\n\r\n    publishEvent(event: IBusEvent): Promise<void> {\r\n        return new Promise(_ => {\r\n            const cunsumers = MessageBrokerConfig.getConsumers()\r\n                .filter(x => x.eventName === event.eventName);\r\n\r\n            if (cunsumers.length === 0) {\r\n                console.log('Отсутствует потребитель события ' + event.eventName);\r\n\r\n                throw new Error(\"Что-то пошло не так. Код ошибки F-50\");\r\n            }\r\n\r\n            cunsumers.forEach(async x => await x.Consume(event));\r\n        });\r\n    }\r\n\r\n}","import { Token } from \"../../../../../utils/Token\";\r\n\r\nexport class TokenService {\r\n\r\n    clear() {\r\n        Token.clear();\r\n    }\r\n\r\n    create(accessToken: string) {\r\n        const token = new Token();\r\n        token.save(accessToken);\r\n    }\r\n}","import { api } from './../../config/api';\r\nimport { HttpRequestError } from './HttpRequestError';\r\n\r\ninterface IOkApiResponse<TPayload> {\r\n    payload: TPayload;\r\n}\r\n\r\ninterface IErrorApiResponse<TPayload> {\r\n    payload: TPayload;\r\n}\r\n\r\ninterface IResponseErrorBadRequestModel extends IResponseErrorBaseModel {\r\n    errors?: { [key: string]: IErrorModel; };\r\n}\r\n\r\ninterface IErrorModel {\r\n    messages: string[];\r\n}\r\n\r\ninterface ITooManyRequestsResponse {\r\n    message?: string;\r\n}\r\n\r\ninterface IResponseErrorBaseModel {\r\n    messageBase?: string;\r\n}\r\n\r\nclass ErrorHandlerDef {\r\n\r\n    constructor(public message: string,\r\n        public handler: (resp: Response, msg: string, hrefOfCalledPage?: string) => Promise<Response> | undefined) {\r\n    }\r\n}\r\n\r\nexport class HttpClient {\r\n    private static readonly ERR_CONNECTION_REFUSED_TEXT = 'Отсутствует соединение с сервером';\r\n\r\n    private static readonly POST: string = 'POST';\r\n    private static readonly PUT: string = 'PUT';\r\n    private static readonly GET: string = 'GET';\r\n    private static readonly DELETE: string = 'DELETE';\r\n    private static readonly MEMI_APP_JSON = 'application/json';\r\n\r\n    private abortController: AbortController | null = null;\r\n    private readonly locationWhereCalled: string;\r\n\r\n    constructor(private accessToken: string | null = null,\r\n        private isAllowCanceling: boolean = false, \r\n        public headers: Map<string, string> | null = null) {\r\n        this.locationWhereCalled = location.href;\r\n    }\r\n\r\n    private static sharedErrorMessages: { [key: number]: ErrorHandlerDef } =\r\n        HttpClient.getDefaultSharedErrorMessages();\r\n\r\n    private static getDefaultSharedErrorMessages(): { [key: number]: ErrorHandlerDef } {\r\n        const result: { [key: number]: ErrorHandlerDef } = {};\r\n\r\n        return result;\r\n    }\r\n\r\n    private defaultErrorMessages: { [key: number]: ErrorHandlerDef } =\r\n        this.getDefaultErrorMessages();\r\n\r\n    private static createHttpRequestError(statusCode: number, message: string): HttpRequestError {\r\n        return new HttpRequestError(statusCode, message);\r\n    }\r\n\r\n    private pushErrorMessage(pull: { [key: number]: ErrorHandlerDef }, statusCode: number, handler: ErrorHandlerDef): void {\r\n        const val = pull[statusCode];\r\n        if (val) {\r\n            if (!val.message) {\r\n                val.message = handler.message;\r\n            }\r\n            if (!val.handler) {\r\n                val.handler = handler.handler;\r\n            }\r\n        }\r\n        else {\r\n            pull[statusCode] = handler;\r\n        }\r\n    }\r\n\r\n    private getDefaultErrorMessages(): { [key: number]: ErrorHandlerDef } {\r\n        const result = HttpClient.sharedErrorMessages;\r\n\r\n        this.pushErrorMessage(result, 0, {\r\n            message: HttpClient.ERR_CONNECTION_REFUSED_TEXT,\r\n            handler: this.processEmptyError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 400, {\r\n            message: 'Данные не корректны',\r\n            handler: (response, msgDefault) => {\r\n                if (response.body) {\r\n                    return (response.json() as Promise<IErrorApiResponse<IResponseErrorBadRequestModel>>)\r\n                        .catch(() => { throw HttpClient.createHttpRequestError(response.status, msgDefault); })\r\n                        .then(resp => {\r\n                            if (resp && resp.payload) {\r\n                                const err = resp.payload;\r\n                                let message = resp.payload.messageBase || '';\r\n                                if (err.errors) {\r\n                                    for (const [key, value] of Object.entries(err.errors)) {\r\n                                        if (value.messages) {\r\n                                            if (message) {\r\n                                                message += '. ';\r\n                                            }\r\n                                            message += value.messages.join(' ');\r\n                                        }\r\n                                    }\r\n                                }\r\n                                throw HttpClient.createHttpRequestError(response.status, message ? message : msgDefault);\r\n                            }\r\n                            throw HttpClient.getUnexpectedResponseFromServer();\r\n                        });\r\n                }\r\n                throw HttpClient.createHttpRequestError(response.status, msgDefault);\r\n            }\r\n        });\r\n\r\n        this.pushErrorMessage(result, 401, {\r\n            message: 'Вы не авторизованы',\r\n            handler: this.processEmptyError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 403, {\r\n            message: 'Доступ запрещён',\r\n            handler: this.processEmptyError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 404, {\r\n            message: 'Запрашиваемый ресурс не найден',\r\n            handler: this.processStandardError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 405, {\r\n            message: 'Метод не поддерживается',\r\n            handler: this.processEmptyError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 409, {\r\n            message: 'Отсутствует соединение с сервером',\r\n            handler: this.processStandardError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 429, {\r\n            message: 'Достигнут предел кол-ва попыток',\r\n            handler: (response, msgDefault) => {\r\n                if (response.body) {\r\n                    return (response.json() as Promise<IErrorApiResponse<ITooManyRequestsResponse>>)\r\n                        .catch(() => { throw HttpClient.createHttpRequestError(response.status, msgDefault); })\r\n                        .then(resp => {\r\n                            if (resp && resp.payload) {\r\n                                throw HttpClient.createHttpRequestError(response.status, msgDefault);\r\n                            }\r\n                            throw HttpClient.getUnexpectedResponseFromServer();\r\n                        });\r\n                }\r\n                throw HttpClient.createHttpRequestError(response.status, msgDefault);\r\n            }\r\n        });\r\n\r\n        this.pushErrorMessage(result, 500, {\r\n            message: 'Внутренняя ошибка сервера',\r\n            handler: this.processStandardError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 503, {\r\n            message: 'Сервер недоступен',\r\n            handler: this.processEmptyError\r\n        });\r\n\r\n        this.pushErrorMessage(result, 504, {\r\n            message: 'Таймаут',\r\n            handler: this.processEmptyError\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private processStandardError(response: Response, msgDefault: string): Promise<Response> {\r\n        if (response.body) {\r\n            return (response.json() as Promise<IErrorApiResponse<IResponseErrorBaseModel>>)\r\n                .catch(() => { throw HttpClient.createHttpRequestError(response.status, msgDefault); })\r\n                .then(resp => {\r\n                    if (resp && resp.payload) {\r\n                        const err = resp.payload;\r\n                        const message = err.messageBase || '';\r\n                        throw HttpClient.createHttpRequestError(response.status, message ? message : msgDefault);\r\n                    }\r\n                    throw HttpClient.getUnexpectedResponseFromServer();\r\n                });\r\n        }\r\n        throw HttpClient.createHttpRequestError(response.status, msgDefault);\r\n    }\r\n\r\n    private processEmptyError(response: Response, msgDefault: string): Promise<Response> {\r\n        throw HttpClient.createHttpRequestError(response.status, msgDefault);\r\n    }\r\n\r\n    private static getUnexpectedResponseFromServer(): HttpRequestError {\r\n        return HttpClient.createHttpRequestError(0, 'Непредвиденный ответ от сервера');\r\n    }\r\n\r\n    private processHandler<TOkPayload>(response: Response): Promise<TOkPayload> {\r\n        if (!response.ok) { // Обработка ошибок\r\n            const status = response.status;\r\n            const handlerDef = this.defaultErrorMessages[status];\r\n            if (handlerDef !== undefined) {\r\n                let h = handlerDef.handler(response, handlerDef.message, this.locationWhereCalled);\r\n                if (!h) {\r\n                    h = this.processStandardError(response, handlerDef.message);\r\n                }\r\n                return h.then(() => undefined as unknown as TOkPayload);\r\n            }\r\n            throw HttpClient.createHttpRequestError(response.status, 'Непредвиденная ошибка сервера');\r\n        }\r\n\r\n        return (response.json() as Promise<IOkApiResponse<TOkPayload>>)\r\n            .then(ok => {\r\n                if (ok && ok.payload) {\r\n                    return ok.payload;\r\n                }\r\n                throw HttpClient.getUnexpectedResponseFromServer();\r\n            });\r\n    }\r\n\r\n    private getFullUrl(url: string): string {\r\n        let baseUrl = api.rootApiUrl;\r\n        if (!baseUrl) {\r\n            baseUrl = '';\r\n        }\r\n        return url = url.startsWith('/') ? baseUrl + url : url;\r\n    }\r\n\r\n    private send<TOkPayload>(input: RequestInfo, method: string, data?: any): Promise<TOkPayload> {\r\n        const headers: Headers = new Headers();\r\n        headers.append('Accept', HttpClient.MEMI_APP_JSON);\r\n\r\n        // Добавить Content-Type\r\n        if (method === HttpClient.POST || method === HttpClient.PUT) {\r\n            headers.append('Content-Type', HttpClient.MEMI_APP_JSON);\r\n        }\r\n\r\n        // Добавить Authorization\r\n        if (this.accessToken) {\r\n            headers.append('Authorization', `Bearer ${this.accessToken}`);\r\n        }\r\n\r\n        if (this.headers) {\r\n            this.headers.forEach((v, k) => headers.append(k, v))\r\n        }\r\n\r\n        const init: RequestInit = {\r\n            method: method,\r\n            body: data ? JSON.stringify(data) : null,\r\n            headers: headers\r\n        }\r\n\r\n        // установить абсолютный url, если требуется.\r\n        if (input instanceof Request) {\r\n            const req = (input as Request);\r\n            input = new Request(this.getFullUrl(req.url), req);\r\n        }\r\n        else {\r\n            const url: string = input as string;\r\n            input = this.getFullUrl(url);\r\n        }\r\n\r\n        // Установить сигнал отмены, если включена данная опция\r\n        if (this.isAllowCanceling) {\r\n            this.abortController = new AbortController();\r\n            init.signal = this.abortController.signal;\r\n        }\r\n\r\n        // отправить реальный запрос\r\n        return fetch(input, init).catch(async () => { // Сбой сети или что-то помешало связаться с сервером\r\n            if (HttpClient.handlerErrConnectionRefuused) {\r\n                await HttpClient.handlerErrConnectionRefuused();\r\n\r\n                return undefined;\r\n            }\r\n            throw HttpClient.createHttpRequestError(0, HttpClient.ERR_CONNECTION_REFUSED_TEXT);\r\n        }).then(response => {\r\n            if (response) {\r\n                return this.processHandler(response);\r\n            }\r\n\r\n            return undefined as unknown as TOkPayload;\r\n        });\r\n    }\r\n\r\n    private static handlerErrConnectionRefuused: () => Promise<void> | undefined;\r\n    public static setHandlerErrConnectionRefuused(handler: () => Promise<void> | undefined) {\r\n        HttpClient.handlerErrConnectionRefuused = handler;\r\n    }\r\n\r\n    public static addResponseHandlerByStatusCode(statusCode: number,\r\n        handler: (resp: Response, msgDefault: string, locationWhereCalled?: string) => Promise<Response> | undefined): void {\r\n\r\n        const handlerDef = HttpClient.sharedErrorMessages[statusCode];\r\n        if (handlerDef !== undefined) {\r\n            handlerDef.handler = handler;\r\n        }\r\n        else {\r\n            HttpClient.sharedErrorMessages[statusCode] = { message: '', handler: handler, };\r\n        }\r\n    }\r\n\r\n    public post<TOkPayload>(input: RequestInfo, data?: any): Promise<TOkPayload> {\r\n        return this.send<TOkPayload>(input, HttpClient.POST, data);\r\n    }\r\n\r\n    public put<TOkPayload>(input: RequestInfo, data: any): Promise<TOkPayload> {\r\n        return this.send<TOkPayload>(input, HttpClient.PUT, data);\r\n    }\r\n\r\n    public delete<TOkPayload>(input: RequestInfo): Promise<TOkPayload> {\r\n        return this.send<TOkPayload>(input, HttpClient.DELETE);\r\n    }\r\n\r\n    public get<TOkPayload>(input: RequestInfo): Promise<TOkPayload> {\r\n        return this.send<TOkPayload>(input, HttpClient.GET);\r\n    }\r\n\r\n    public cancel(): void {\r\n        if (this.isAllowCanceling && this.abortController) {\r\n            this.abortController.abort();\r\n        }\r\n    }\r\n}","import { Token } from \"../utils/Token\";\r\nimport { HttpClient } from \"../utils/web/HttpClient\";\r\n\r\nexport class HttpClientFactory {\r\n\r\n\tprivate static headerVersionName = 'api-version';\r\n\r\n\tpublic static createHttpClient(version: string | null = '1.0', isAllowCanceling: boolean = false): HttpClient {\r\n\t\tconst headers = new Map<string, string>();\r\n\t\tif (version) {\r\n\t\t\theaders.set(HttpClientFactory.headerVersionName, version);\r\n\t\t}\r\n\r\n\t\treturn new HttpClient(null, isAllowCanceling, headers);\r\n\t}\r\n\r\n\tpublic static createHttpClientWithAuth(version: string | null = '1.0', isAllowCanceling: boolean = false): HttpClient {\r\n\t\tconst headers = new Map<string, string>();\r\n\t\tif (version) {\r\n\t\t\theaders.set(HttpClientFactory.headerVersionName, version);\r\n\t\t}\r\n\r\n\t\treturn new HttpClient(Token.get(), isAllowCanceling, headers);\r\n\t}\r\n\r\n}","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { IAuthBaseInfoDto } from \"../../application/infrastructure/clients/IdentityClient/IAuthBaseInfoDto\";\r\nimport { IIdentityClient } from \"../../application/infrastructure/clients/IdentityClient/IIdentityClient\";\r\n\r\nexport class IdentityClient implements IIdentityClient {\r\n\r\n    public login(userName: string, password: string): Promise<IAuthBaseInfoDto> {\r\n        let passwordBase64 = window.btoa(password);\r\n        const data = {\r\n            userName: userName,\r\n            password: passwordBase64,\r\n        };\r\n        const urlAuth = '/api/auth/login';\r\n\r\n        const httpClient = HttpClientFactory.createHttpClient();\r\n\r\n        return httpClient.post<IAuthBaseInfoDto>(urlAuth, data);\r\n    }\r\n\r\n}","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { IInvitationCheckDto } from \"../../application/infrastructure/clients/InvitationsClient/IInvitationCheckDto\";\r\nimport { IInvitationsClient } from \"../../application/infrastructure/clients/InvitationsClient/IInvitationsClient\";\r\n\r\nexport class InvitationsClient implements IInvitationsClient {\r\n\r\n    private static readonly baseUrl = '/api/invitations';\r\n\r\n    checkInvitationCode(invitationCode: string): Promise<IInvitationCheckDto> {\r\n        const url = `${InvitationsClient.baseUrl}/check/${invitationCode}`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.post(url);\r\n    }\r\n\r\n}","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { IRegistrationClient } from \"../../application/infrastructure/clients/IRegistrationClient\";\r\n\r\nexport class RegistrationClient implements IRegistrationClient {\r\n\r\n\r\n    private static readonly baseUrl = '/api/registration';\r\n\r\n    private static getUserModel(userName: string, password: string) {\r\n        let passwordBase64 = window.btoa(password);\r\n        const data = {\r\n            userName: userName,\r\n            password: passwordBase64,\r\n        };\r\n\r\n        return data;\r\n    }\r\n\r\n    registrationUser(userName: string, password: string): Promise<void> {\r\n        const url = `${RegistrationClient.baseUrl}/user/`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n        const data = RegistrationClient.getUserModel(userName, password);\r\n\r\n        return httpClient.post(url, data);\r\n    }\r\n\r\n    registrationUserByCode(invitationCode: string, userName: string, password: string): Promise<void> {\r\n        const url = `${RegistrationClient.baseUrl}/user-by-code/${invitationCode}`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n        const data = RegistrationClient.getUserModel(userName, password);\r\n\r\n        return httpClient.post(url, data);\r\n    }\r\n}","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { IUserProfileDto } from \"../../application/infrastructure/clients/UsersClient/IUserProfileDto\";\r\nimport { IUsersClient } from \"../../application/infrastructure/clients/UsersClient/IUsersClient\";\r\n\r\nexport class UsersClient implements IUsersClient {\r\n    me(): Promise<IUserProfileDto> {\r\n        const url = '/api/users/me';\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.get(url);\r\n    }\r\n\r\n}","import { Mediator } from \"../../intermediary/indexIntermediary\";\r\nimport { IServiceBus } from \"../../messageBroker/IServiceBus\";\r\nimport { MemoryServiceBus } from \"../../messageBroker/MemoryServiceBus\";\r\nimport { IIdentityClient } from \"./application/infrastructure/clients/IdentityClient/IIdentityClient\";\r\nimport { IInvitationsClient } from \"./application/infrastructure/clients/InvitationsClient/IInvitationsClient\";\r\nimport { IRegistrationClient } from \"./application/infrastructure/clients/IRegistrationClient\";\r\nimport { IUsersClient } from \"./application/infrastructure/clients/UsersClient/IUsersClient\";\r\nimport { TokenService } from \"./application/infrastructure/services/TokenService\";\r\nimport { IdentityClient } from \"./infrastructure/clients/IdentityClient\";\r\nimport { InvitationsClient } from \"./infrastructure/clients/InvitationsClient\";\r\nimport { RegistrationClient } from \"./infrastructure/clients/RegistrationClient\";\r\nimport { UsersClient } from \"./infrastructure/clients/UsersClient\";\r\n\r\nexport class RegisterServiceCollection {\r\n\r\n    static getRegistrationClient(): IRegistrationClient {\r\n        return new RegistrationClient();\r\n    }\r\n\r\n    static getIdentityClient(): IIdentityClient {\r\n        return new IdentityClient();\r\n    }\r\n\r\n    static getTokenService(): TokenService {\r\n        return new TokenService();\r\n    }\r\n\r\n    static getUsersClient(): IUsersClient {\r\n        return new UsersClient();\r\n    }\r\n\r\n    static getInvitationsClient(): IInvitationsClient {\r\n        return new InvitationsClient();\r\n    }\r\n\r\n    private static serviceBus: IServiceBus = new MemoryServiceBus();\r\n    static getServiceBus(): IServiceBus {\r\n        return RegisterServiceCollection.serviceBus;\r\n    }\r\n\r\n    private static readonly mediator: Mediator = new Mediator();\r\n    public static GetMediator(): Mediator {\r\n        return RegisterServiceCollection.mediator;\r\n    }\r\n}","\r\n\r\nclass CacheItem<TValue> {\r\n\tconstructor(public value: TValue, public expPerSecond: number | undefined = undefined) { }\r\n}\r\n\r\nexport class LocalCache {\r\n\r\n\tpublic static Get<T>(key: string): T | undefined {\r\n\t\tconst item = localStorage.getItem(key);\r\n\r\n\t\tlet cacheItem: CacheItem<T> | undefined = undefined;\r\n\r\n\t\tif (item) {\r\n\t\t\ttry {\r\n\t\t\t\tcacheItem = JSON.parse(item);\r\n\t\t\t\tif (cacheItem) {\r\n\t\t\t\t\tif (cacheItem.expPerSecond && Date.now() >= cacheItem.expPerSecond) {\r\n\t\t\t\t\t\tcacheItem = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\tcacheItem = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn cacheItem?.value;\r\n\t}\r\n\r\n\tpublic static Push<T>(key: string, item: T, expPerSecond: number | undefined = undefined) {\r\n\t\tif (expPerSecond) {\r\n\t\t\texpPerSecond = Date.now() + expPerSecond * 1000;\r\n\t\t}\r\n\t\tconst cacheItem = new CacheItem(item, expPerSecond);\r\n\t\tlocalStorage.setItem(key, JSON.stringify(cacheItem));\r\n\t}\r\n\r\n\tpublic static Remove(key: string) {\r\n\t\tlocalStorage.removeItem(key);\r\n\t}\r\n}","import { CacheBase } from \"../../utils/caches/CacheBase\";\r\nimport { ProfileUser } from \"./domain/indexDomain\";\r\n\r\nexport class CurrentProfileUserCache extends CacheBase<ProfileUser> {\r\n\r\n\t// Константы\r\n\tprivate static readonly STORAGE_KEY: string = 'eas_public_profile';\r\n\r\n\tconstructor() {\r\n\t\tsuper(CurrentProfileUserCache.STORAGE_KEY);\r\n\t}\r\n}","import { LocalCache } from \"./LocalCache\";\r\n\r\nexport abstract class CacheBase<T> {\r\n\r\n\tconstructor(protected readonly storageKey: string) {\r\n\r\n\t}\r\n\r\n\tpublic save(value: T) {\r\n\t\tLocalCache.Push(this.storageKey, value, undefined);\r\n\t}\r\n\r\n\tpublic get(): T | undefined {\r\n\t\treturn LocalCache.Get(this.storageKey);\r\n\t}\r\n\r\n\tpublic delete() {\r\n\t\tLocalCache.Remove(this.storageKey);\r\n\t}\r\n\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { CurrentProfileUserCache } from \"../CurrentProfileUserCache\";\r\nimport { ProfileUser } from \"../domain/indexDomain\";\r\n\r\nclass CurrentProfileUserStore {\r\n\r\n\tprivate static readonly cache = new CurrentProfileUserCache();\r\n\tprivate _profile: ProfileUser | undefined = undefined;\r\n\r\n\tconstructor() {\r\n\t\tthis._profile = CurrentProfileUserStore.cache.get();\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\tpublic get Profile() {\r\n\t\treturn this._profile;\r\n\t}\r\n\r\n\tpublic set Profile(profile: ProfileUser | undefined) {\r\n\t\tthis._profile = profile;\r\n\t\tif (profile) {\r\n\t\t\tCurrentProfileUserStore.cache.save(profile);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tCurrentProfileUserStore.cache.delete();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const currentProfileUserStore = new CurrentProfileUserStore();","import { ICommandPromise } from \"../../../../intermediary/ICommand\";\r\nimport { FullName } from \"../../../../sharedModels/FullName\";\r\nimport { ProfileUser } from \"../../domain/indexDomain\";\r\nimport { RegisterServiceCollection } from \"../../RegisterServiceCollection\";\r\nimport { currentProfileUserStore } from \"../../stores/CurrentProfileUserStore\";\r\nimport { IIdentityClient } from \"../infrastructure/clients/IdentityClient/IIdentityClient\";\r\nimport { IUsersClient } from \"../infrastructure/clients/UsersClient/IUsersClient\";\r\n\r\nexport class LoginCommand implements ICommandPromise {\r\n\r\n    private readonly identityClient: IIdentityClient;\r\n    private readonly usersClient: IUsersClient;\r\n\r\n    constructor(public userName: string, public password: string) {\r\n        this.identityClient = RegisterServiceCollection.getIdentityClient();\r\n        this.usersClient = RegisterServiceCollection.getUsersClient();\r\n    }\r\n\r\n    execute() {\r\n\r\n        return this.identityClient.login(this.userName, this.password)\r\n            .then(resp => {\r\n                if (resp.accessToken) {\r\n                    RegisterServiceCollection.getTokenService().create(resp.accessToken);\r\n\r\n                    return Promise.resolve();\r\n                }\r\n\r\n                throw new Error('Вы не авторизованы');\r\n            })\r\n            .then(_ => this.usersClient.me()\r\n                .then(p => {\r\n                    currentProfileUserStore.Profile = new ProfileUser(\r\n                        new FullName(p.fullName.name, p.fullName.surname, p.fullName.patronymic),\r\n                        p.avatarUrl,\r\n                        p.userName);\r\n                })\r\n                .catch(err => {\r\n                    RegisterServiceCollection.getTokenService().clear();\r\n\r\n                    throw err;\r\n                })\r\n            )\r\n            .catch(err => {\r\n                RegisterServiceCollection.getTokenService().clear();\r\n\r\n                console.log(err);\r\n\r\n                throw new Error('Что-то пошло не так. Код ошибки F-10');\r\n            });\r\n    }\r\n}","import { IBusEvent } from \"../../../../messageBroker/IBusEvent\";\r\n\r\nexport class RegisterLoginedIntegrationEvent implements IBusEvent {\r\n    static EVENT_NAME = 'RegisterLoginedIntegrationEvent';\r\n\r\n    eventName: string = RegisterLoginedIntegrationEvent.EVENT_NAME;\r\n}","import { AccountCircle, ExitToApp } from '@mui/icons-material';\r\nimport { Avatar, Box, Button, Container, Link, Paper, Typography } from '@mui/material';\r\nimport { deepPurple } from '@mui/material/colors';\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { EmailValidation, FormDef, InputControl, IsRequiredValidation, MaxLengthValidation, PasswordControl } from '../../../../forms/Forms';\r\nimport { ColorHr, FormErrorMessage, FormRow } from '../../../../kit/kit';\r\nimport { useProcessingOnlyOne, useQuery, useStateSmart } from '../../../../utils/hooks';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { LoginCommand } from '../../application/features/LoginCommand';\r\nimport { RoutingByRegister } from '../../config/routingByRegister';\r\nimport { RegisterLoginedIntegrationEvent } from '../../contracts/events/RegisterLoginedIntegrationEvent';\r\nimport { RegisterServiceCollection } from '../../RegisterServiceCollection';\r\nimport { currentProfileUserStore } from '../../stores/CurrentProfileUserStore';\r\n\r\nclass LoginFormDef extends FormDef {\r\n    public userName = new InputControl({\r\n        validations: [new IsRequiredValidation(), new EmailValidation()],\r\n        title: 'Логин',\r\n        isAutofocus: true\r\n    });\r\n\r\n    public pwd = new PasswordControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(24)],\r\n        title: 'Пароль'\r\n    });\r\n}\r\n\r\nclass UserProfile {\r\n\r\n    constructor(public readonly userName: string | undefined, public readonly name: string | undefined,\r\n        public readonly avatarUrl: string | undefined) { }\r\n}\r\n\r\nclass LoginFormState {\r\n    constructor(public profile?: UserProfile, public errorMessage: string = '') {\r\n\r\n    }\r\n}\r\n\r\nconst mediator = RegisterServiceCollection.GetMediator();\r\n\r\nexport function LoginForm() {\r\n    const query = useQuery();\r\n    const error = query.get(QueryPath.ERROR) ?? '';\r\n\r\n    const [state, setState] = useStateSmart(\r\n        new LoginFormState(\r\n            new UserProfile(\r\n                currentProfileUserStore.Profile?.userName,\r\n                currentProfileUserStore.Profile?.fullName?.name,\r\n                currentProfileUserStore.Profile?.avatarUrl), error));\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const form = new LoginFormDef();\r\n\r\n    const [isLoading, login] = useProcessingOnlyOne(async () => {\r\n\r\n        if ((isShowProfile() && !form.pwd.validation()) || (!isShowProfile() && !form.validation())) {\r\n            return;\r\n        }\r\n\r\n        const profile = state.profile;\r\n        let userName = form.userName.getValue();\r\n        if (isShowProfile() && profile) {\r\n            userName = profile.userName || '';\r\n        }\r\n\r\n        const loginCommand = new LoginCommand(userName, form.pwd.getValue());\r\n\r\n        await mediator.send(loginCommand)\r\n            .then(async () => await RegisterServiceCollection.getServiceBus().publishEvent(new RegisterLoginedIntegrationEvent()))\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message }));\r\n            });\r\n\r\n    }, [navigation]);\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            login();\r\n        }\r\n    };\r\n\r\n    const getAvatarControl = () => {\r\n        const profile = state.profile;\r\n\r\n        if (!profile) { return undefined; }\r\n\r\n        const avatarStyle = {\r\n            width: (theme) => theme.spacing(12),\r\n            height: (theme) => theme.spacing(12),\r\n            margin: '0 auto',\r\n            marginBottom: (theme) => theme.spacing(2),\r\n        };\r\n\r\n        if (profile.avatarUrl) {\r\n            return (<Avatar sx={avatarStyle} alt={profile.name} src={profile.avatarUrl} />)\r\n        }\r\n\r\n        if (profile.name) {\r\n            return (<Avatar sx={{\r\n                ...avatarStyle, ...{\r\n                    color: (theme) => theme.palette.getContrastText(deepPurple[500]),\r\n                    backgroundColor: deepPurple[500],\r\n                }\r\n            }} >{profile.name}</Avatar>);\r\n        }\r\n        return (<AccountCircle sx={avatarStyle} />);\r\n    };\r\n\r\n    const getProfileControl = () => {\r\n        const profile = state.profile;\r\n\r\n        if (!profile) { return undefined; }\r\n\r\n        return (<>\r\n            <div>\r\n                {getAvatarControl()}\r\n            </div>\r\n            <Box component='div' sx={{\r\n                textAlign: 'center',\r\n                fontSize: 'calc(12px + 0.8vw)',\r\n                marginBottom: (theme) => theme.spacing(2),\r\n            }}>\r\n                Здравствуйте, {profile.name}\r\n            </Box>\r\n            <Box component='div' sx={{\r\n                textAlign: 'center',\r\n            }}>\r\n                <Link component=\"button\" disabled={isLoading} onClick={goToUserOther}>Другой пользователь</Link>\r\n            </Box>\r\n        </>);\r\n    };\r\n\r\n    const goToUserOther = () => {\r\n        setState(prev => ({\r\n            ...prev, profile: undefined\r\n        }));\r\n    };\r\n\r\n    const isShowProfile = (): boolean => {\r\n        return state.profile?.userName ? true : false;\r\n    };\r\n\r\n    const exit = (): void => {\r\n        currentProfileUserStore.Profile = undefined;\r\n\r\n        goToUserOther();\r\n    };\r\n\r\n    const registration = () => {\r\n        navigation(RoutingByRegister.REGISTRATION);\r\n    };\r\n\r\n    // Настройка формы\r\n    form.userName.props.onKeyPress = handleKeyDown;\r\n    form.pwd.props.onKeyPress = handleKeyDown;\r\n\r\n    form.setDisabled(isLoading);\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper sx={(theme) => ({\r\n                marginTop: theme.spacing(3),\r\n                marginBottom: theme.spacing(3),\r\n                padding: theme.spacing(2),\r\n                backgroundColor: 'var(--EAS-BACKGROUND-COLOR-PAPER-INNER)',\r\n            })}>\r\n                <Box component='div' sx={{\r\n                    marginTop: (theme) => theme.spacing(4),\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}>\r\n                    {!isShowProfile() && <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>}\r\n                    <FormErrorMessage message={state.errorMessage} />\r\n                    <Box component='div' sx={{\r\n                        width: '100%',\r\n                        marginTop: (theme) => theme.spacing(1),\r\n                    }}>\r\n                        {isShowProfile() && getProfileControl()}\r\n                        {!isShowProfile() && <FormRow>{form.userName.view()}</FormRow>}\r\n                        <FormRow>\r\n                            {form.pwd.view()}\r\n                        </FormRow>\r\n                        <FormRow>\r\n                            <Button variant=\"contained\" color=\"primary\" sx={{\r\n                                margin: (theme) => theme.spacing(3, 1, 2),\r\n                            }}\r\n                                disabled={isLoading} onClick={login} fullWidth>Войти</Button>\r\n                        </FormRow>\r\n                    </Box>\r\n                    {isShowProfile() && <Box component='div' sx={{\r\n                        textAlign: 'right',\r\n                        width: '100%',\r\n                    }}>\r\n                        <Button variant='text' sx={{\r\n                            fontSize: 'var(--SMF-FONT-SIZE-SMALL-TEXT)',\r\n                            marginRight: (theme) => theme.spacing(1),\r\n                        }}\r\n                            disabled={isLoading}\r\n                            endIcon={<ExitToApp />} onClick={exit}>Выйти</Button>\r\n                    </Box>}\r\n\r\n                    <Box component='div' sx={{\r\n                        width: '100%',\r\n                        marginTop: (theme) => theme.spacing(3),\r\n                    }}><ColorHr /></Box>\r\n                    <FormRow>\r\n                        <Button variant=\"outlined\" color=\"primary\" sx={{\r\n                            margin: (theme) => theme.spacing(1, 1, 2),\r\n                        }}\r\n                            disabled={isLoading} onClick={registration} fullWidth>Регистрация</Button>\r\n                    </FormRow>\r\n                </Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}","import * as React from \"react\";\r\n\r\nimport { PageContent } from \"../../../../kit/kit\";\r\nimport { LoginForm } from \"./Login.form\";\r\n\r\nexport function LoginPage() {\r\n    return (\r\n        <>\r\n            <PageContent>\r\n                <LoginForm />\r\n            </PageContent>\r\n        </>\r\n    );\r\n}","import { IBusEvent } from \"../../../../messageBroker/IBusEvent\";\r\n\r\nexport class ErrorRegisterIntegrationEvent implements IBusEvent {\r\n    static EVENT_NAME = 'ErrorRegisterIntegrationEvent';\r\n\r\n    constructor(readonly errorMessage: string) { }\r\n\r\n    eventName: string = ErrorRegisterIntegrationEvent.EVENT_NAME;\r\n\r\n}","import { IBusEvent } from \"../../../../messageBroker/IBusEvent\";\r\n\r\nexport class UserRegisteredIntegrationEvent implements IBusEvent {\r\n    static EVENT_NAME = 'UserRegisteredIntegrationEvent';\r\n\r\n    eventName: string = UserRegisteredIntegrationEvent.EVENT_NAME;\r\n}","import { IBusEvent } from \"../../../../messageBroker/IBusEvent\";\r\n\r\nexport class AlreadyRegisteredIntegrationEvent implements IBusEvent {\r\n    static EVENT_NAME = 'AlreadyRegisteredIntegrationEvent';\r\n\r\n    eventName: string = AlreadyRegisteredIntegrationEvent.EVENT_NAME;\r\n\r\n}","import * as React from 'react';\r\nimport { Box, Button, Card, CardActions, CardHeader, Container, Grid, Link, Paper, Typography } from '@mui/material';\r\nimport StarIcon from '@mui/icons-material/StarBorder';\r\nimport { useNavigate } from 'react-router';\r\nimport { ColorHr } from '../../../../kit/kit';\r\nimport { RoutingByRegister } from '../../config/routingByRegister';\r\nimport { RegisterServiceCollection } from '../../RegisterServiceCollection';\r\nimport { AlreadyRegisteredIntegrationEvent } from '../../contracts/integrationEvents';\r\n\r\nexport function RegistrationForm() {\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const enterCode = () => {\r\n        navigation(RoutingByRegister.JOIN_TO_ORGANIZATION);\r\n    };\r\n\r\n    const createUser = () => {\r\n        navigation(RoutingByRegister.USER_REGISTRATION);\r\n    };\r\n\r\n    const regByCode = () => {\r\n        return (<Card>\r\n            <CardHeader title=\"У меня есть КОД\"\r\n                titleTypographyProps={{ align: 'center' }}\r\n                action={<StarIcon />}\r\n                sx={{\r\n                    backgroundColor: (theme) => theme.palette.primary.dark,\r\n                    color: (theme) => theme.palette.primary.contrastText,\r\n                }}\r\n            />\r\n            <CardActions sx={{\r\n                backgroundColor: (theme) => theme.palette.primary.light,\r\n            }}>\r\n                <Button variant=\"contained\" color=\"success\" sx={{\r\n                    margin: (theme) => theme.spacing(3, 1, 2),\r\n                }} fullWidth onClick={enterCode}>Хочу присоединиться к организации</Button>\r\n            </CardActions>\r\n        </Card>);\r\n    };\r\n\r\n    const regAsUser = () => {\r\n        return (<Card>\r\n            <CardHeader title=\"Новый пользователь\"\r\n                titleTypographyProps={{ align: 'center' }}\r\n                sx={{\r\n                    backgroundColor: '#b96d20',\r\n                }}\r\n            />\r\n            <CardActions sx={{\r\n                backgroundColor: '#e3e29b',\r\n            }}>\r\n                <Button variant=\"contained\" color=\"success\" sx={{\r\n                    margin: (theme) => theme.spacing(3, 1, 2),\r\n                }} fullWidth onClick={createUser}>Хочу управлять сотрудниками</Button>\r\n            </CardActions>\r\n        </Card>);\r\n    };\r\n\r\n    const goToLogin = async () => {\r\n        await RegisterServiceCollection.getServiceBus().publishEvent(new AlreadyRegisteredIntegrationEvent());\r\n    };\r\n\r\n    return (<Container component=\"main\" maxWidth=\"lg\">\r\n        <Paper sx={(theme) => ({\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            padding: theme.spacing(2),\r\n            backgroundColor: 'var(--EAS-BACKGROUND-COLOR-PAPER-INNER)',\r\n        })}>\r\n            <Box component='div' sx={{\r\n                marginTop: (theme) => theme.spacing(4),\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'flex-end',\r\n                fontSize: 'calc(var(--EAS-FONT-SIZE-BASE) + 0.2vw)'\r\n            }}>\r\n                <Link component=\"button\" onClick={goToLogin}>Я уже зарегистрирован</Link>\r\n            </Box>\r\n            <Box component='div' sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            }}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Регистрация\r\n                </Typography>\r\n\r\n                <Box component='div' sx={{\r\n                    width: '100%',\r\n                    marginTop: (theme) => theme.spacing(2),\r\n                    marginBottom: (theme) => theme.spacing(4),\r\n                }}><ColorHr /></Box>\r\n\r\n                <Grid container spacing={8} justifyContent=\"center\">\r\n                    <Grid\r\n                        item\r\n                        key='regByCode'\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={5}\r\n                    >\r\n                        {regByCode()}\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        item\r\n                        key='regAsOgr'\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={6}\r\n                        lg={5}\r\n                        xl={5}\r\n                    >\r\n                        {regAsUser()}\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Paper>\r\n\r\n    </Container>);\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { RegistrationForm } from './Registration.form';\r\n\r\nexport function RegistrationPage() {\r\n    return (<>\r\n        <PageContent>\r\n            <RegistrationForm />\r\n        </PageContent>\r\n    </>);\r\n}","import { ICommandPromise } from \"../../../../intermediary/ICommand\";\r\nimport { RegisterServiceCollection } from \"../../RegisterServiceCollection\";\r\nimport { IRegistrationClient } from \"../infrastructure/clients/IRegistrationClient\";\r\n\r\nexport class RegistrationUserCommand implements ICommandPromise {\r\n\r\n    private readonly registrationClient: IRegistrationClient;\r\n\r\n    constructor(public userName: string, public password: string) {\r\n        this.registrationClient = RegisterServiceCollection.getRegistrationClient();\r\n    }\r\n\r\n    execute() {\r\n        return this.registrationClient.registrationUser(this.userName, this.password);\r\n    }\r\n}","import {\r\n    Box, Button, Container, Link, Paper\r\n} from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link as LinkDom } from 'react-router-dom';\r\nimport {\r\n    EmailValidation,\r\n    FormDef, InputControl, IsRequiredValidation, MaxLengthValidation, MinLengthValidation,\r\n    PasswordControl\r\n} from '../../../../forms/Forms';\r\nimport { ColorHr, FormErrorMessage, FormRow, FormSimpleHeader } from '../../../../kit/kit';\r\nimport { LocalCache } from '../../../../utils/caches/LocalCache';\r\nimport { useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { LoginCommand } from '../../application/features/LoginCommand';\r\nimport { RegistrationUserCommand } from '../../application/features/RegistrationUserCommand';\r\nimport { RoutingByRegister } from '../../config/routingByRegister';\r\nimport { AlreadyRegisteredIntegrationEvent, ErrorRegisterIntegrationEvent, RegisterLoginedIntegrationEvent } from '../../contracts/integrationEvents';\r\nimport { RegisterServiceCollection } from '../../RegisterServiceCollection';\r\n\r\nclass UserRegistrationFormDef extends FormDef {\r\n    public userName: InputControl = new InputControl({\r\n        validations: [new EmailValidation, new IsRequiredValidation(), new MaxLengthValidation(50), new MinLengthValidation(3)],\r\n        title: 'Ваш email для входа в систему',\r\n        isAutofocus: true\r\n    });\r\n    public pwd = new PasswordControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(24), new MinLengthValidation(5)],\r\n        title: 'Придумай пароль',\r\n        autocomplete: 'new-password'\r\n    });\r\n}\r\n\r\nclass UserRegistrationState {\r\n    constructor(public errorMessage: string = '') {\r\n\r\n    }\r\n}\r\n\r\nclass UserRegistrationFormStateToCache {\r\n    constructor(public email?: string) {\r\n\r\n    }\r\n}\r\n\r\nconst CACHE_KEY_USER_REG = 'USER_REG_STATE_FORM';\r\n\r\nconst mediator = RegisterServiceCollection.GetMediator();\r\n\r\nexport function UserRegistrationForm() {\r\n    const [state, setState] = useStateSmart(new UserRegistrationState());\r\n    const form = new UserRegistrationFormDef();\r\n\r\n    useEffect(() => {\r\n        const stateFromCache = LocalCache.Get<UserRegistrationFormStateToCache>(CACHE_KEY_USER_REG);\r\n\r\n        if (stateFromCache) {\r\n            form.userName.setNewInitialValue(stateFromCache.email);\r\n            setState(prev => ({ ...prev, errorMessage: '' }));\r\n        }\r\n    }, []);\r\n\r\n    const [isLoading, registration] = useProcessingOnlyOne(async () => {\r\n\r\n        if (!form.validation()) {\r\n            return;\r\n        }\r\n\r\n        const userName = form.userName.getValue();\r\n        const pwd = form.pwd.getValue();\r\n\r\n        const registrationUserCommand = new RegistrationUserCommand(userName, pwd);\r\n\r\n        await mediator.send(registrationUserCommand)\r\n            .then(async () => {\r\n                const loginCommand = new LoginCommand(userName, pwd);\r\n\r\n                await loginCommand.execute()\r\n                    .then(async () => {\r\n                        LocalCache.Remove(CACHE_KEY_USER_REG);\r\n\r\n                        await RegisterServiceCollection.getServiceBus().publishEvent(new RegisterLoginedIntegrationEvent());\r\n                    }).catch(async err => {\r\n                        const errMessage = HttpRequestError.createFromPromiseCatch(err).message;\r\n\r\n                        await RegisterServiceCollection.getServiceBus().publishEvent(new ErrorRegisterIntegrationEvent(errMessage));\r\n                    });\r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message }));\r\n            });\r\n    }, []);\r\n\r\n    const isDisabled = (): boolean => {\r\n        return isLoading;\r\n    };\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            registration();\r\n        }\r\n    };\r\n\r\n    const alreadyRegistered = async () => {\r\n        LocalCache.Remove(CACHE_KEY_USER_REG);\r\n\r\n        await RegisterServiceCollection.getServiceBus().publishEvent(new AlreadyRegisteredIntegrationEvent());\r\n    };\r\n\r\n    form.setDisabled(isDisabled());\r\n    form.pwd.props.onKeyPress = handleKeyDown;\r\n\r\n    const getRegForm = () => {\r\n        return (<>\r\n            <FormErrorMessage message={state.errorMessage} />\r\n            <FormRow>\r\n                {form.userName.view()}\r\n            </FormRow>\r\n            <FormRow>\r\n                {form.pwd.view()}\r\n            </FormRow>\r\n            <FormRow>\r\n                <Button variant=\"contained\" color=\"primary\" sx={{\r\n                    margin: (theme) => theme.spacing(3, 1, 2),\r\n                }}\r\n                    disabled={isDisabled()} onClick={registration} fullWidth>Продолжить</Button>\r\n            </FormRow>\r\n            <Box component='div' sx={{\r\n                width: '100%',\r\n                fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n            }}>\r\n                Нажимая \"Продолжить\", Вы соглашаетесь с <LinkDom\r\n                    to={`${RoutingByRegister.AGREEMENT_USER}?${new URLSearchParams({ [QueryPath.BACK]: RoutingByRegister.USER_REGISTRATION }).toString()}`}\r\n                    onClick={() => { LocalCache.Push(CACHE_KEY_USER_REG, new UserRegistrationFormStateToCache(form.userName.getValue()), 300); }}>Соглашение на обработку персональных данных</LinkDom>\r\n            </Box>\r\n        </>);\r\n    };\r\n\r\n    return (<Container component=\"main\" maxWidth=\"sm\">\r\n        <Paper sx={{\r\n            marginTop: (theme) => theme.spacing(4),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            padding: (theme) => theme.spacing(2),\r\n            margin: (theme) => theme.spacing(2),\r\n            borderRadius: (theme) => theme.spacing(2),\r\n            cursor: 'pointer',\r\n            textAlign: 'center',\r\n        }}>\r\n            <Box component='div' sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            }}>\r\n                <FormSimpleHeader>\r\n                    Зарегистрироваться\r\n                </FormSimpleHeader>\r\n\r\n                <Box component='div' sx={{\r\n                    width: '100%',\r\n                    marginTop: (theme) => theme.spacing(2),\r\n                    marginBottom: (theme) => theme.spacing(4),\r\n                }}><ColorHr /></Box>\r\n\r\n                {getRegForm()}\r\n\r\n                <Box component='div' sx={{\r\n                    marginTop: (theme) => theme.spacing(4),\r\n                    fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n                    textAlign: 'center',\r\n                }}>\r\n                    Уже зарегистрировались? <Link component=\"button\" onClick={alreadyRegistered}>Войти</Link>\r\n                </Box>\r\n            </Box>\r\n        </Paper>\r\n    </Container>);\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { UserRegistrationForm } from './UserRegistration.form';\r\n\r\nexport function UserRegistrationPage() {\r\n    return (<>\r\n        <PageContent>\r\n            <UserRegistrationForm />\r\n        </PageContent>\r\n    </>);\r\n}","import { Box, Container, Paper } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '../../../../utils/hooks';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\n\r\nexport function AgreementUserForm() {\r\n    const query = useQuery();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\" sx={{\r\n            marginBottom: (theme) => theme.spacing(4),\r\n        }}>\r\n            <Paper sx={{\r\n                marginTop: (theme) => theme.spacing(4),\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                padding: (theme) => theme.spacing(4),\r\n                fontSize: 'calc(14px + 0.2vw)',\r\n            }}>\r\n                <div className='form-row'>\r\n                    <Link to={query.get(QueryPath.BACK) ?? ''}>Назад</Link>\r\n                </div>\r\n\r\n                <Box component='div' sx={{\r\n                    textAlign: 'center',\r\n                    color: '#00897b',\r\n                    fontSize: 'calc(14px + 1vw)',\r\n                    marginBottom: (theme) => theme.spacing(1),\r\n                }}>\r\n                    Соглашение на обработку персональных данных\r\n                </Box>\r\n\r\n                <hr />\r\n                <p className='justify'>В соответствии с требованиями Федерального закона от 27.07.2006 г. № 152-ФЗ «О персональных данных» я выражаю согласие на обработку своих персональных данных администрацией ресурса eas.bacup.ru без оговорок и ограничений, совершение с моими персональными данными действий, предусмотренных п.3 ч.1 ст.3 Федерального закона от 27.07.2006 г. №152-ФЗ «О персональных данных», и подтверждаю, что давая такое согласие, действую свободно, по своей воле и в своих интересах.</p>\r\n                <p className='justify'>Согласие на обработку персональных данных даётся мной в целях получения услуг, оказываемых ресурсом eas.bacup.ru.</p>\r\n                <p className='justify'>Перечень персональных данных, на обработку которых предоставляется согласие:</p>\r\n                <ul className='justify'>\r\n                    <li>фамилия</li>\r\n                    <li>имя</li>\r\n                    <li>отчество</li>\r\n                    <li>место пребывания (город, область)</li>\r\n                    <li>номера телефонов</li>\r\n                    <li>адреса электронной почты (E-mail)</li>\r\n                    <li>а также иные полученные от меня персональные данные. </li>\r\n                </ul>\r\n                <p className='justify'>Я выражаю свое согласие на осуществление со всеми указанными персональными данными следующих действий:</p>\r\n                <ul className='justify'>\r\n                    <li>сбор</li>\r\n                    <li>систематизация</li>\r\n                    <li>накопление</li>\r\n                    <li>хранение</li>\r\n                    <li>уточнение (обновление или изменение)</li>\r\n                    <li>использование</li>\r\n                    <li>обезличивание</li>\r\n                    <li>блокирование</li>\r\n                    <li>уничтожение</li>\r\n                    <li>а также осуществление любых иных действий с персональными данными в соответствии с действующим законодательством. </li>\r\n                </ul>\r\n                <p className='justify'>Обработка данных может осуществляться как с использованием средств автоматизации, так и без их использования (при неавтоматической обработке). При обработке персональных данных администрация ресурса eas.bacup.ru не ограничено в применении способов их обработки.</p>\r\n                <p className='justify'>Настоящим я признаю и подтверждаю, что в случае необходимости администрация ресурса eas.bacup.ru является правообладателем всех фото, видеоматериалов и текстовых материалов полученных в процессе моех действий на ресурсе eas.bacup.ru и вправе предоставлять мои персональные данные третьим лицам исключительно в целях оказания услуг технической поддержки, а также (в обезличенном виде) в статистических, маркетинговых и иных научных целях. Такие третьи лица имеют право на обработку персональных данных на основании настоящего согласия.</p>\r\n                <hr />\r\n                <p className='justify'>Администрация ресурса имеет право вносить изменения в настоящее Соглашение. При внесении изменений в актуальной редакции указывается дата последнего обновления. Новая редакция Соглашения вступает в силу с момента ее размещения, если иное не предусмотрено новой редакцией Соглашения.</p>\r\n                <p className='justify'>Дата последнего обновления текста Соглашения: 01.12.2022.</p>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}","import * as React from \"react\";\r\nimport { PageContent } from \"../../../../kit/kit\";\r\nimport { AgreementUserForm } from \"./AgreementUser.form\";\r\n\r\nexport function AgreementUserPage() {\r\n    return (\r\n        <>\r\n            <PageContent>\r\n                <AgreementUserForm />\r\n            </PageContent>\r\n        </>\r\n    );\r\n}","\r\nexport class InvitationCheckResult {\r\n    constructor(public userName?: string) { }\r\n}","import { ICommandPromiseWithResult } from \"../../../../../intermediary/indexIntermediary\";\r\nimport { RegisterServiceCollection } from \"../../../RegisterServiceCollection\";\r\nimport { IInvitationsClient } from \"../../infrastructure/clients/InvitationsClient/IInvitationsClient\";\r\nimport { InvitationCheckResult } from \"./InvitationCheckResult\";\r\n\r\nexport class CheckInvitationCodeCommand implements ICommandPromiseWithResult<InvitationCheckResult> {\r\n\r\n    private readonly invitationsClient: IInvitationsClient;\r\n\r\n    constructor(public invitationCode: string) {\r\n        this.invitationsClient = RegisterServiceCollection.getInvitationsClient();\r\n    }\r\n\r\n    execute(): Promise<InvitationCheckResult> {\r\n        return this.invitationsClient.checkInvitationCode(this.invitationCode)\r\n            .then(resp => new InvitationCheckResult(resp.userName));\r\n    }\r\n\r\n}","import { ICommandPromise } from \"../../../../intermediary/ICommand\";\r\nimport { RegisterServiceCollection } from \"../../RegisterServiceCollection\";\r\nimport { IRegistrationClient } from \"../infrastructure/clients/IRegistrationClient\";\r\n\r\nexport class RegistrationUserByCodeCommand implements ICommandPromise {\r\n\r\n    private readonly registrationClient: IRegistrationClient;\r\n\r\n    constructor(public invitationCode: string, public userName: string, public password: string) {\r\n        this.registrationClient = RegisterServiceCollection.getRegistrationClient();\r\n    }\r\n\r\n    execute() {\r\n        return this.registrationClient.registrationUserByCode(this.invitationCode, this.userName, this.password);\r\n    }\r\n}","import { Box, Button, Container, Link, Paper } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { Link as LinkDom } from 'react-router-dom';\r\nimport { FormDef, InputControl, IsRequiredValidation, MaxLengthValidation, MinLengthValidation, PasswordControl } from '../../../../forms/Forms';\r\nimport { ColorHr, FormErrorMessage, FormRow } from '../../../../kit/kit';\r\nimport { LocalCache } from '../../../../utils/caches/LocalCache';\r\nimport { useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { CheckInvitationCodeCommand } from '../../application/features/CheckInvitationCode/CheckInvitationCodeCommand';\r\nimport { LoginCommand } from '../../application/features/LoginCommand';\r\nimport { RegistrationUserByCodeCommand } from '../../application/features/RegistrationUserByCodeCommand';\r\nimport { RoutingByRegister } from '../../config/routingByRegister';\r\nimport { AlreadyRegisteredIntegrationEvent, ErrorRegisterIntegrationEvent, RegisterLoginedIntegrationEvent } from '../../contracts/integrationEvents';\r\nimport { RegisterServiceCollection } from '../../RegisterServiceCollection';\r\n\r\nclass RegEmployeeFormDef extends FormDef {\r\n    public invitationCode = new InputControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(6)],\r\n        title: 'Код из компании',\r\n        isAutofocus: true\r\n    });\r\n    public userName: InputControl = new InputControl({\r\n        validations: [],\r\n        title: 'Ваш логин для входа в систему',\r\n        allwaysDisabled: true,\r\n    });\r\n    public pwd = new PasswordControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(24), new MinLengthValidation(5)],\r\n        title: 'Придумай пароль',\r\n        autocomplete: 'new-password'\r\n    });\r\n}\r\n\r\nclass JoinFormState {\r\n    constructor(public errorMessage: string = '', public isValidCode: boolean = false) {\r\n\r\n    }\r\n}\r\n\r\nclass JoinFormStateToCache {\r\n    constructor(public code: string, public email?: string) {\r\n\r\n    }\r\n}\r\n\r\nconst CACHE_KEY_JOIN = 'JOIN_STATE_FORM';\r\n\r\nconst mediator = RegisterServiceCollection.GetMediator();\r\n\r\nexport function JoinForm() {\r\n    const [state, setState] = useStateSmart(new JoinFormState());\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const form = new RegEmployeeFormDef();\r\n\r\n    useEffect(() => {\r\n        const stateFromCache = LocalCache.Get<JoinFormStateToCache>(CACHE_KEY_JOIN);\r\n\r\n        if (stateFromCache) {\r\n            form.invitationCode.setValue(stateFromCache.code);\r\n            form.userName.setNewInitialValue(stateFromCache.email);\r\n            setState(prev => ({ ...prev, errorMessage: '', isValidCode: true }));\r\n        }\r\n    }, []);\r\n\r\n    const [isLoading, registration] = useProcessingOnlyOne(async () => {\r\n\r\n        if (!form.validation()) {\r\n            return;\r\n        }\r\n\r\n        const userName = form.userName.getValue();\r\n        const pwd = form.pwd.getValue();\r\n        const registrationUserByCodeCommand = new RegistrationUserByCodeCommand(form.invitationCode.getValue(), userName, pwd);\r\n\r\n        await mediator.send(registrationUserByCodeCommand)\r\n            .then(() => {\r\n                const loginCommand = new LoginCommand(userName, pwd);\r\n\r\n                loginCommand.execute()\r\n                    .then(async () => {\r\n                        LocalCache.Remove(CACHE_KEY_JOIN);\r\n\r\n                        await RegisterServiceCollection.getServiceBus().publishEvent(new RegisterLoginedIntegrationEvent());\r\n                    }).catch(async err => {\r\n                        const errMessage = HttpRequestError.createFromPromiseCatch(err).message;\r\n\r\n                        await RegisterServiceCollection.getServiceBus().publishEvent(new ErrorRegisterIntegrationEvent(errMessage));\r\n                    });    \r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message }));\r\n            });\r\n    }, [navigation]);\r\n\r\n    const isDisabled = (): boolean => {\r\n        return isLoading || isCheckCode;\r\n    };\r\n\r\n    const [isCheckCode, checkCode] = useProcessingOnlyOne(async () => {\r\n\r\n        if (!form.invitationCode.validation()) {\r\n            return;\r\n        }\r\n\r\n        LocalCache.Remove(CACHE_KEY_JOIN);\r\n\r\n        const invitationCode = form.invitationCode.getValue();\r\n        const checkInvitationCodeCommand = new CheckInvitationCodeCommand(invitationCode)\r\n\r\n        await mediator.send(checkInvitationCodeCommand)\r\n            .then((result) => {\r\n                form.userName.setNewInitialValue(result.userName);\r\n\r\n                LocalCache.Push(CACHE_KEY_JOIN, new JoinFormStateToCache(invitationCode, result.userName), 300);\r\n\r\n                setState(prev => ({ ...prev, errorMessage: '', isValidCode: true }));\r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message, isValidCode: false }));\r\n            });\r\n\r\n    }, []);\r\n\r\n    const handleKeyDownByCheckCode = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            checkCode();\r\n        }\r\n    };\r\n\r\n    const handleKeyDownByRegistration = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            registration();\r\n        }\r\n    };\r\n\r\n    const alreadyRegistered = async () => {\r\n        LocalCache.Remove(CACHE_KEY_JOIN);\r\n\r\n        await RegisterServiceCollection.getServiceBus().publishEvent(new AlreadyRegisteredIntegrationEvent());\r\n    };\r\n\r\n    form.setDisabled(isDisabled());\r\n    form.invitationCode.props.onKeyPress = handleKeyDownByCheckCode;\r\n    form.pwd.props.onKeyPress = handleKeyDownByRegistration;\r\n\r\n    form.invitationCode.props.allwaysDisabled = !state.isValidCode;\r\n    form.invitationCode.props.disabled = state.isValidCode;\r\n\r\n    const getCheckInvCodeForm = () => {\r\n        return (<>\r\n            <FormErrorMessage message={state.errorMessage} />\r\n\r\n            <FormRow>\r\n                {form.invitationCode.view()}\r\n            </FormRow>\r\n            <FormRow>\r\n                <Button variant=\"contained\" color=\"primary\" sx={{\r\n                    margin: (theme) => theme.spacing(3, 1, 2),\r\n                }}\r\n                    disabled={isDisabled()} onClick={checkCode} fullWidth>Продолжить</Button>\r\n            </FormRow>\r\n        </>);\r\n    };\r\n\r\n    const getRegForm = () => {\r\n        return (<>\r\n            <FormErrorMessage message={state.errorMessage} />\r\n            <FormRow>\r\n                {form.invitationCode.view()}\r\n            </FormRow>\r\n            <FormRow>\r\n                {form.userName.view()}\r\n            </FormRow>\r\n            <FormRow>\r\n                {form.pwd.view()}\r\n            </FormRow>\r\n            <FormRow>\r\n                <Button variant=\"contained\" color=\"primary\" sx={{\r\n                    margin: (theme) => theme.spacing(3, 1, 2),\r\n                }}\r\n                    disabled={isDisabled()} onClick={registration} fullWidth>Продолжить</Button>\r\n            </FormRow>\r\n            <Box component='div' sx={{\r\n                width: '100%',\r\n                fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n            }}>\r\n                Нажимая \"Продолжить\", Вы соглашаетесь с <LinkDom to={`${RoutingByRegister.AGREEMENT_USER}?${new URLSearchParams({ [QueryPath.BACK]: RoutingByRegister.JOIN_TO_ORGANIZATION }).toString()}`}>Соглашение на обработку персональных данных</LinkDom>\r\n            </Box>\r\n        </>);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            <Paper sx={{\r\n                marginTop: (theme) => theme.spacing(4),\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                padding: (theme) => theme.spacing(2),\r\n                margin: (theme) => theme.spacing(2),\r\n                borderRadius: (theme) => theme.spacing(2),\r\n                cursor: 'pointer',\r\n                textAlign: 'center',\r\n            }}>\r\n                <Box component='div' sx={{\r\n                    width: '100%',\r\n                    fontSize: 'calc(14px + 1vw)',\r\n                    marginBottom: (theme) => theme.spacing(1),\r\n                }}>\r\n                    Присоединиться к организации\r\n                    <ColorHr />\r\n                </Box>\r\n\r\n                {state.isValidCode ? getRegForm() : getCheckInvCodeForm()}\r\n\r\n                <Box component='div' sx={{\r\n                    marginTop: (theme) => theme.spacing(4),\r\n                    fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n                    textAlign: 'center',\r\n                }}>\r\n                    Уже зарегистрировались? <Link component=\"button\" onClick={alreadyRegistered}>Войти</Link>\r\n                </Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { JoinForm } from './Join.form';\r\n\r\nexport function JoinPage() {\r\n    return (<>\r\n        <PageContent>\r\n            <JoinForm />\r\n        </PageContent>\r\n    </>);\r\n}","import { RoutingBase } from \"../../../config/RoutingBase\";\r\n\r\nexport class RoutingByEmployees extends RoutingBase  {\r\n\r\n    public static readonly EMPLOYEES = this.ROOT_APP + '/employees';\r\n\r\n    public static readonly CREATE_EMPLOYEE = this.ROOT_APP + '/employees/add';\r\n\r\n    public static readonly EDIT_EMPLOYEE = this.ROOT_APP + '/employees/:id/edit';\r\n}","import { MenuItemDef } from \"../../../kit/kit\";\r\nimport { RoutingByEmployees } from \"./routingByEmployees\";\r\n\r\nexport class MenuByEmployees {\r\n\r\n    public static getMenuItems() {\r\n        return [\r\n            new MenuItemDef(RoutingByEmployees.EMPLOYEES, 'Сотрудники'),\r\n        ];\r\n    }\r\n}","import { MenuItemDef } from \"../../../kit/kit\";\r\nimport { RoutingByOrganizations } from \"./routingByOrganizations\";\r\n\r\nexport class MenuByOrganizations {\r\n\r\n    public static getMenuItems() {\r\n        return [\r\n            new MenuItemDef(RoutingByOrganizations.ORGANIZATIONS, 'Организации'),\r\n        ];\r\n    }\r\n}","import { makeAutoObservable } from 'mobx';\r\nimport { Organization } from '../domain/indexDomain';\r\n\r\nclass OrganizationsStore {\r\n\r\n\togranizations: Organization[] | undefined = undefined;\r\n\r\n\tselectedOgranization: Organization | undefined = undefined;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tpublic get hasOgranizations(): boolean {\r\n\t\tif (!this.ogranizations) { return false; }\r\n\r\n\t\treturn this.ogranizations.length > 0;\r\n\t}\r\n}\r\n\r\nexport const organizationsStore = new OrganizationsStore();","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { IIdentityClient } from \"../../application/infrastructure/clients/IIdentityClient\";\r\n\r\nexport class IdentityClient implements IIdentityClient {\r\n\r\n    public logout(): Promise<boolean> {\r\n        const urlLogout = '/api/auth/logout';\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.get<boolean>(urlLogout);\r\n    }\r\n\r\n}","import { ICommandPromise } from \"../../../../intermediary/indexIntermediary\";\r\nimport { Token } from \"../../../../utils/Token\";\r\nimport { ShellServiceCollection } from \"../../ShellServiceCollection\";\r\nimport { IIdentityClient } from \"../infrastructure/clients/IIdentityClient\";\r\n\r\nexport class LogoutCommand implements ICommandPromise {\r\n\r\n    private readonly identityClient: IIdentityClient;\r\n\r\n    constructor() {\r\n        this.identityClient = ShellServiceCollection.getIdentityClient();\r\n    }\r\n\r\n    execute() {\r\n        return this.identityClient.logout()\r\n            .then(resp => {\r\n                if (resp) {\r\n                    Token.clear();\r\n                }\r\n            }).catch(() => {\r\n                Token.clear();\r\n            });\r\n    }\r\n}","import { IIdentityClient } from \"./application/infrastructure/clients/IIdentityClient\";\r\nimport { IdentityClient } from \"./infrastructure/clients/IdentityClient\";\r\n\r\nexport class ShellServiceCollection {\r\n\r\n    static getIdentityClient(): IIdentityClient {\r\n        return new IdentityClient();\r\n    }\r\n\r\n}","import { makeObservable } from \"mobx\";\r\n\r\nclass ShellStore {\r\n\r\n    public avatarObjectURL: string | undefined = undefined;\r\n\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n}\r\n\r\nexport const shellStore = new ShellStore();","import { FullName } from \"../sharedModels/FullName\";\r\n\r\nexport function getFullname(fullName: FullName | undefined): string {\r\n    if (fullName) {\r\n        const surname = fullName.surname ?? '';\r\n        const name = fullName.name ?? '';\r\n\r\n        if (fullName.patronymic) {\r\n            return `${surname} ${name} ${fullName.patronymic}`;\r\n        }\r\n        return `${surname} ${name}`;\r\n    }\r\n    return '';\r\n}\r\n\r\nexport function getFullnameShort(fullName: FullName | undefined): string {\r\n    if (fullName && fullName.surname) {\r\n        const surname = fullName.surname;\r\n        let initialName = '';\r\n        if (fullName.name && fullName.name.length > 1) {\r\n            initialName = fullName.name.charAt(0).toUpperCase();\r\n        }\r\n\r\n        if (fullName.patronymic && fullName.patronymic.length > 1) {\r\n            const initialPatronymic = fullName.patronymic.charAt(0).toUpperCase();\r\n\r\n            return `${surname} ${initialName}. ${initialPatronymic}.`;\r\n        }\r\n        return `${surname} ${initialName}.`;\r\n    }\r\n    return '';\r\n}\r\n\r\nexport function getSurNameAndNameShort(fullName: FullName | undefined): string | undefined {\r\n    if (fullName && fullName.surname && fullName.surname.length > 0) {\r\n        let short = fullName.surname.charAt(0);\r\n        if (fullName.name && fullName.name.length > 0) {\r\n            short += fullName.name.charAt(0);\r\n        }\r\n        short = short.toUpperCase();\r\n\r\n        return short;\r\n    }\r\n\r\n    return undefined;\r\n}","import * as React from 'react';\r\nimport { Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RoutingByShell } from '../../config/routingByShell';\r\n\r\nexport function Brand() {\r\n    return (<Link to={RoutingByShell.ROOT} style={{ textDecoration: 'none', }}>\r\n        <Typography variant=\"h6\" sx={{\r\n            paddingRight: (theme) => theme.spacing(1),\r\n            paddingLeft: (theme) => theme.spacing(1),\r\n            minHeight: '64px',\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            backgroundColor: 'rgba(120, 220, 220, 255) !important',\r\n            boxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 10%) inset',\r\n            WebkitBoxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 10%) inset',\r\n            MozBoxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 10%) inset',\r\n        }}>\r\n            EAS\r\n        </Typography>\r\n    </Link>);\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { AppBar, Avatar, Backdrop, IconButton, Menu, Toolbar, Tooltip, MenuItem, Box } from '@mui/material';\r\nimport { AccountCircle, ExitToApp } from '@mui/icons-material';\r\nimport { usePathnames, useStateSmart } from '../../../../utils/hooks';\r\nimport { LoadingProgress, SnackBarError, MenuItemDef } from '../../../../kit/kit';\r\nimport { getFullnameShort, getSurNameAndNameShort } from '../../../../utils/fullname-utils';\r\nimport { deepPurple } from '@mui/material/colors';\r\nimport { Brand } from '../brand/Brand';\r\nimport { RoutingByShell } from '../../config/routingByShell';\r\nimport { FullName } from '../../../../sharedModels/FullName';\r\n\r\ninterface MainMenuProps {\r\n    menuItems: MenuItemDef[];\r\n    rootApp: string;\r\n    userFullName?: FullName;\r\n    avatarUrl?: string;\r\n    actionLogout: () => Promise<void>\r\n}\r\n\r\nexport default function MainMenu(props: MainMenuProps) {\r\n    const [anchorAccountIconButton, setAnchorEl] = React.useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    const [loadingInfo, setIsLoading] = useStateSmart({ isLoading: false, errorMessage: '' });\r\n    const pathnames = usePathnames();\r\n\r\n    const logout = useCallback(async () => {\r\n        if (loadingInfo.isLoading) { return };\r\n\r\n        setIsLoading({ isLoading: true, errorMessage: '' });\r\n\r\n        await props.actionLogout()\r\n            .then(() => {\r\n                setIsLoading({ isLoading: false, errorMessage: '' });\r\n\r\n                navigate(RoutingByShell.LOGIN);\r\n            })\r\n            .catch((error: Error) => {\r\n                setIsLoading({ isLoading: false, errorMessage: 'Выход не осуществлён: ' + error.message });\r\n            });\r\n    }, [loadingInfo, navigate]);\r\n\r\n    const handlerCloseMessage = (): void => {\r\n        setIsLoading({ isLoading: false, errorMessage: '' });\r\n    };\r\n\r\n    const getUserName = (): string => {\r\n        return getFullnameShort(props.userFullName);\r\n    };\r\n\r\n    const getUrlToMenuItem = (): string => {\r\n        if (props.rootApp === '/') {\r\n            return `${props.rootApp}${pathnames[1]}`;\r\n        }\r\n\r\n        return `${props.rootApp}${pathnames[2]}`;\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const logoutByMenuItem = () => {\r\n        handleClose();\r\n        logout();\r\n    };\r\n\r\n    const getAvatarControl = () => {\r\n\r\n        if (props.avatarUrl) {\r\n            return (<Avatar alt={getFullnameShort(props.userFullName)} src={props.avatarUrl} />)\r\n        }\r\n\r\n        const short = getSurNameAndNameShort(props.userFullName);\r\n        if (short) {\r\n            return (<Avatar sx={{\r\n                color: (theme) => theme.palette.getContrastText(deepPurple[500]),\r\n                backgroundColor: deepPurple[500],\r\n            }} >{short}</Avatar>);\r\n        }\r\n\r\n        return (<AccountCircle />);\r\n    };\r\n\r\n    const getUserControl = () => {\r\n        return (<Box component='div' sx={{\r\n            marginLeft: (theme) => theme.spacing(0.5),\r\n            textAlign: 'left',\r\n        }}>\r\n            <Box component='div' sx={{\r\n                marginRight: (theme) => theme.spacing(1),\r\n                fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n            }}>{getUserName()}</Box>\r\n        </Box>);\r\n    };\r\n\r\n    const getMenuItemsControl = () => {\r\n        return (props.menuItems.map(item => {\r\n            return (\r\n                <MenuItem key={item.to} selected={getUrlToMenuItem() === item.to}\r\n                    sx={{\r\n                        minHeight: '64px !important',\r\n                    }}\r\n                    classes={{\r\n                        selected: 'menu-item-selected',\r\n                        root: 'menu-item-root',\r\n                    }}\r\n                    component={Link} to={item.to}>{item.text}</MenuItem>)\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Backdrop sx={{\r\n                zIndex: (theme) => theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n            }} open={loadingInfo.isLoading}>\r\n                <LoadingProgress text={'Осуществляем выход из системы. Пожалуйста, ожидайте...'} />\r\n            </Backdrop>\r\n            <SnackBarError\r\n                message={loadingInfo.errorMessage}\r\n                handleCloseMessage={handlerCloseMessage}\r\n            />\r\n            <AppBar position='static' sx={{\r\n                backgroundColor: 'rgba(50,150,100,1)',\r\n            }}>\r\n                <Toolbar sx={{paddingLeft: '0!important'}}>\r\n                    <Brand />\r\n                    {getMenuItemsControl()}\r\n                    <Box component='div' sx={{\r\n                        margin: '0 0 0 auto',\r\n                    }}>\r\n                        <IconButton\r\n                            sx={{\r\n                                '&:hover': {\r\n                                    backgroundColor: 'var(--EAS-BACKGROUND-COLOR-SELECTED) !important',\r\n                                    boxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 15%) inset',\r\n                                    WebkitBoxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 15%) inset',\r\n                                    MozBoxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 15%) inset',\r\n                                },\r\n                            }}\r\n                            size='medium'\r\n                            aria-controls='menu-account-appbar'\r\n                            aria-haspopup='true'\r\n                            onClick={handleMenu}\r\n                            color='inherit'\r\n                            disabled={loadingInfo.isLoading}\r\n                        >\r\n                            {getAvatarControl()}\r\n                            {getUserControl()}\r\n                        </IconButton>\r\n                        <Tooltip title='Выйти'>\r\n                            <IconButton sx={{\r\n                                '&:hover': {\r\n                                    backgroundColor: 'var(--EAS-BACKGROUND-COLOR-SELECTED) !important',\r\n                                    boxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 15%) inset',\r\n                                    WebkitBoxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 15%) inset',\r\n                                    MozBoxShadow: '0 2px 8px rgb(0 0 0 / 40%), 0 0 20px rgb(0 0 0 / 15%) inset',\r\n                                },\r\n                            }}\r\n                                aria-label='exit'\r\n                                onClick={logout}\r\n                                disabled={loadingInfo.isLoading}\r\n                                color='inherit'>\r\n                                <ExitToApp />\r\n                            </IconButton>\r\n                        </Tooltip>            \r\n                        <Menu\r\n                            id='menu-account-appbar'\r\n                            anchorEl={anchorAccountIconButton}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={Boolean(anchorAccountIconButton)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={logoutByMenuItem}>Выход</MenuItem>\r\n                        </Menu>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}","import { Box } from '@mui/material';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { createMuiStyle } from '../../../../utils/mui-utils';\r\nimport { organizationsStore } from '../../../organizations/stores/OrganizationsStore';\r\n\r\nconst style = createMuiStyle({\r\n    boxSelectedOrgainzation: {\r\n        backgroundColor: 'mediumpurple',\r\n        textAlign: 'right',\r\n        fontSize: 'var(--EAS-FONT-SIZE-LG-TEXT)',\r\n        color: 'white',\r\n        padding: (theme) => theme.spacing(0.5),\r\n    },\r\n    boxUnSelectedOrgainzation: {\r\n        backgroundColor: 'mediumpurple',\r\n        textAlign: 'center',\r\n        fontSize: 'var(--EAS-FONT-SIZE-LG-TEXT)',\r\n        color: 'white',\r\n        padding: (theme) => theme.spacing(0.5),\r\n    },\r\n});\r\n\r\nconst OrganizationInfoView = () => {\r\n    const hasSelectedOgranization = () => {\r\n        return organizationsStore.selectedOgranization ? true : false;\r\n    };\r\n\r\n    const getContentView = () => {\r\n        if (hasSelectedOgranization()) {\r\n            return (<>Организация: <Box component='b'>{organizationsStore.selectedOgranization?.name}</Box></>);\r\n        }\r\n\r\n        if (organizationsStore.ogranizations?.length) {\r\n            return (<><Box component='b'>Выберите организацию</Box></>);\r\n        }\r\n\r\n        return (<><Box component='b'>Добавь организацию. Начни работать</Box></>);\r\n    };\r\n\r\n    return (<Box component='div'\r\n        sx={hasSelectedOgranization() ? style.boxSelectedOrgainzation : style.boxUnSelectedOrgainzation}>\r\n        {getContentView()}\r\n    </Box>);\r\n};\r\n\r\nexport default observer(OrganizationInfoView);","import { Box } from '@mui/material';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { usePathnames } from '../../../../utils/hooks';\r\nimport { MenuByEmployees } from '../../../employees/config/menuByEmployees';\r\nimport { MenuByOrganizations } from '../../../organizations/config/menuByOrganizations';\r\nimport { organizationsStore } from '../../../organizations/stores/OrganizationsStore';\r\nimport { currentProfileUserStore } from '../../../register/stores/CurrentProfileUserStore';\r\nimport { LogoutCommand } from '../../application/features/LogoutCommand';\r\nimport { RoutingByShell } from '../../config/routingByShell';\r\nimport { shellStore } from '../../stores/ShellStore';\r\nimport MainMenu from '../menu/MainMenu';\r\nimport OrganizationInfoView from './OrganizationInfoView';\r\n\r\nconst ROOT_APP = RoutingByShell.ROOT_APP;\r\n\r\nexport function Layout(props: { children?: React.ReactNode }) {\r\n    const pathnames = usePathnames();\r\n\r\n    const getIndexPathPageMain = (): number => {\r\n        return ROOT_APP ? 2 : 1;\r\n    }\r\n\r\n    const getStyleBox = () => {\r\n        return {\r\n            backgroundImage: `url(\"${ROOT_APP}/assets/images/layout/sky.JPG\");`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n            width: '100%',\r\n            height: '100vh',\r\n        };\r\n    };\r\n\r\n    const getMenuItems = () => {\r\n        const items = [\r\n            ...MenuByOrganizations.getMenuItems(),\r\n        ];\r\n\r\n        if (!organizationsStore.selectedOgranization) {\r\n            return items;\r\n        }\r\n\r\n        return [\r\n            ...items,\r\n            ...MenuByEmployees.getMenuItems(),\r\n        ];\r\n    };\r\n\r\n    const Menu = observer(() => {\r\n        const profile = currentProfileUserStore.Profile;\r\n        const actionLogout = () => {\r\n            const logoutCommand = new LogoutCommand();\r\n            return logoutCommand.execute();\r\n        }\r\n\r\n        return (<MainMenu menuItems={getMenuItems()} rootApp={`${ROOT_APP}/`} userFullName={profile?.fullName}\r\n            avatarUrl={shellStore.avatarObjectURL} actionLogout={actionLogout} />);\r\n    });\r\n\r\n    const fetchAvatar = async () => {\r\n        if (!currentProfileUserStore.Profile?.avatarUrl) { return; }\r\n\r\n        await fetch(currentProfileUserStore.Profile?.avatarUrl)\r\n            .then(resp => resp.blob())\r\n            .then(blob => {\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    if (reader.result) {\r\n                        shellStore.avatarObjectURL = reader.result as string;\r\n                    }\r\n                };\r\n                reader.readAsDataURL(blob);\r\n            })\r\n            .catch(err => console.log('Невозможно загрузить аватарку -> ' + err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAvatar();\r\n    }, []);\r\n\r\n    return (\r\n        <Box component='div' sx={{ ...(!pathnames[getIndexPathPageMain()] && getStyleBox()) }}>\r\n            <OrganizationInfoView />\r\n            <Menu />\r\n            <Box component='div'>\r\n                {props.children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import { Box } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\nimport { useQuery } from '../../../../utils/hooks';\r\n\r\nexport function ForbiddenForm() {\r\n    const query = useQuery();\r\n\r\n    const getTextResource = () => {\r\n        const resource = query.get(QueryPath.FORBIDDEN_RESOURCE);\r\n        if (resource) {\r\n            return `Ресурс: ${resource}`;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    return (<>\r\n        <Box component='div' className='row-center' sx={{\r\n            fontSize: 'calc(12px + 10vw)',\r\n            color: 'indianred',\r\n        }}>403</Box>\r\n        <Box component='div' className='row-center' sx={{\r\n            fontSize: 'calc(8px + 3vw)',\r\n            color: 'cadetblue',\r\n        }}>Доступ к ресурсу запрещён.</Box>\r\n        <Box component='div' className='row-center' sx={{\r\n            fontSize: 'calc(8px + 1vw)',\r\n            paddingTop: (theme) => theme.spacing(2),\r\n        }}>{getTextResource()}</Box>\r\n    </>);\r\n}","import * as React from \"react\";\r\nimport { PageContent } from \"../../../../kit/kit\";\r\nimport { ForbiddenForm } from \"./Forbidden.form\";\r\n\r\nexport function ForbiddenPage() {\r\n    return (\r\n        <>\r\n            <PageContent>\r\n                <ForbiddenForm />\r\n            </PageContent>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { Box } from '@mui/material';\r\nimport { ButtonBack } from '../../../../kit/kit';\r\nimport { RoutingByShell } from '../../config/routingByShell';\r\n \r\nexport function NotFoundForm() {\r\n    const navigate = useNavigate();\r\n\r\n    const handleBack = () => {\r\n        navigate(RoutingByShell.ROOT);\r\n    }\r\n\r\n    return (<>\r\n        <Box component='div' className='row-center' sx={{\r\n            fontSize: '10vw',\r\n            color: 'indianred',\r\n        }}>404</Box>\r\n        <Box component='div' className='row-center' sx={{\r\n            fontSize: '3vw',\r\n            color: 'cadetblue',\r\n        }}>Страница не найдена</Box>\r\n        <Box component='div' className='row-center' sx={{\r\n            marginTop: (theme) => theme.spacing(4),\r\n            marginBottom: (theme) => theme.spacing(2),\r\n        }}>\r\n            <ButtonBack sx={{\r\n                fontSize: 'calc(12px + 0.5vw)',\r\n            }} onClick={handleBack}>На главную страницу</ButtonBack>\r\n        </Box>\r\n    </>);\r\n}","import * as React from \"react\";\r\nimport { PageContent } from \"../../../../kit/kit\";\r\nimport { NotFoundForm } from \"./NotFound.form\";\r\n\r\nexport function NotFoundPage() {\r\n    return (\r\n        <>\r\n            <PageContent>\r\n                <NotFoundForm />\r\n            </PageContent>\r\n        </>\r\n    );\r\n}","import { Box } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { ButtonRefresh } from '../../../../kit/kit';\r\nimport { useQuery } from '../../../../utils/hooks';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\nimport { RoutingByShell } from '../../config/routingByShell';\r\n\r\nexport function NoConnectionToServerForm() {\r\n    const query = useQuery();\r\n    const navigate = useNavigate();\r\n\r\n    const style = {\r\n        fontSize: 'calc(3px + 3vw)',\r\n        color: 'lightcoral',\r\n    };\r\n\r\n    const refresh = () => {\r\n        const resource = query.get(QueryPath.TARGET);\r\n\r\n        if (resource) {\r\n            navigate(resource);\r\n\r\n            return;\r\n        }\r\n\r\n        navigate(RoutingByShell.ROOT);\r\n    };\r\n\r\n    return (<>\r\n        <Box component='div' className='row-center' sx={style}>Нет связи с сервером.</Box>\r\n        <Box component='div' className='row-center' sx={style}>Пожалуйста, обновите страницу позже...</Box>\r\n        <Box component='div' className='row-center' sx={{\r\n            marginTop: (theme) => theme.spacing(4),\r\n            marginBottom: (theme) => theme.spacing(2),\r\n        }}>\r\n            <ButtonRefresh sx={{\r\n                fontSize: 'calc(12px + 0.5vw)',\r\n            }} onClick={refresh}>Обновить страницу</ButtonRefresh>\r\n        </Box>\r\n    </>);\r\n}","import * as React from \"react\";\r\nimport { PageContent } from \"../../../../kit/kit\";\r\nimport { NoConnectionToServerForm } from \"./NoConnectionToServer.form\";\r\n\r\nexport function NoConnectionToServerPage() {\r\n    return (\r\n        <>\r\n            <PageContent>\r\n                <NoConnectionToServerForm />\r\n            </PageContent>\r\n        </>\r\n    );\r\n}","import { ApiDate } from \"../../../sharedModels/ApiDate\";\r\nimport { Guid } from \"../../../sharedModels/Guid\";\r\n\r\nexport class Organization {\r\n    constructor(public readonly id: Guid, public readonly name: string,\r\n        public readonly createDate: ApiDate) {\r\n\r\n    }\r\n}","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { CreateOrganizationArgs } from \"../../application/infrastructure/clients/OrganizationsClient/arguments/CreateOrganizationArgs\";\r\nimport { IOrganizationsClient } from \"../../application/infrastructure/clients/OrganizationsClient/IOrganizationsClient\";\r\nimport { ICreateOrganizationResponse } from \"../../application/infrastructure/clients/OrganizationsClient/responses/ICreateOrganizationResponse\";\r\nimport { IGetOrganizationsResponse } from \"../../application/infrastructure/clients/OrganizationsClient/responses/IGetOrganizationsResponse\";\r\n\r\nexport class OrganizationsClient implements IOrganizationsClient {\r\n\r\n    private static readonly baseUrl = '/api/organizations';\r\n\r\n    createOrganization(args: CreateOrganizationArgs): Promise<ICreateOrganizationResponse> {\r\n\r\n        const url = `${OrganizationsClient.baseUrl}/create`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.post<ICreateOrganizationResponse>(url, args);\r\n    }\r\n\r\n    getOrganizations(): Promise<IGetOrganizationsResponse> {\r\n        const url = OrganizationsClient.baseUrl;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.get<IGetOrganizationsResponse>(url);\r\n    }\r\n\r\n}","import { Mediator } from \"../../intermediary/indexIntermediary\";\r\nimport { IServiceBus } from \"../../messageBroker/IServiceBus\";\r\nimport { MemoryServiceBus } from \"../../messageBroker/MemoryServiceBus\";\r\nimport { IOrganizationsClient } from \"./application/infrastructure/clients/OrganizationsClient/IOrganizationsClient\";\r\nimport { OrganizationsClient } from \"./infrastructure/clients/OrganizationsClient\";\r\n\r\nexport class OrganizationsServiceCollection {\r\n\r\n    public static getOrganizationsClient(): IOrganizationsClient {\r\n        return new OrganizationsClient();\r\n    }\r\n\r\n    private static serviceBus: IServiceBus = new MemoryServiceBus();\r\n    static getServiceBus(): IServiceBus {\r\n        return OrganizationsServiceCollection.serviceBus;\r\n    }\r\n\r\n    private static readonly mediator: Mediator = new Mediator();\r\n    public static GetMediator(): Mediator {\r\n        return OrganizationsServiceCollection.mediator;\r\n    }\r\n}","import { IQuery } from \"../../../../intermediary/indexIntermediary\";\r\nimport { Organization } from \"../../domain/Organization\";\r\nimport { OrganizationsServiceCollection } from \"../../OrganizationsServiceCollection\";\r\nimport { IOrganizationsClient } from \"../infrastructure/clients/OrganizationsClient/IOrganizationsClient\";\r\n\r\nexport class GetOrganizationsQuery implements IQuery<Organization[]>{\r\n\r\n    private readonly organizationsClient: IOrganizationsClient;\r\n\r\n    constructor() {\r\n        this.organizationsClient = OrganizationsServiceCollection.getOrganizationsClient();\r\n    }\r\n\r\n    execute(): Promise<Organization[]> {\r\n        return this.organizationsClient.getOrganizations()\r\n            .then(resp => resp.organizations\r\n                .map(org =>\r\n                    new Organization(org.id, org.name, org.createAt)));\r\n    }\r\n\r\n}","import { IBusEvent } from \"../../../../messageBroker/IBusEvent\";\r\nimport { Guid } from \"../../../../sharedModels/Guid\";\r\n\r\nexport class SelectedOrganizationChangedIntegrationEvent implements IBusEvent {\r\n\r\n    public static EVENT_NAME = 'SelectedOrganizationChangedIntegrationEvent';\r\n\r\n    constructor(public readonly organizationId: Guid) { }\r\n\r\n    eventName: string = SelectedOrganizationChangedIntegrationEvent.EVENT_NAME;\r\n}","import { AddHome } from '@mui/icons-material';\r\nimport { Avatar, Card, CardActionArea, CardContent, CardHeader, FormHelperText, Grid } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { BackdropLoading } from '../../../../kit/kit';\r\nimport { getMaskedDate } from '../../../../utils/date-utils';\r\nimport { useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { GetOrganizationsQuery } from '../../application/features/GetOrganizationsQuery';\r\nimport { RoutingByOrganizations } from '../../config/routingByOrganizations';\r\nimport { SelectedOrganizationChangedIntegrationEvent } from '../../contracts/events/SelectedOrganizationChangedIntegrationEvent';\r\nimport { Organization } from '../../domain/indexDomain';\r\nimport { OrganizationsServiceCollection } from '../../OrganizationsServiceCollection';\r\nimport { organizationsStore } from '../../stores/OrganizationsStore';\r\n\r\nclass OrganizationsListFormState {\r\n    constructor(public orgs?: Organization[], public errorMessage: string = '') {\r\n\r\n    }\r\n}\r\n\r\nconst mediator = OrganizationsServiceCollection.GetMediator();\r\n\r\nexport function OrganizationsListForm() {\r\n\r\n    const [state, setState] = useStateSmart(new OrganizationsListFormState());\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const [isLoading, loadOrganizations] = useProcessingOnlyOne(async () => {\r\n        if (organizationsStore.ogranizations) {\r\n            setState(prev => ({ ...prev, orgs: organizationsStore.ogranizations, errorMessage: '' }));\r\n\r\n            return;\r\n        }\r\n\r\n        const getOrganizationQuery = new GetOrganizationsQuery();\r\n\r\n        await mediator.send(getOrganizationQuery)\r\n            .then((orgs) => {\r\n                setState(prev => ({ ...prev, orgs: orgs, errorMessage: '' }));\r\n\r\n                organizationsStore.ogranizations = orgs;\r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message }));\r\n            });\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        loadOrganizations();\r\n    }, []);\r\n\r\n    const getOrganizationsView = () => {\r\n        return state.orgs?.map(org => getOrganizationView(org));\r\n    }\r\n\r\n    const getOrganizationView = (organization: Organization) => {\r\n        return (<Grid xs={3}>\r\n            <Card sx={(theme) => ({\r\n            margin: theme.spacing(2),\r\n            backgroundColor: 'cornsilk',\r\n            })} >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ backgroundColor: 'cadetblue' }}>\r\n                            {organization.name[0].toUpperCase()}\r\n                        </Avatar>\r\n                    }\r\n                    title={organization.name}\r\n                    subheader={`от ${getMaskedDate(organization.createDate)}`}\r\n                />\r\n                <CardContent>\r\n                    Готова к работе\r\n                </CardContent>\r\n                <CardActionArea onClick={() => { selectingOrganization(organization) }}\r\n                    sx={(theme) => ({\r\n                        padding: theme.spacing(1),\r\n                        backgroundColor: '#61998f',\r\n                        textAlign: 'center',\r\n                        \":hover\": {\r\n                            backgroundColor: '#455b55',\r\n                            color: 'white',\r\n                        },\r\n                        fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n                        fontWeight: 'bold',\r\n                    })}>\r\n                    Выбрать организацию\r\n                </CardActionArea>\r\n        </Card>\r\n        </Grid>);\r\n    };\r\n\r\n    const getButtonOrganizationAddView = () => {\r\n        return (<Grid xs={3} sx={{\r\n            margin: organizationsStore.hasOgranizations ? '0' : '0 auto',\r\n        }}>\r\n            <Card sx={(theme) => ({\r\n                margin: theme.spacing(2),\r\n                backgroundColor: 'aquamarine',\r\n            })} >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ backgroundColor: 'darkorchid' }}>\r\n                            <AddHome />\r\n                        </Avatar>\r\n                    }\r\n                    title='Новая организация'\r\n                />\r\n                <CardContent>\r\n                    &nbsp;\r\n                </CardContent>\r\n                <CardActionArea onClick={() => { addOrganization() }}\r\n                    sx={(theme) => ({\r\n                        padding: theme.spacing(1),\r\n                        backgroundColor: '#e8d2bd',\r\n                        textAlign: 'center',\r\n                        \":hover\": {\r\n                            backgroundColor: '#a2815f',\r\n                            color: 'white',\r\n                        },\r\n                        fontSize: 'var(--EAS-FONT-SIZE-MD-TEXT)',\r\n                        fontWeight: 'bold',\r\n                    })}>\r\n                    Добавить организацию\r\n                </CardActionArea>\r\n            </Card>\r\n        </Grid>);\r\n    };\r\n\r\n    const addOrganization = () => {\r\n        navigation(RoutingByOrganizations.CREATE_ORGANIZATION);\r\n    };\r\n\r\n    const selectingOrganization = async (ogranization: Organization) => {\r\n        organizationsStore.selectedOgranization = ogranization;\r\n\r\n        await OrganizationsServiceCollection.getServiceBus()\r\n            .publishEvent(new SelectedOrganizationChangedIntegrationEvent(ogranization.id));\r\n    };\r\n\r\n    return (<Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n        <BackdropLoading isLoading={isLoading} text={'Загружаем список организаций. Пожалуйста, ожидайте...'} />\r\n\r\n        {state.errorMessage &&\r\n            <FormHelperText sx={{ textAlign: 'center', width: '100%' }} error>{state.errorMessage}</FormHelperText>}\r\n\r\n        {getButtonOrganizationAddView()}\r\n        {getOrganizationsView()}\r\n\r\n    </Grid>);\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { OrganizationsListForm } from './OrganizationsList.form';\r\n\r\nexport function OrganizationsListPage() {\r\n    return (<>\r\n        <PageContent>\r\n            <OrganizationsListForm />\r\n        </PageContent>\r\n    </>);\r\n}","\r\n\r\nexport class CreateOrganizationArgs {\r\n    constructor(public readonly name: string) { }\r\n}","import { ICommandPromiseWithResult } from \"../../../../intermediary/indexIntermediary\";\r\nimport { Organization } from \"../../domain/indexDomain\";\r\nimport { OrganizationsServiceCollection } from \"../../OrganizationsServiceCollection\";\r\nimport { CreateOrganizationArgs } from \"../infrastructure/clients/OrganizationsClient/arguments/CreateOrganizationArgs\";\r\nimport { IOrganizationsClient } from \"../infrastructure/clients/OrganizationsClient/IOrganizationsClient\";\r\n\r\nexport class CreateOrganizationCommand implements ICommandPromiseWithResult<Organization>{\r\n    private readonly organizationsClient: IOrganizationsClient;\r\n\r\n    constructor(public readonly name: string) {\r\n        this.organizationsClient = OrganizationsServiceCollection.getOrganizationsClient();\r\n    }\r\n\r\n    execute(): Promise<Organization> {\r\n        const args = new CreateOrganizationArgs(this.name);\r\n        return this.organizationsClient\r\n            .createOrganization(args)\r\n            .then(resp => new Organization(resp.organization.id, resp.organization.name,\r\n                resp.organization.createAt));\r\n    }\r\n\r\n}","import { Container } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { FormDef, InputControl, IsRequiredValidation, MaxLengthValidation } from '../../../../forms/Forms';\r\nimport { ButtonAdd, ButtonCancel, FormButtonPanel, FormContent, FormErrorMessage, FormOnPaper, FormRow, FormSimpleHeader } from '../../../../kit/kit';\r\nimport { useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { createMuiStyle } from '../../../../utils/mui-utils';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { CreateOrganizationCommand } from '../../application/features/CreateOrganizationCommand';\r\nimport { RoutingByOrganizations } from '../../config/routingByOrganizations';\r\nimport { OrganizationsServiceCollection } from '../../OrganizationsServiceCollection';\r\nimport { organizationsStore } from '../../stores/OrganizationsStore';\r\n\r\nclass CreateOrganizationFormState {\r\n    constructor(public errorMessage: string = '') {\r\n\r\n    }\r\n}\r\n\r\nclass CreateOrganizationFormDef extends FormDef {\r\n    public name = new InputControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(100)],\r\n        title: 'Наименование',\r\n        isAutofocus: true\r\n    });\r\n}\r\n\r\nconst mediator = OrganizationsServiceCollection.GetMediator();\r\n\r\nconst style = createMuiStyle({\r\n    buttonCancel: {\r\n        marginRight: (theme) => theme.spacing(2),\r\n    },\r\n});\r\n\r\nexport function CreateOrganizationForm() {\r\n\r\n    const [state, setState] = useStateSmart(new CreateOrganizationFormState());\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const form = new CreateOrganizationFormDef();\r\n\r\n    const [isRegistrationing, registration] = useProcessingOnlyOne(async () => {\r\n\r\n        if (!form.validation()) {\r\n            return;\r\n        }\r\n\r\n        const createOrganizationCommand = new CreateOrganizationCommand(form.name.getValue());\r\n\r\n        await mediator.send(createOrganizationCommand)\r\n            .then(org => {\r\n                organizationsStore.ogranizations = (organizationsStore.ogranizations || []).concat(org);\r\n\r\n                navigation(RoutingByOrganizations.ORGANIZATIONS);\r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message }));\r\n            });\r\n    }, [navigation]);\r\n\r\n    const cancel = () => {\r\n        navigation(RoutingByOrganizations.ORGANIZATIONS);\r\n    };\r\n\r\n    // Настройка формы\r\n    form.setDisabled(isRegistrationing);\r\n\r\n    return (<Container component=\"main\" maxWidth=\"md\">\r\n        <FormOnPaper>\r\n            <FormSimpleHeader>\r\n                Регистрация организации\r\n            </FormSimpleHeader>\r\n            <FormErrorMessage message={state.errorMessage} />\r\n            <FormContent>\r\n                <FormRow>\r\n                    {form.name.view()}\r\n                </FormRow>\r\n            </FormContent>\r\n            <FormButtonPanel>\r\n                <ButtonCancel disabled={isRegistrationing} onClick={cancel} sx={style.buttonCancel}>Отмена</ButtonCancel>\r\n                <ButtonAdd disabled={isRegistrationing} onClick={registration}>Зарегистрировать</ButtonAdd>\r\n            </FormButtonPanel>\r\n        </FormOnPaper>\r\n    </Container>);\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { CreateOrganizationForm } from './CreateOrganization.form';\r\n\r\nexport function CreateOrganizationPage() {\r\n    return (<>\r\n        <PageContent>\r\n            <CreateOrganizationForm />\r\n        </PageContent>\r\n    </>);\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { IConsumer } from \"../../../../messageBroker/IConsumer\";\r\nimport { RegisterLoginedIntegrationEvent } from \"../../../register/contracts/integrationEvents\";\r\nimport { RoutingByOrganizations } from \"../../config/routingByOrganizations\";\r\n\r\nexport class RegisterLoginedConsumer implements IConsumer<RegisterLoginedIntegrationEvent>\r\n{\r\n    private navigation: NavigateFunction;\r\n\r\n    constructor(navigation: NavigateFunction) {\r\n        this.navigation = navigation;\r\n    }\r\n\r\n    eventName: string = RegisterLoginedIntegrationEvent.EVENT_NAME;\r\n\r\n    Consume(event: RegisterLoginedIntegrationEvent): Promise<void> {\r\n        return new Promise(_ => {\r\n            this.navigation(RoutingByOrganizations.ORGANIZATIONS);\r\n        });\r\n    }\r\n\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { IConsumer } from \"../../../../messageBroker/IConsumer\";\r\nimport { AlreadyRegisteredIntegrationEvent } from \"../../../register/contracts/integrationEvents\";\r\nimport { RoutingByShell } from \"../../config/routingByShell\";\r\n\r\nexport class AlreadyRegisteredConsumer implements IConsumer<AlreadyRegisteredIntegrationEvent>\r\n{\r\n    private navigation: NavigateFunction;\r\n\r\n    constructor(navigation: NavigateFunction) {\r\n        this.navigation = navigation;\r\n    }\r\n\r\n    eventName: string = AlreadyRegisteredIntegrationEvent.EVENT_NAME;\r\n\r\n    Consume(event: AlreadyRegisteredIntegrationEvent): Promise<void> {\r\n        return new Promise(_ => {\r\n            this.navigation(RoutingByShell.LOGIN);\r\n        });\r\n    }\r\n\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { IConsumer } from \"../../../../messageBroker/IConsumer\";\r\nimport { ErrorRegisterIntegrationEvent } from \"../../../register/contracts/integrationEvents\";\r\nimport { RoutingByShell } from \"../../config/routingByShell\";\r\nimport { useNavigateSearchWithNav } from '../../../../utils/hooks';\r\nimport { QueryPath } from '../../../../utils/queryPath';\r\n\r\nexport class ErrorRegisterEventConsumer implements IConsumer<ErrorRegisterIntegrationEvent>\r\n{\r\n    private navigation: NavigateFunction;\r\n\r\n    constructor(navigation: NavigateFunction) {\r\n        this.navigation = navigation;\r\n    }\r\n\r\n    eventName: string = ErrorRegisterIntegrationEvent.EVENT_NAME;\r\n\r\n    Consume(event: ErrorRegisterIntegrationEvent): Promise<void> {\r\n        return new Promise(_ => {\r\n            const navigateSearch = useNavigateSearchWithNav(this.navigation);\r\n\r\n            navigateSearch(RoutingByShell.LOGIN, {\r\n                [QueryPath.ERROR]: event.errorMessage,\r\n            });\r\n        });\r\n    }\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { IConsumer } from \"../../../../messageBroker/IConsumer\";\r\nimport { SelectedOrganizationChangedIntegrationEvent } from \"../../../organizations/contracts/integrationEvents\";\r\nimport { RoutingByShell } from \"../../config/routingByShell\";\r\n\r\nexport class SelectedOrganizationChangedConsumer implements IConsumer<SelectedOrganizationChangedIntegrationEvent>\r\n{\r\n    private navigation: NavigateFunction;\r\n\r\n    constructor(navigation: NavigateFunction) {\r\n        this.navigation = navigation;\r\n    }\r\n\r\n    eventName: string = SelectedOrganizationChangedIntegrationEvent.EVENT_NAME;\r\n\r\n    Consume(event: SelectedOrganizationChangedIntegrationEvent): Promise<void> {\r\n        return new Promise(_ => {\r\n            this.navigation(RoutingByShell.ROOT);\r\n        });\r\n    }\r\n\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { Guid } from \"../../../sharedModels/indexSharedModels\";\r\n\r\nclass EmployeesStore {\r\n\r\n    public selectedOrganizationId: Guid | undefined = undefined;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n}\r\n\r\nexport const employeesStore = new EmployeesStore();","import { IConsumer } from \"../../../../messageBroker/IConsumer\";\r\nimport { SelectedOrganizationChangedIntegrationEvent } from \"../../../organizations/contracts/integrationEvents\";\r\nimport { employeesStore } from \"../../stores/EmployeesStore\";\r\n\r\nexport class SelectedOrganizationChangedConsumer implements IConsumer<SelectedOrganizationChangedIntegrationEvent>\r\n{\r\n    eventName: string = SelectedOrganizationChangedIntegrationEvent.EVENT_NAME;\r\n\r\n    Consume(event: SelectedOrganizationChangedIntegrationEvent): Promise<void> {\r\n        return new Promise(_ => {\r\n            employeesStore.selectedOrganizationId = event.organizationId;\r\n        });\r\n    }\r\n\r\n}","import FilterListIcon from '@mui/icons-material/FilterList';\r\nimport {\r\n\tBackdrop, Badge, Button, ButtonProps, CircularProgress, FormHelperText, IconButton, Paper, PaperProps,\r\n\tPopper, PopperProps, SxProps, Table, TableBody, TableCell, TableCellProps, TableContainer, TableFooter, TableHead,\r\n\tTablePagination, TablePaginationProps, TableProps, TableRow, TableRowProps, TableSortLabel, TextField, Theme, Tooltip\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport * as React from 'react';\r\n\r\n/*\r\n TODO: sample use\r\n \r\nimport { ExTable, ExTableFilter, IExTableSearchParams } from '../../common/ExTable';\r\n\r\n    const [errorMessageByRows, setErrorMessageByRows] = useState('');\r\n    const [rows, setRows] = React.useState<IEvent[]>([]);\r\n    const [isLoading, getData] = useProcessingOnlyOne(async (e: ProcessingAgrs) => {\r\n        const params = e.tag as IExTableSearchParams;\r\n        if (params) {\r\n            try {\r\n                const controller = new MonitoringController();\r\n                var rows = await controller.GetEvents( params);\r\n                setRows(rows);\r\n            }\r\n            catch (err) {\r\n                setErrorMessageByRows('Ошибка получения данных: ' + err);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\t\t\t<ExTable rows={rows} onChangeSearchParams={getData}\r\n                isLoading={isLoading} errorMessage={errorMessageByRows} columns={[\r\n                    { propertyName: 'name', description: 'Имя', filter: new ExTableFilterDef() },\r\n                    { propertyName: 'surname', description: 'Фамилия', filter: new ExTableFilterDef() },\r\n                    { propertyName: 'patronimic', description: 'Отчество', disibledSort: true },\r\n                ]} propertyToKey='id' orderBy='name' order='asc' />\r\n\r\n*/\r\n\r\nexport type TOrder = 'asc' | 'desc';\r\nexport type TAlign = 'inherit' | 'left' | 'center' | 'right' | 'justify';\r\n\r\nexport class ExTableFilterDef {\r\n\tvalue: string = '';\r\n}\r\n\r\nexport enum FilterTypeEnum {\r\n\tString = \"text\",\r\n\tDate = \"date\"\r\n}\r\n\r\nexport class ExTableColumnDef<T> {\r\n\tpropertyName: string = '';\r\n\tdescription?: string;\r\n\talignHead?: TAlign;\r\n\talignCell?: TAlign;\r\n\tfilter?: ExTableFilterDef;\r\n\tdisibledSort?: boolean;\r\n\trenderDataCell?: (rowData: T) => JSX.Element;\r\n\tfilterType?: FilterTypeEnum = FilterTypeEnum.String\r\n}\r\n\r\nexport class ExTableFilter {\r\n\r\n\tconstructor(public propertyName: string, public value: string) {\r\n\r\n\t}\r\n}\r\n\r\nexport class ExTableSearchParams {\r\n\r\n\tconstructor(public orderBy: string,\r\n\t\tpublic order: TOrder,\r\n\t\tprivate _page: number,\r\n\t\tpublic rowsPerPage: number,\r\n\t\tpublic filters: ExTableFilter[]) {\r\n\t}\r\n\r\n\tget page(): number {\r\n\t\t//потому что пейджинг оперирует страницами, начиная с 0\r\n\t\treturn this._page + 1;\r\n\t}\r\n\tset page(page: number) {\r\n\t\tthis._page = page;\r\n\t}\r\n\r\n}\r\n\r\nexport interface IExTableProps<T> {\r\n\tcolumns: ExTableColumnDef<T>[];\r\n\tpropertyToKey: (item: T) => string;\r\n\trowsPerPage?: number;\r\n\tpage?: number;\r\n\torder?: TOrder;\r\n\torderBy?: string;\r\n\trows: T[];\r\n\tonChangeSearchParams: (sParams: ExTableSearchParams) => void;\r\n\tisLoading: boolean;\r\n\terrorMessage?: string;\r\n\ttotal: number;\r\n\trowDef?: ExTableRowDef<T>;\r\n}\r\n\r\nexport interface ExTableRowDef<T> {\r\n\tgetClassName?: (item: T) => string;\r\n\tgetSx?: (item: T) => SxProps<Theme>;\r\n}\r\n\r\ninterface IFilterProps {\r\n\tpropertyName: string;\r\n\tvalue: string;\r\n\tonChangeFilter: (property: string, newValue: string) => void;\r\n\tfilteType: FilterTypeEnum;\r\n}\r\n\r\ninterface IExTableHeadProps<T> {\r\n\tcolumns: ExTableColumnDef<T>[];\r\n\tonRequestSort: (property: string) => void;\r\n\tonRequestFilter: (filter: ExTableFilter) => void;\r\n\torder: TOrder;\r\n\torderBy: string;\r\n\tdisabledSort: boolean;\r\n\thideFilter: boolean;\r\n}\r\n\r\nfunction TableFilter(props: IFilterProps) {\r\n\tconst { propertyName, onChangeFilter, filteType } = props;\r\n\r\n\tconst [value, setValue] = React.useState(props.value);\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n\r\n\tconst handleFilterOpenOrClose = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t\tsetOpen(!open);\r\n\t};\r\n\tconst handleFilterReset = () => {\r\n\t\tsetOpen(false);\r\n\t\tconst def = '';\r\n\t\tsetValue(def);\r\n\t\tonChangeFilter(propertyName, def);\r\n\t};\r\n\tconst handleFilterApply = () => {\r\n\t\tsetOpen(false);\r\n\t\tonChangeFilter(propertyName, value);\r\n\t};\r\n\r\n\tconst handlerChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(event.currentTarget.value);\r\n\t};\r\n\r\n\tconst handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\thandleFilterApply();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title='Фильтр'>\r\n\t\t\t\t<Badge color=\"primary\" badgeContent={value ? 1 : 0} overlap=\"circular\">\r\n\t\t\t\t\t<IconButton aria-label=\"filter list\" onClick={handleFilterOpenOrClose}>\r\n\t\t\t\t\t\t<FilterListIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Badge>\r\n\t\t\t</Tooltip>\r\n\t\t\t<StyledFilterPopper open={open} anchorEl={anchorEl} placement='bottom'>\r\n\t\t\t\t<StyledFilterPaper>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel='Значение фильтра'\r\n\t\t\t\t\t\ttype={filteType}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tonChange={handlerChangeValue}\r\n\t\t\t\t\t\tonKeyPress={handleKeyDown}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<StyledFilterButton variant=\"outlined\" onClick={handleFilterReset} disabled={!(value)}>Сбросить</StyledFilterButton>\r\n\t\t\t\t\t<StyledFilterButton variant=\"contained\" color=\"primary\" onClick={handleFilterApply}>Применить</StyledFilterButton>\r\n\t\t\t\t</StyledFilterPaper>\r\n\t\t\t</StyledFilterPopper>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction ExTableHead<T>(props: IExTableHeadProps<T>) {\r\n\tconst { columns, order, orderBy, onRequestSort, onRequestFilter,\r\n\t\tdisabledSort, hideFilter } = props;\r\n\r\n\tconst createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n\t\tonRequestSort(property);\r\n\t};\r\n\r\n\tconst createFilterHandler = (property: string, newValue: string) => {\r\n\t\tconst col = columns.find(c => c.propertyName === property);\r\n\t\tif (col && col.filter) {\r\n\t\t\tcol.filter.value = newValue;\r\n\t\t\tonRequestFilter(new ExTableFilter(col.propertyName, newValue ?? ''));\r\n\t\t}\r\n\t};\r\n\r\n\tconst isDisibledSort = (column: ExTableColumnDef<T>): boolean => {\r\n\t\treturn disabledSort || (column.disibledSort ?? false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow sx={{ height: '46px' }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<StyledTableCellTh\r\n\t\t\t\t\t\tkey={column.propertyName}\r\n\t\t\t\t\t\talign={column.alignHead ?? 'left'}\r\n\t\t\t\t\t\tsortDirection={orderBy === column.propertyName ? order : false}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{(isDisibledSort(column) ? column.description : <TableSortLabel\r\n\t\t\t\t\t\t\tactive={orderBy === column.propertyName}\r\n\t\t\t\t\t\t\tdirection={orderBy === column.propertyName ? order : 'asc'}\r\n\t\t\t\t\t\t\tonClick={createSortHandler(column.propertyName)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{column.description}\r\n\t\t\t\t\t\t\t{orderBy === column.propertyName ? (\r\n\t\t\t\t\t\t\t\t<StyledSpanVisuallyHidden />) : null}\r\n\t\t\t\t\t\t</TableSortLabel>)}\r\n\t\t\t\t\t\t{!hideFilter && column.filter && <TableFilter value={column.filter.value}\r\n\t\t\t\t\t\t\tonChangeFilter={createFilterHandler} propertyName={column.propertyName}\r\n\t\t\t\t\t\t\tfilteType={column.filterType ?? FilterTypeEnum.String}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t</StyledTableCellTh>\r\n\t\t\t\t))}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n}\r\n\r\nfunction RenderDataCell<T>(row: T, column: ExTableColumnDef<T>) {\r\n\treturn (<>{row[column.propertyName]} </>)\r\n}\r\n\r\nconst StyledPaper = styled(Paper)<PaperProps>(({ theme }) => ({\r\n\twidth: '100%',\r\n\tmarginBottom: theme.spacing(2),\r\n\tborderRadius: theme.spacing(1),\r\n}));\r\n\r\nconst StyledTable = styled(Table)<TableProps>(({ theme }) => ({\r\n\tminWidth: 500,\r\n\tborderRadius: theme.spacing(1),\r\n\tbackgroundColor: 'seagreen',\r\n\tmarginLeft: 'auto',\r\n\tmarginRight: 'auto',\r\n\temptyCells: 'show',\r\n}));\r\n\r\nconst StyledSpanVisuallyHidden = styled('span')(() => ({\r\n\tborder: 0,\r\n\tclip: 'rect(0 0 0 0)',\r\n\theight: 1,\r\n\tmargin: -1,\r\n\toverflow: 'hidden',\r\n\tpadding: 0,\r\n\tposition: 'absolute',\r\n\ttop: 20,\r\n\twidth: 1,\r\n}));\r\n\r\nconst StyledFilterPopper = styled(Popper)<PopperProps>(({ theme }) => ({\r\n\tpadding: theme.spacing(2),\r\n}));\r\n\r\nconst StyledFilterPaper = styled(Paper)<PaperProps>(({ theme }) => ({\r\n\tpadding: theme.spacing(1),\r\n}));\r\n\r\nconst StyledDivRoot = styled('div')(() => ({\r\n\twidth: '100%',\r\n\tposition: 'relative',\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)<TableRowProps>(({ theme }) => ({\r\n\tbackgroundColor: 'rgba(255,255,255,0.85)',\r\n\tborderBottomWidth: theme.spacing(0.5),\r\n\t'&:hover': {\r\n\t\tbackgroundColor: 'lightseagreen !important',\r\n\t},\r\n}));\r\n\r\nconst StyledFilterButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n\tmargin: theme.spacing(0, 1, 0, 0),\r\n}));\r\n\r\nconst StyledTableCellTh = styled(TableCell)<TableCellProps>(({ theme }) => ({\r\n\tborderBottomWidth: theme.spacing(0.5),\r\n\tborderColor: 'rgba(200,146,110,0.7)',\r\n\tpaddingBottom: 0,\r\n\tpaddingTop: theme.spacing(0.5),\r\n\tpaddingLeft: theme.spacing(1),\r\n\tpaddingRight: theme.spacing(0.5),\r\n}));\r\n\r\nconst StyledTablePagination = styled(TablePagination)<TablePaginationProps>(({ theme }) => ({\r\n\tbackgroundColor: 'rgba(90,184,152,0.8)',\r\n\tborderBottomLeftRadius: theme.spacing(1),\r\n\tborderBottomRightRadius: theme.spacing(1),\r\n}));\r\n\r\nexport function ExTable<T>(props: IExTableProps<T>) {\r\n\tconst { isLoading, onChangeSearchParams, errorMessage, rows, total, rowDef } = props;\r\n\r\n\tconst [params, setParams] = React.useState(new ExTableSearchParams\r\n\t\t(props.orderBy ?? '', props.order ?? 'asc', (props.page ?? 1) - 1, props.rowsPerPage ?? 5,\r\n\t\t\tprops.columns\r\n\t\t\t.filter(col => col.filter && col.filter.value)\r\n\t\t\t.map(col => new ExTableFilter(col.propertyName, col.filter?.value ?? ''))));\r\n\r\n\tconst createSearchParams = (): ExTableSearchParams => {\r\n\t\tconst p = new ExTableSearchParams(params.orderBy, params.order, params.page - 1,\r\n\t\t\tparams.rowsPerPage, params.filters);\r\n\t\treturn p;\r\n\t}\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tdataProcess(() => createSearchParams());\r\n\t}, []);\r\n\t\r\n\tconst dataProcess = (func: () => ExTableSearchParams) => {\r\n\t\tif (isLoading) { return; }\r\n\t\tconst sParams = func();\r\n\t\tonChangeSearchParams(sParams);\r\n\t}\r\n\r\n\tconst handleRequestSort = (propertyName: string) => {\r\n\t\tdataProcess(() => {\r\n\t\t\tconst isAsc = params.orderBy === propertyName && params.order === 'asc';\r\n\t\t\tconst newOrder = isAsc ? 'desc' : 'asc';\r\n\r\n\t\t\tconst p = createSearchParams();\r\n\t\t\tp.order = newOrder;\r\n\t\t\tp.orderBy = propertyName;\r\n\t\t\tp.page = 0;\r\n\r\n\t\t\tsetParams(p);\r\n\r\n\t\t\treturn p;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleRequestFilter = (filter: ExTableFilter) => {\r\n\t\tdataProcess(() => {\r\n\t\t\tlet newFilters = [...params.filters];\r\n\t\t\tconst f = newFilters.find(f => f.propertyName === filter.propertyName);\r\n\t\t\tif (f) {\r\n\t\t\t\tf.value = filter.value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnewFilters.push(filter);\r\n\t\t\t}\r\n\t\t\tnewFilters = newFilters.filter(f => f.value);;\r\n\r\n\t\t\tconst p = createSearchParams();\r\n\t\t\tp.filters = newFilters;\r\n\t\t\tp.page = 0;\r\n\r\n\t\t\tsetParams(p);\r\n\r\n\t\t\treturn p;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePage = async (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n\t\tdataProcess(() => {\r\n\r\n\t\t\tconst p = createSearchParams();\r\n\t\t\tp.page = newPage;\r\n\r\n\t\t\tsetParams(p);\r\n\r\n\t\t\treturn p;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tdataProcess(() => {\r\n\t\t\tconst rowsPerPage = parseInt(event.target.value, 10);\r\n\r\n\t\t\tconst p = createSearchParams();\r\n\t\t\tp.page = 0;\r\n\t\t\tp.rowsPerPage = rowsPerPage;\r\n\r\n\t\t\tsetParams(p);\r\n\r\n\t\t\treturn p;\r\n\t\t});\r\n\t};\r\n\r\n\tconst isEmpty = () => total < 1;\r\n\r\n\tconst getRowsPerPageOptions = (): number[] => {\r\n\t\tif (isEmpty()) { return []; }\r\n\r\n\t\tif (total > 10) {\r\n\t\t\treturn [5, 10, 25];\r\n\t\t}\r\n\t\telse if (total > 5) {\r\n\t\t\treturn [5, 10];\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst getRowsView = () => {\r\n\r\n\t\tif (errorMessage) {\r\n\t\t\treturn (<StyledTableRow>\r\n\t\t\t\t<TableCell colSpan={props.columns.length}>\r\n\t\t\t\t\t<FormHelperText sx={{ textAlign: 'center' }} error>{errorMessage}</FormHelperText>\r\n\t\t\t\t</TableCell>\r\n\t\t\t</StyledTableRow>);\r\n\t\t}\r\n\r\n\t\tif (isEmpty()) {\r\n\t\t\treturn (<StyledTableRow>\r\n\t\t\t\t<TableCell colSpan={props.columns.length}>Нет данных</TableCell>\r\n\t\t\t</StyledTableRow>);\r\n\t\t}\r\n\r\n\t\treturn (<>{\r\n\t\t\trows.map((row) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<StyledTableRow\r\n\t\t\t\t\t\tclassName={`${rowDef?.getClassName ? rowDef.getClassName(row) : ''}`}\r\n\t\t\t\t\t\tsx={rowDef?.getSx ? rowDef.getSx(row) : {}}\r\n\t\t\t\t\t\thover\r\n\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\tkey={props.propertyToKey(row)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.columns.map((column, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableCell key={`${column.propertyName}_${index}`}\r\n\t\t\t\t\t\t\t\t\talign={column.alignCell ?? 'left'}\r\n\t\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 0,\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 0,\r\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: (theme) => theme.spacing(1),\r\n\t\t\t\t\t\t\t\t\t\tpaddingRight: (theme) => theme.spacing(0.5),\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>{column.renderDataCell ?\r\n\t\t\t\t\t\t\t\t\tcolumn.renderDataCell(row) : RenderDataCell(row, column)}</TableCell>);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</StyledTableRow>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledDivRoot>\r\n\t\t\t<Backdrop sx={{\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\tzIndex: (theme) => theme.zIndex.drawer - 1,\r\n\t\t\t\tcolor: '#fff',\r\n\t\t\t}} open={isLoading}>\r\n\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t</Backdrop>\r\n\t\t\t<StyledPaper>\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<StyledTable\r\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\r\n\t\t\t\t\t\tsize={'medium'}\r\n\t\t\t\t\t\taria-label=\"exTable\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ExTableHead\r\n\t\t\t\t\t\t\tcolumns={props.columns}\r\n\t\t\t\t\t\t\torder={params.order}\r\n\t\t\t\t\t\t\torderBy={params.orderBy}\r\n\t\t\t\t\t\t\tonRequestSort={handleRequestSort}\r\n\t\t\t\t\t\t\tonRequestFilter={handleRequestFilter}\r\n\t\t\t\t\t\t\tdisabledSort={total <= 1}\r\n\t\t\t\t\t\t\thideFilter={errorMessage ? true : false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{getRowsView()}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t<TableFooter>\r\n\t\t\t\t\t\t\t<TableRow sx={{\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<StyledTablePagination\r\n\t\t\t\t\t\t\t\t\tcolSpan={props.columns.length}\r\n\t\t\t\t\t\t\t\t\tbackIconButtonProps={{ 'aria-label': 'Предыдущая страница' }}\r\n\t\t\t\t\t\t\t\t\tnextIconButtonProps={{ 'aria-label': 'Следующая страница' }}\r\n\t\t\t\t\t\t\t\t\tlabelRowsPerPage='Кол-во строк на странице'\r\n\t\t\t\t\t\t\t\t\tlabelDisplayedRows={({ from, to, count }) => `${from}-${to} из ${count !== -1 ? count : ('больше чем ' + to)}`}\r\n\t\t\t\t\t\t\t\t\trowsPerPageOptions={getRowsPerPageOptions()}\r\n\t\t\t\t\t\t\t\t\tcount={total}\r\n\t\t\t\t\t\t\t\t\trowsPerPage={params.rowsPerPage}\r\n\t\t\t\t\t\t\t\t\tpage={params.page - 1}\r\n\t\t\t\t\t\t\t\t\tonPageChange={handleChangePage}\r\n\t\t\t\t\t\t\t\t\tonRowsPerPageChange={handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableFooter>\r\n\t\t\t\t\t</StyledTable>\t\t\t\t\t\r\n\t\t\t\t</TableContainer>\r\n\t\t\t</StyledPaper>\r\n\t\t</StyledDivRoot>\r\n\t);\r\n}","\r\nexport class Pagination<T> {\r\n\r\n    constructor(public readonly items: T[],\r\n        public readonly totalPages: number,\r\n        public readonly total: number) { }\r\n}","import { ApiDate, FullName, Guid } from \"../../../../sharedModels/indexSharedModels\";\r\nimport { EmployeeState } from \"../indexDomain\";\r\n\r\nexport class Employee {\r\n\r\n    constructor(public readonly id: Guid, public readonly fullName: FullName, public readonly birthday: ApiDate,\r\n        public readonly phoneNumber: string | undefined, public readonly email: string,\r\n        public readonly state: EmployeeState, public readonly employmentDate: ApiDate) {\r\n\r\n    }\r\n\r\n}","\r\nexport enum EmployeeState {\r\n    Active = 'Active',\r\n    Dismissed = 'Dismissed',\r\n}","import { HttpClientFactory } from \"../../../../factories/HttpClientFactory\";\r\nimport { CreateEmployeeArgs } from \"../../application/infrastructure/clients/EmployeesClient/arguments/CreateEmployeeArgs\";\r\nimport { GetEmployeesArgs } from \"../../application/infrastructure/clients/EmployeesClient/arguments/GetEmployeesArgs\";\r\nimport { UpdateEmployeeArgs } from \"../../application/infrastructure/clients/EmployeesClient/arguments/UpdateEmployeeArgs\";\r\nimport { IEmployeesClient } from \"../../application/infrastructure/clients/EmployeesClient/IEmployeesClient\";\r\nimport { ICreateEmployeeResponse } from \"../../application/infrastructure/clients/EmployeesClient/responses/ICreateEmployeeResponse\";\r\nimport { IGetEmployeeResponse } from \"../../application/infrastructure/clients/EmployeesClient/responses/IGetEmployeeResponse\";\r\nimport { IGetEmployeesResponse } from \"../../application/infrastructure/clients/EmployeesClient/responses/IGetEmployeesResponse\";\r\nimport { IUpdateEmployeeResponse } from \"../../application/infrastructure/clients/EmployeesClient/responses/IUpdateEmployeeResponse\";\r\nimport { employeesStore } from \"../../stores/EmployeesStore\";\r\n\r\nexport class EmployeesClient implements IEmployeesClient {\r\n\r\n    private getBaseUrl(): string {\r\n        return `/api/employees/${employeesStore.selectedOrganizationId}`\r\n    }\r\n\r\n    getEmployees(args: GetEmployeesArgs): Promise<IGetEmployeesResponse> {\r\n        const url = `${this.getBaseUrl()}/search`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.post<IGetEmployeesResponse>(url, args);\r\n    }\r\n\r\n    createEmployee(args: CreateEmployeeArgs): Promise<ICreateEmployeeResponse> {\r\n        const url = this.getBaseUrl();\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.post<ICreateEmployeeResponse>(url, args);\r\n    }\r\n\r\n    updateEmployee(args: UpdateEmployeeArgs): Promise<IUpdateEmployeeResponse> {\r\n        const url = `${this.getBaseUrl()}/${args.id}`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.put<IUpdateEmployeeResponse>(url, args);\r\n    }\r\n\r\n    getEmployee(employeeId: string): Promise<IGetEmployeeResponse> {\r\n        const url = `${this.getBaseUrl()}/${employeeId}`;\r\n\r\n        const httpClient = HttpClientFactory.createHttpClientWithAuth();\r\n\r\n        return httpClient.get<IUpdateEmployeeResponse>(url);\r\n    }\r\n}","import { Mediator } from \"../../intermediary/indexIntermediary\";\r\nimport { IEmployeesClient } from \"./application/infrastructure/clients/EmployeesClient/IEmployeesClient\";\r\nimport { EmployeesClient } from \"./infrastructure/clients/EmployeesClient\";\r\n\r\nexport class EmployeesServiceCollection {\r\n\r\n    public static GetEmployeesClient(): IEmployeesClient\r\n    {\r\n        return new EmployeesClient();\r\n    }\r\n\r\n    private static readonly mediator: Mediator = new Mediator();\r\n    public static GetMediator(): Mediator {\r\n        return EmployeesServiceCollection.mediator;\r\n    }\r\n}","import { IQuery } from \"../../../../intermediary/IQuery\";\r\nimport { Pagination } from \"../../../../sharedModels/exTableView/Pagination\";\r\nimport { FullName } from \"../../../../sharedModels/FullName\";\r\nimport { Employee } from \"../../domain/indexDomain\";\r\nimport { EmployeesServiceCollection } from \"../../EmployeesServiceCollection\";\r\nimport { GetEmployeesArgs } from \"../infrastructure/clients/EmployeesClient/arguments/GetEmployeesArgs\";\r\nimport { IEmployeesClient } from \"../infrastructure/clients/EmployeesClient/IEmployeesClient\";\r\n\r\nexport class GetEmployeesQuery implements IQuery<Pagination<Employee>> {\r\n\r\n    private readonly employeesClient: IEmployeesClient;\r\n\r\n    constructor(public readonly args: GetEmployeesArgs) {\r\n        this.employeesClient = EmployeesServiceCollection.GetEmployeesClient();\r\n    }\r\n\r\n    execute(): Promise<Pagination<Employee>> {\r\n        return this.employeesClient\r\n            .getEmployees(this.args)\r\n            .then(resp => new Pagination<Employee>(\r\n                    resp.items.map(empl => new Employee(empl.id,\r\n                        new FullName(empl.fullName.name, empl.fullName.surname, empl.fullName.patronymic),\r\n                        empl.birthday, empl.phoneNumber, empl.email, empl.state, empl.employmentDate)),\r\n                    resp.totalPages,\r\n                    resp.total\r\n            ));\r\n    }\r\n\r\n}","import { ExTableSearchParams, TOrder } from \"../../kit/tables/ExTable\";\r\n\r\nexport abstract class AnyObjectItemsSearch {\r\n    pageSize: number;\r\n    page: number;\r\n    sort: SortInfo;\r\n    filters: FilterInfo[];\r\n\r\n    constructor(sParams: ExTableSearchParams) {\r\n        this.pageSize = sParams.rowsPerPage;\r\n        this.page = sParams.page;\r\n        this.sort = new SortInfo(sParams.order, sParams.orderBy);\r\n        this.filters = sParams.filters.map((f) => { return new FilterInfo(f.value, f.propertyName) });\r\n    }\r\n}\r\n\r\nclass SortInfo {\r\n    sortType: SortTypeEnum;\r\n    orderBy: string;\r\n    constructor(order: TOrder, orderBy: string) {\r\n        this.sortType = order == 'asc' ? SortTypeEnum.Asc : SortTypeEnum.Desc;\r\n        this.orderBy = orderBy;\r\n    }\r\n}\r\n\r\nenum SortTypeEnum { Asc, Desc };\r\n\r\nclass FilterInfo {\r\n    constructor(public value: string, public columnName: string) { }\r\n}","import { ExTableSearchParams } from \"../../../../../../../kit/tables/ExTable\";\r\nimport { AnyObjectItemsSearch } from \"../../../../../../../sharedModels/exTableView/AnyObjectItemsSearch\";\r\nimport { EmployeeState } from \"../../../../../domain/indexDomain\";\r\n\r\nexport class GetEmployeesArgs extends AnyObjectItemsSearch {\r\n\r\n\tconstructor(sParams: ExTableSearchParams) {\r\n\t\tsuper(sParams);\r\n\t}\r\n\r\n\tstate?: EmployeeState;\r\n}","import { Backdrop, Box, IconButton, Paper, Tooltip, SxProps, Theme } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { FormDef, IsRequiredValidation, ItemInfo, RadioButtonsControl } from '../../../../forms/Forms';\r\nimport { ExTable, ExTableFilterDef, ExTableSearchParams } from '../../../../kit/tables/ExTable';\r\nimport { Pagination } from '../../../../sharedModels/exTableView/Pagination';\r\nimport { getMaskedDate } from '../../../../utils/date-utils';\r\nimport { ProcessingAgrs, useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { getMaskedPhoneNumber } from '../../../../utils/phone-utils';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { GetEmployeesQuery } from '../../application/features/GetEmployeesQuery';\r\nimport { GetEmployeesArgs } from '../../application/infrastructure/clients/EmployeesClient/arguments/GetEmployeesArgs';\r\nimport { Employee, EmployeeState } from '../../domain/indexDomain';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { generatePath, useNavigate } from 'react-router';\r\nimport { RoutingByEmployees } from '../../config/routingByEmployees';\r\nimport { ButtonAdd } from '../../../../kit/kit';\r\nimport { Guid } from '../../../../sharedModels/indexSharedModels';\r\nimport { EmployeesServiceCollection } from '../../EmployeesServiceCollection';\r\nimport { createMuiStyle } from '../../../../utils/mui-utils';\r\n\r\nclass EmployeesSearchFilter {\r\n    state?: EmployeeState;\r\n}\r\n\r\nclass EmployeesState {\r\n    constructor(\r\n        public errorMessageByRows: string,\r\n        public filterParams: EmployeesSearchFilter,\r\n        public searchParams: ExTableSearchParams,\r\n        public pagination: Pagination<Employee> | undefined = undefined) {\r\n    }\r\n}\r\n\r\nclass FilterFormDef extends FormDef {\r\n\r\n    public state = new RadioButtonsControl({\r\n        items: [new ItemInfo(STATE_ALL, 'Все'),\r\n            new ItemInfo(EmployeeState.Active, 'Действующие'),\r\n            new ItemInfo(EmployeeState.Dismissed, 'Уволенные')],\r\n        validations: [new IsRequiredValidation()], title: '',\r\n        initialValue: EmployeeState.Active.toString()\r\n    });\r\n}\r\n\r\nconst STATE_ALL = 'All';\r\n\r\nconst mediator = EmployeesServiceCollection.GetMediator();\r\n\r\nconst style = createMuiStyle({\r\n    buttonAdd: {\r\n        fontSize: 'var(--EAS-FONT-SIZE-BUTTON-TEXT)',\r\n    },\r\n    filters: {\r\n        width: '100%',\r\n        position: 'relative',\r\n    },\r\n    filtersBackdrop: {\r\n        position: 'absolute',\r\n        zIndex: (theme) => theme.zIndex.drawer - 1,\r\n        color: '#fff',\r\n    },\r\n    filtersPaper: {\r\n        padding: (theme) => theme.spacing(0.5),\r\n        marginBottom: (theme) => theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    filtersPanelButton: {\r\n        width: '50%',\r\n        textAlign: 'right',\r\n        paddingRight: (theme) => theme.spacing(1),\r\n    },\r\n    filtersPanel: {\r\n        width: '50%'\r\n    },\r\n    iconButton: {\r\n        color: (theme) => theme.palette.primary.main,\r\n        \"&:hover\": {\r\n            color: (theme) => theme.palette.secondary.dark\r\n        },\r\n    },\r\n});\r\n\r\nexport function EmployeesListForm() {\r\n    const navigation = useNavigate();\r\n    const form = new FilterFormDef();\r\n    const [state, setState] = useStateSmart(new EmployeesState('', new EmployeesSearchFilter(),\r\n        new ExTableSearchParams('', 'asc', 1, 10, [])));\r\n\r\n    const [isLoading, getData] = useProcessingOnlyOne(async (e: ProcessingAgrs) => {\r\n        const params = e.tag as ExTableSearchParams;\r\n        if (params) {\r\n            if (!form.validation()) {\r\n                setState(prev => ({ ...prev, searchParams: params }));\r\n                return;\r\n            }\r\n            const filter = state.filterParams;\r\n\r\n            filter.state = EmployeeState[form.state.getValue()];\r\n\r\n            const args = new GetEmployeesArgs(params);\r\n            args.state = filter.state;\r\n            const getEmployeesQuery = new GetEmployeesQuery(args);\r\n\r\n            await mediator.send(getEmployeesQuery)\r\n                .then(data => {\r\n                    setState(prev => ({\r\n                        ...prev, errorMessageByRows: '', pagination: data, searchParams: params\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    const errMsg = HttpRequestError.createFromPromiseCatch(err).message;\r\n                    setState(prev => ({\r\n                        ...prev, errorMessageByRows: 'Ошибка получения данных: ' + errMsg,\r\n                        pagination: undefined, searchParams: params\r\n                    }));\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    form.state.props.onChangeValue = async () => {\r\n        const params = state.searchParams;\r\n        params.page = 0;\r\n        await getData(params);\r\n        setState(prev => ({ ...prev, searchParams: params }));\r\n    };\r\n\r\n    const isDismissed = (empl: Employee): boolean => {\r\n        if (!empl.state) {\r\n            return false;\r\n        }\r\n\r\n        return empl.state === EmployeeState.Dismissed;\r\n    };\r\n\r\n    const getStyleByEmplItem = (empl: Employee): SxProps<Theme> => {\r\n        if (form.state.getValue() === STATE_ALL && isDismissed(empl)) {\r\n            return { backgroundColor: 'lightpink' };\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const addEmployee = () => {\r\n        navigation(RoutingByEmployees.CREATE_EMPLOYEE);\r\n    };\r\n\r\n    const editEmployee = (id: Guid) => {\r\n        const url = generatePath(RoutingByEmployees.EDIT_EMPLOYEE,\r\n            { id: id });\r\n\r\n        navigation(url);\r\n    };\r\n\r\n    const FiltersView = () => {\r\n        return (<Box component='div' sx={style.filters}>\r\n            <Backdrop sx={style.filtersBackdrop} open={isLoading} />\r\n            <Paper sx={style.filtersPaper}>\r\n                <Box component='div' sx={style.filtersPanel}>{form.state.view()}</Box>\r\n                <Box sx={style.filtersPanelButton}>\r\n                    <ButtonAdd sx={style.buttonAdd} onClick={addEmployee}>Добавить нового сотрудника</ButtonAdd>\r\n                </Box>\r\n            </Paper>\r\n        </Box>);\r\n    };\r\n\r\n    const TableView = () => {\r\n        return (\r\n            <ExTable rows={state.pagination?.items ?? []} onChangeSearchParams={getData} total={state.pagination?.total ?? 0}\r\n                isLoading={isLoading} errorMessage={state.errorMessageByRows}\r\n                rowDef={{ getSx: (item) => getStyleByEmplItem(item), }}\r\n                columns={[\r\n                    {\r\n                        propertyName: 'fullName', description: 'ФИО', filter: new ExTableFilterDef(),\r\n                        renderDataCell: (row) => {\r\n                            return (<>{row.fullName.ToString()}</>);\r\n                        }\r\n                    },\r\n                    {\r\n                        propertyName: 'birthday', description: 'Дата рождения', disibledSort: true,\r\n                        renderDataCell: (row) => {\r\n                            return (<>{getMaskedDate(row.birthday)}</>);\r\n                        }\r\n                    },\r\n                    {\r\n                        propertyName: 'phone', description: 'Телефон', disibledSort: true,\r\n                        renderDataCell: (row) => {\r\n                            return (<>{getMaskedPhoneNumber(row.phoneNumber)}</>);\r\n                        }\r\n                    },\r\n                    {\r\n                        propertyName: 'email', description: 'Эл. адрес', disibledSort: true,\r\n                    },\r\n                    {\r\n                        propertyName: '', description: '', disibledSort: true, renderDataCell: (row) => {\r\n                            return (<><Tooltip title='Редактировать' placement='left-start'>\r\n                                <IconButton sx={style.iconButton} size='medium' onClick={() => editEmployee(row.id)}>\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                            </Tooltip></>);\r\n                        },\r\n                    }\r\n                ]} propertyToKey={(row) => row.id} orderBy='fullName' order='asc' />\r\n        )\r\n    };\r\n\r\n    return (<>\r\n        <FiltersView />\r\n        {TableView()}\r\n    </>);\r\n}","\r\nexport function getMaskedPhoneNumber(value: string | undefined): string {\r\n    if (value && value.length === 11) {\r\n        return `+${value.substring(0, 1)} ${value.substring(1, 4)} ${value.substring(4, 7)} ${value.substring(7, 9)} ${value.substring(9, 11)}`;\r\n    }\r\n    if (value) {\r\n        return value;\r\n    }\r\n    return '';\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { EmployeesListForm } from './EmployeesList.form';\r\n\r\nexport function EmployeesListPage() {\r\n    return (<>\r\n        <PageContent>\r\n            <EmployeesListForm />\r\n        </PageContent>\r\n    </>);\r\n}","import { ApiDate } from \"../../../../../../../sharedModels/ApiDate\";\r\nimport { IFullNameDto } from \"../Dtos/IFullNameDto\";\r\n\r\nexport class CreateEmployeeArgs {\r\n    constructor(public readonly fullName: IFullNameDto,\r\n        public readonly birthday: ApiDate,\r\n        public readonly phoneNumber: string | undefined,\r\n        public readonly email: string,\r\n        public readonly employmentDate: ApiDate) {\r\n\r\n    }\r\n}","import { ICommandPromiseWithResult } from \"../../../../intermediary/indexIntermediary\";\r\nimport { ApiDate, FullName } from \"../../../../sharedModels/indexSharedModels\";\r\nimport { Employee } from \"../../domain/indexDomain\";\r\nimport { EmployeesServiceCollection } from \"../../EmployeesServiceCollection\";\r\nimport { CreateEmployeeArgs } from \"../infrastructure/clients/EmployeesClient/arguments/CreateEmployeeArgs\";\r\nimport { IFullNameDto } from \"../infrastructure/clients/EmployeesClient/Dtos/IFullNameDto\";\r\nimport { IEmployeesClient } from \"../infrastructure/clients/EmployeesClient/IEmployeesClient\";\r\n\r\nexport class CreateEmployeeCommand implements ICommandPromiseWithResult<Employee>{\r\n    private readonly employeesClient: IEmployeesClient;\r\n\r\n    constructor(public readonly fullName: FullName, public readonly birthday: ApiDate,\r\n        public readonly phoneNumber: string | undefined, public readonly email: string,\r\n        public readonly employmentDate: ApiDate) {\r\n\r\n        this.employeesClient = EmployeesServiceCollection.GetEmployeesClient();\r\n    }\r\n\r\n    execute(): Promise<Employee> {\r\n        const fullName: IFullNameDto = {\r\n            name: this.fullName.name,\r\n            surname: this.fullName.surname,\r\n            patronymic: this.fullName.patronymic\r\n        };\r\n        const args = new CreateEmployeeArgs(fullName,\r\n            this.birthday, this.phoneNumber, this.email, this.employmentDate);\r\n\r\n        return this.employeesClient\r\n            .createEmployee(args)\r\n            .then(empl => {\r\n                return new Employee(empl.id,\r\n                    new FullName(empl.fullName.name, empl.fullName.surname, empl.fullName.patronymic),\r\n                    empl.birthday, empl.phoneNumber, empl.email, empl.state, empl.employmentDate);\r\n            });\r\n    }\r\n\r\n}","import { Container } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { DateControl, EmailValidation, FormDef, InputControl, IsRequiredValidation, MaxDateValidation, MaxLengthValidation, MinDateValidation, PhoneNumberControl, PhoneNumberValidation } from '../../../../forms/Forms';\r\nimport { ButtonAdd, ButtonCancel, FormButtonPanel, FormContent, FormErrorMessage, FormOnPaper, FormRow, FormSimpleHeader } from '../../../../kit/kit';\r\nimport { FullName } from '../../../../sharedModels/indexSharedModels';\r\nimport { addYears } from '../../../../utils/date-utils';\r\nimport { useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { createMuiStyle } from '../../../../utils/mui-utils';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { CreateEmployeeCommand } from '../../application/features/CreateEmployeeCommand';\r\nimport { RoutingByEmployees } from '../../config/routingByEmployees';\r\nimport { EmployeesServiceCollection } from '../../EmployeesServiceCollection';\r\n\r\nclass CreateEmployeeFormState {\r\n    constructor(public errorMessage: string = '') {\r\n\r\n    }\r\n}\r\n\r\nclass CreateEmployeeFormDef extends FormDef {\r\n    public surname = new InputControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(50)],\r\n        title: 'Фамилия',\r\n        isAutofocus: true\r\n    });\r\n\r\n    public name = new InputControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(50)],\r\n        title: 'Имя'\r\n    });\r\n\r\n    public patronymic = new InputControl({\r\n        validations: [new MaxLengthValidation(50)], title: 'Отчество'\r\n    });\r\n\r\n    public phoneNumber = new PhoneNumberControl({\r\n        validations: [new PhoneNumberValidation()], title: 'Номер телефона'\r\n    });\r\n\r\n    public email = new InputControl({\r\n        validations: [new EmailValidation()], title: 'Эл. почта'\r\n    });\r\n\r\n    public birthday = new DateControl({\r\n        validations: [new IsRequiredValidation(), new MaxDateValidation(addYears(new Date(), -16)),\r\n        MinDateValidation.getMinDate()], title: 'Дата рождения'\r\n    });\r\n\r\n    public employmentDate = new DateControl({\r\n        validations: [new IsRequiredValidation(), new MaxDateValidation(new Date()),\r\n        MinDateValidation.getMinDate()], title: 'Дата приёма на работу'\r\n    });\r\n}\r\n\r\nconst mediator = EmployeesServiceCollection.GetMediator();\r\n\r\nconst style = createMuiStyle({\r\n    buttonCancel: {\r\n        marginRight: (theme) => theme.spacing(2),\r\n    },\r\n});\r\n\r\nexport function CreateEmployeeForm() {\r\n    const [state, setState] = useStateSmart(new CreateEmployeeFormState());\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const form = new CreateEmployeeFormDef();\r\n\r\n    const [isCreating, create] = useProcessingOnlyOne(async () => {\r\n\r\n        if (!form.validation()) {\r\n            return;\r\n        }\r\n\r\n        const createOrganizationCommand = new CreateEmployeeCommand(\r\n            new FullName(form.name.getValue(), form.surname.getValue(), form.patronymic.getValue()),\r\n            form.birthday.getValueToJson(), form.phoneNumber.getValue(),\r\n            form.email.getValue(), form.employmentDate.getValueToJson()\r\n        );\r\n\r\n        await mediator.send(createOrganizationCommand)\r\n            .then(empl => {\r\n                navigation(RoutingByEmployees.EMPLOYEES);\r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({ ...prev, errorMessage: HttpRequestError.createFromPromiseCatch(err).message }));\r\n            });\r\n    }, [navigation]);\r\n\r\n    const cancel = () => {\r\n        navigation(RoutingByEmployees.EMPLOYEES);\r\n    };\r\n\r\n    // Настройка формы\r\n    form.setDisabled(isCreating);\r\n\r\n    return (<Container component=\"main\" maxWidth=\"md\">\r\n        <FormOnPaper>\r\n            <FormSimpleHeader>\r\n                Добавление сотрудника в организацию\r\n            </FormSimpleHeader>\r\n            <FormErrorMessage message={state.errorMessage} />\r\n            <FormContent>\r\n                <FormRow>\r\n                    {form.surname.view()}\r\n                    {form.name.view()}\r\n                    {form.patronymic.view()}\r\n                </FormRow>\r\n                <FormRow>\r\n                    {form.birthday.view()}\r\n                    {form.employmentDate.view()}\r\n                </FormRow>\r\n                <FormRow>\r\n                    {form.phoneNumber.view()}\r\n                    {form.email.view()}\r\n                </FormRow>\r\n            </FormContent>\r\n            <FormButtonPanel>\r\n                <ButtonCancel disabled={isCreating} onClick={cancel} sx={style.buttonCancel}>Отмена</ButtonCancel>\r\n                <ButtonAdd disabled={isCreating} onClick={create}>Создать</ButtonAdd>\r\n            </FormButtonPanel>\r\n        </FormOnPaper>\r\n    </Container>);\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { CreateEmployeeForm } from './CreateEmployee.form';\r\n\r\nexport function CreateEmployeePage() {\r\n    return (<>\r\n        <PageContent>\r\n            <CreateEmployeeForm />\r\n        </PageContent>\r\n    </>);\r\n}","import { IQuery } from \"../../../../intermediary/IQuery\";\r\nimport { FullName } from \"../../../../sharedModels/FullName\";\r\nimport { Guid } from \"../../../../sharedModels/indexSharedModels\";\r\nimport { Employee } from \"../../domain/indexDomain\";\r\nimport { EmployeesServiceCollection } from \"../../EmployeesServiceCollection\";\r\nimport { IEmployeesClient } from \"../infrastructure/clients/EmployeesClient/IEmployeesClient\";\r\n\r\nexport class GetEmployeeQuery implements IQuery<Employee> {\r\n\r\n    private readonly employeesClient: IEmployeesClient;\r\n\r\n    constructor(public readonly employeeId: Guid) {\r\n        this.employeesClient = EmployeesServiceCollection.GetEmployeesClient();\r\n    }\r\n\r\n    execute(): Promise<Employee> {\r\n        return this.employeesClient\r\n            .getEmployee(this.employeeId)\r\n            .then(empl => new Employee(empl.id,\r\n                new FullName(empl.fullName.name, empl.fullName.surname, empl.fullName.patronymic),\r\n                empl.birthday, empl.phoneNumber, empl.email, empl.state, empl.employmentDate)\r\n            );\r\n    }\r\n\r\n}","import { ApiDate } from \"../../../../../../../sharedModels/ApiDate\";\r\nimport { Guid } from \"../../../../../../../sharedModels/indexSharedModels\";\r\nimport { IFullNameDto } from \"../Dtos/IFullNameDto\";\r\n\r\nexport class UpdateEmployeeArgs {\r\n    constructor(\r\n        public readonly id: Guid,\r\n        public readonly fullName: IFullNameDto,\r\n        public readonly birthday: ApiDate,\r\n        public readonly phoneNumber: string | undefined,\r\n        public readonly email: string,\r\n        public readonly employmentDate: ApiDate) {\r\n\r\n    }\r\n}","import { ICommandPromiseWithResult } from \"../../../../intermediary/indexIntermediary\";\r\nimport { ApiDate, FullName, Guid } from \"../../../../sharedModels/indexSharedModels\";\r\nimport { Employee } from \"../../domain/indexDomain\";\r\nimport { EmployeesServiceCollection } from \"../../EmployeesServiceCollection\";\r\nimport { UpdateEmployeeArgs } from \"../infrastructure/clients/EmployeesClient/arguments/UpdateEmployeeArgs\";\r\nimport { IFullNameDto } from \"../infrastructure/clients/EmployeesClient/Dtos/IFullNameDto\";\r\nimport { IEmployeesClient } from \"../infrastructure/clients/EmployeesClient/IEmployeesClient\";\r\n\r\nexport class UpdateEmployeeCommand implements ICommandPromiseWithResult<Employee>{\r\n    private readonly employeesClient: IEmployeesClient;\r\n\r\n    constructor(\r\n        public readonly id: Guid,\r\n        public readonly fullName: FullName,\r\n        public readonly birthday: ApiDate,\r\n        public readonly phoneNumber: string | undefined,\r\n        public readonly email: string,\r\n        public readonly employmentDate: ApiDate) {\r\n\r\n        this.employeesClient = EmployeesServiceCollection.GetEmployeesClient();\r\n    }\r\n\r\n    execute(): Promise<Employee> {\r\n        const fullName: IFullNameDto = {\r\n            name: this.fullName.name,\r\n            surname: this.fullName.surname,\r\n            patronymic: this.fullName.patronymic\r\n        };\r\n        const args = new UpdateEmployeeArgs(this.id, fullName,\r\n            this.birthday, this.phoneNumber, this.email, this.employmentDate);\r\n\r\n        return this.employeesClient\r\n            .updateEmployee(args)\r\n            .then(empl => {\r\n                return new Employee(empl.id,\r\n                    new FullName(empl.fullName.name, empl.fullName.surname, empl.fullName.patronymic),\r\n                    empl.birthday, empl.phoneNumber, empl.email, empl.state, empl.employmentDate);\r\n            });\r\n    }\r\n\r\n}","import { Container } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { DateControl, EmailValidation, FormDef, InputControl, IsRequiredValidation, MaxDateValidation, MaxLengthValidation, MinDateValidation, PhoneNumberControl, PhoneNumberValidation } from '../../../../forms/Forms';\r\nimport { ButtonAdd, ButtonCancel, FormButtonPanel, FormContent, FormErrorMessage, FormOnPaper, FormRow, FormSimpleHeader } from '../../../../kit/kit';\r\nimport { FullName, Guid } from '../../../../sharedModels/indexSharedModels';\r\nimport { addYears } from '../../../../utils/date-utils';\r\nimport { useProcessingOnlyOne, useStateSmart } from '../../../../utils/hooks';\r\nimport { createMuiStyle } from '../../../../utils/mui-utils';\r\nimport { HttpRequestError } from '../../../../utils/web/HttpRequestError';\r\nimport { GetEmployeeQuery } from '../../application/features/GetEmployeeQuery';\r\nimport { UpdateEmployeeCommand } from '../../application/features/UpdateEmployeeCommand';\r\nimport { RoutingByEmployees } from '../../config/routingByEmployees';\r\nimport { Employee } from '../../domain/indexDomain';\r\nimport { EmployeesServiceCollection } from '../../EmployeesServiceCollection';\r\n\r\nclass EditEmployeeFormState {\r\n    constructor(\r\n        public employee: Employee | undefined = undefined,\r\n        public errorMessage: string = '',\r\n        public isErrorLoadingByEmployee: boolean = false) {\r\n\r\n    }\r\n}\r\n\r\nclass EditEmployeeFormDef extends FormDef {\r\n    public surname = new InputControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(50)],\r\n        title: 'Фамилия',\r\n        isAutofocus: true\r\n    });\r\n\r\n    public name = new InputControl({\r\n        validations: [new IsRequiredValidation(), new MaxLengthValidation(50)],\r\n        title: 'Имя'\r\n    });\r\n\r\n    public patronymic = new InputControl({\r\n        validations: [new MaxLengthValidation(50)], title: 'Отчество'\r\n    });\r\n\r\n    public phoneNumber = new PhoneNumberControl({\r\n        validations: [new PhoneNumberValidation()], title: 'Номер телефона'\r\n    });\r\n\r\n    public email = new InputControl({\r\n        validations: [new EmailValidation()], title: 'Эл. почта'\r\n    });\r\n\r\n    public birthday = new DateControl({\r\n        validations: [new IsRequiredValidation(), new MaxDateValidation(addYears(new Date(), -16)),\r\n        MinDateValidation.getMinDate()], title: 'Дата рождения'\r\n    });\r\n\r\n    public employmentDate = new DateControl({\r\n        validations: [new IsRequiredValidation(), new MaxDateValidation(new Date()),\r\n        MinDateValidation.getMinDate()], title: 'Дата приёма на работу'\r\n    });\r\n}\r\n\r\nconst mediator = EmployeesServiceCollection.GetMediator();\r\n\r\nconst style = createMuiStyle({\r\n    buttonCancel: {\r\n        marginRight: (theme) => theme.spacing(2),\r\n    },\r\n});\r\n\r\nexport function EditEmployeeForm() {\r\n    const routeParams = useParams();\r\n\r\n    const [isLoading, getEmployee] = useProcessingOnlyOne(async () => {\r\n        const id = routeParams.id as Guid;\r\n\r\n        const getEmployeeQuery = new GetEmployeeQuery(id);\r\n\r\n        await mediator.send(getEmployeeQuery)\r\n            .then(empl => {\r\n                if (empl.fullName) {\r\n                    form.surname.setValue(empl.fullName.surname);\r\n                    form.name.setValue(empl.fullName.name);\r\n                    form.patronymic.setValue(empl.fullName.patronymic);\r\n                }\r\n                form.birthday.setValue(empl.birthday);\r\n                form.employmentDate.setValue(empl.employmentDate);\r\n                form.phoneNumber.setValue(empl.phoneNumber);\r\n                form.email.setValue(empl.email);\r\n\r\n                setState(prev => ({ ...prev, employee: empl, isErrorLoadingByEmployee: false, errorMessage: '' }));\r\n            })\r\n            .catch(err => {\r\n                fillErrorField(err);\r\n            });\r\n    }, [], () => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            errorMessage: 'Невозможно получить данные по сотруднику. Попробуйте обновить страницу',\r\n            isErrorLoadingByEmployee: true,\r\n            employee: undefined,\r\n        }));\r\n    });\r\n\r\n    const [state, setState] = useStateSmart(new EditEmployeeFormState(), getEmployee);\r\n\r\n    const navigation = useNavigate();\r\n\r\n    const form = new EditEmployeeFormDef();\r\n\r\n    const fillErrorField = (err: any) => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            errorMessage: HttpRequestError.createFromPromiseCatch(err).message,\r\n            isErrorLoadingByEmployee: false,\r\n        }));\r\n    };\r\n\r\n    const [isSaving, saveEmployee] = useProcessingOnlyOne(async () => {\r\n\r\n        if (!form.validation()) {\r\n            return;\r\n        }\r\n\r\n        if (!state.employee) {\r\n            setState(prev => ({\r\n                ...prev,\r\n                errorMessage: 'Вернитесь в список сотрудников и выберите для редактирования нужного сотрудника',\r\n                isErrorLoadingByEmployee: false,\r\n            }));\r\n\r\n            return;\r\n        }\r\n\r\n        const updateEmployeeCommand = new UpdateEmployeeCommand(state.employee?.id,\r\n            new FullName(form.name.getValue(), form.surname.getValue(), form.patronymic.getValue()),\r\n            form.birthday.getValueToJson(), form.phoneNumber.getValue(), \r\n            form.email.getValue(), form.employmentDate.getValueToJson()\r\n        );\r\n\r\n        await mediator.send(updateEmployeeCommand)\r\n            .then(empl => {\r\n                navigation(RoutingByEmployees.EMPLOYEES);\r\n            })\r\n            .catch(err => {\r\n                fillErrorField(err);\r\n            });\r\n    }, [navigation, state], fillErrorField);\r\n\r\n    const cancel = () => {\r\n        navigation(RoutingByEmployees.EMPLOYEES);\r\n    };\r\n\r\n    const idDisabled = () => {\r\n        return isLoading || isSaving || state.isErrorLoadingByEmployee;\r\n    }\r\n\r\n    // Настройка формы\r\n    form.setDisabled(idDisabled());\r\n\r\n    return (<Container component=\"main\" maxWidth=\"md\">\r\n        <FormOnPaper>\r\n            <FormSimpleHeader>\r\n                Профиль сотрудника\r\n            </FormSimpleHeader>\r\n            <FormErrorMessage message={state.errorMessage} />\r\n            <FormContent>\r\n                <FormRow>\r\n                    {form.surname.view()}\r\n                    {form.name.view()}\r\n                    {form.patronymic.view()}\r\n                </FormRow>\r\n                <FormRow>\r\n                    {form.birthday.view()}\r\n                    {form.employmentDate.view()}\r\n                </FormRow>\r\n                <FormRow>\r\n                    {form.phoneNumber.view()}\r\n                    {form.email.view()}\r\n                </FormRow>\r\n            </FormContent>\r\n            <FormButtonPanel>\r\n                <ButtonCancel disabled={idDisabled()} onClick={cancel} sx={style.buttonCancel}>Отмена</ButtonCancel>\r\n                <ButtonAdd disabled={idDisabled()} onClick={saveEmployee}>Сохранить</ButtonAdd>\r\n            </FormButtonPanel>\r\n        </FormOnPaper>\r\n    </Container>);\r\n}","import * as React from 'react';\r\nimport { PageContent } from '../../../../kit/kit';\r\nimport { EditEmployeeForm } from './EditEmployee.form';\r\n\r\nexport function EditEmployeePage() {\r\n    return (<>\r\n        <PageContent>\r\n            <EditEmployeeForm />\r\n        </PageContent>\r\n    </>);\r\n}","import * as React from 'react';\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Token } from './utils/Token';\r\nimport { RoutingByRegister } from './modules/register/config/routingByRegister';\r\nimport { RoutingByShell } from './modules/shell/config/routingByShell';\r\nimport { RoutingByOrganizations } from './modules/organizations/config/routingByOrganizations';\r\nimport { NavigateFunction, useLocation, useNavigate } from \"react-router\";\r\n\r\n// Страницы\r\nimport { MainPage } from './modules/dashboard/pages/dashboardPages';\r\nimport { LoginPage, JoinPage, UserRegistrationPage, RegistrationPage, AgreementUserPage } from './modules/register/pages/registerPages';\r\nimport { Layout, NotFoundPage, ForbiddenPage, NoConnectionToServerPage } from './modules/shell/pages/shellPages';\r\nimport { CreateOrganizationPage, OrganizationsListPage } from './modules/organizations/pages/organizationsPages';\r\nimport { ConfigApiOrganizations } from './modules/organizations/api/configApi';\r\nimport { ConfigApiShell } from './modules/shell/api/configApi';\r\nimport { ConfigApiEmployees } from './modules/employees/api/configApi';\r\nimport { RoutingByEmployees } from './modules/employees/config/routingByEmployees';\r\nimport { CreateEmployeePage, EditEmployeePage, EmployeesListPage } from './modules/employees/pages/employeesPages';\r\nimport { ConfigApiRegister } from './modules/register/api/configApi';\r\nimport { organizationsStore } from './modules/organizations/stores/OrganizationsStore';\r\nimport { HttpClient } from './utils/web/HttpClient';\r\nimport { QueryPath } from './utils/queryPath';\r\n\r\nexport function PrivatePage({ children }) {\r\n    if (Token.getIsExpired()) {\r\n        return <Navigate to={RoutingByShell.LOGIN} replace />;\r\n    }\r\n\r\n    if (!organizationsStore.selectedOgranization) {\r\n        const location = useLocation();\r\n        const pathname = location.pathname;\r\n        if (pathname !== RoutingByOrganizations.ORGANIZATIONS &&\r\n            pathname !== RoutingByOrganizations.CREATE_ORGANIZATION) {\r\n            return <Navigate to={RoutingByOrganizations.ORGANIZATIONS} replace />;\r\n        }\r\n    }\r\n\r\n    return <Layout>{children}</Layout>;\r\n}\r\n\r\nexport function ToLoginPage() {\r\n    if (Token.getIsExpired()) {\r\n        return <LoginPage />;\r\n    }\r\n\r\n    return <Navigate to={RoutingByOrganizations.ORGANIZATIONS} replace />;\r\n}\r\n\r\nexport function PublicPage({ children }) {\r\n    return <Layout>{children}</Layout>;\r\n}\r\n\r\nexport function OpenPage({ children }) {\r\n    if (Token.getIsExpired()) {\r\n        return <Navigate to={RoutingByShell.LOGIN} replace />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n}\r\n\r\nfunction initHttpClient(navigation: NavigateFunction) {\r\n\r\n    HttpClient.setHandlerErrConnectionRefuused(() => {\r\n        return new Promise(() => {\r\n            const locationPathname = location.pathname;\r\n            if (locationPathname.toLowerCase() === RoutingByShell.NO_CONNECTION_TO_SERVER.toLowerCase()) {\r\n                return;\r\n            }\r\n\r\n            navigation({\r\n                pathname: RoutingByShell.NO_CONNECTION_TO_SERVER,\r\n                search: '?' +\r\n                    new URLSearchParams({ [QueryPath.TARGET]: locationPathname }).toString()\r\n            });\r\n        });\r\n    });\r\n\r\n    HttpClient.addResponseHandlerByStatusCode(401, () => {\r\n        return new Promise(() => {\r\n            navigation(RoutingByShell.LOGIN);\r\n        });\r\n    });\r\n\r\n    HttpClient.addResponseHandlerByStatusCode(403, (resp, msg, locationWhereCalled) => {\r\n        return new Promise(() => {\r\n            if (locationWhereCalled === location.href) {\r\n                navigation({\r\n                    pathname: RoutingByShell.FORBIDDEN,\r\n                    search: '?' +\r\n                        new URLSearchParams({ [QueryPath.FORBIDDEN_RESOURCE]: resp.url }).toString()\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    HttpClient.addResponseHandlerByStatusCode(404, (resp, msg, locationWhereCalled) => {\r\n        if (Token.get()) {\r\n            return new Promise(() => {\r\n                if (locationWhereCalled === location.href) {\r\n                    navigation(RoutingByShell.NOT_FOUND);\r\n                }\r\n            });\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\n\r\nexport default function App() {\r\n    const config = {\r\n        initialTitle: 'Система учёта сотрудников',\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n        document.getElementsByTagName('title')[0].innerHTML = config.initialTitle;\r\n\r\n        initHttpClient(navigate);\r\n\r\n        ConfigApiOrganizations.configuration(navigate);\r\n        ConfigApiShell.configuration(navigate);\r\n        ConfigApiEmployees.configuration(navigate);\r\n        ConfigApiRegister.configuration(navigate);\r\n    }, []);\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#00897b',\r\n                light: '#4ebaaa',\r\n                dark: '#005b4f',\r\n            },\r\n            secondary: {\r\n                main: '#ba68c8',\r\n                light: '#ee98fb',\r\n                dark: '#883997',\r\n            },\r\n            success: {\r\n                main: '#ffb74d',\r\n                dark: '#c88719',\r\n                light: '#ffe97d',\r\n            },\r\n        },\r\n    });\r\n\r\n    return (<ThemeProvider theme={theme}>\r\n        <Routes>\r\n            <Route path={RoutingByShell.ROOT} element={<PrivatePage><MainPage /></PrivatePage>} />\r\n            <Route path={RoutingByShell.NOT_FOUND} element={<PublicPage><NotFoundPage /></PublicPage>} />\r\n            <Route path={RoutingByShell.FORBIDDEN} element={<PublicPage><ForbiddenPage /></PublicPage>} />\r\n            <Route path={RoutingByShell.LOGIN} element={<ToLoginPage />} />\r\n            <Route path={RoutingByShell.NO_CONNECTION_TO_SERVER} element={<NoConnectionToServerPage />} />\r\n\r\n            <Route path={RoutingByRegister.REGISTRATION} element={<RegistrationPage />} />\r\n            <Route path={RoutingByRegister.JOIN_TO_ORGANIZATION} element={<JoinPage />} />\r\n            <Route path={RoutingByRegister.AGREEMENT_USER} element={<AgreementUserPage />} />\r\n            <Route path={RoutingByRegister.USER_REGISTRATION} element={<UserRegistrationPage />} />\r\n\r\n            <Route path={RoutingByOrganizations.ORGANIZATIONS} element={<PrivatePage><OrganizationsListPage /></PrivatePage>} />\r\n            <Route path={RoutingByOrganizations.CREATE_ORGANIZATION} element={<PrivatePage><CreateOrganizationPage /></PrivatePage>} />\r\n\r\n            <Route path={RoutingByEmployees.EMPLOYEES} element={<PrivatePage><EmployeesListPage /></PrivatePage>} />\r\n            <Route path={RoutingByEmployees.CREATE_EMPLOYEE} element={<PrivatePage><CreateEmployeePage /></PrivatePage>} />\r\n            <Route path={RoutingByEmployees.EDIT_EMPLOYEE} element={<PrivatePage><EditEmployeePage /></PrivatePage>} />\r\n        </Routes>\r\n    </ThemeProvider>\r\n    );\r\n\r\n};\r\n","import { NavigateFunction } from \"react-router\";\r\nimport { MessageBrokerConfig } from \"../../../messageBroker/MessageBrokerConfig\";\r\nimport { RegisterLoginedConsumer } from \"./consumers/RegisterLoginedConsumer\";\r\n\r\nexport class ConfigApiOrganizations {\r\n\r\n    public static configuration(navigation: NavigateFunction) {\r\n        MessageBrokerConfig.RegistraionConsumer(new RegisterLoginedConsumer(navigation));\r\n    }\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { MessageBrokerConfig } from \"../../../messageBroker/MessageBrokerConfig\";\r\nimport { AlreadyRegisteredConsumer } from \"./consumers/AlreadyRegisteredConsumer\";\r\nimport { ErrorRegisterEventConsumer } from \"./consumers/ErrorRegisterEventConsumer\";\r\nimport { SelectedOrganizationChangedConsumer } from \"./consumers/SelectedOrganizationChangedConsumer\";\r\n\r\nexport class ConfigApiShell {\r\n\r\n    public static configuration(navigation: NavigateFunction) {\r\n        MessageBrokerConfig.RegistraionConsumer(new ErrorRegisterEventConsumer(navigation));\r\n        MessageBrokerConfig.RegistraionConsumer(new AlreadyRegisteredConsumer(navigation));\r\n        MessageBrokerConfig.RegistraionConsumer(new SelectedOrganizationChangedConsumer(navigation));\r\n    }\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { MessageBrokerConfig } from \"../../../messageBroker/MessageBrokerConfig\";\r\nimport { SelectedOrganizationChangedConsumer } from \"./consumers/SelectedOrganizationChangedConsumer\";\r\n\r\nexport class ConfigApiEmployees {\r\n\r\n    public static configuration(navigation: NavigateFunction) {\r\n        MessageBrokerConfig.RegistraionConsumer(new SelectedOrganizationChangedConsumer());\r\n    }\r\n\r\n}","import { NavigateFunction } from \"react-router\";\r\nimport { MessageBrokerConfig } from \"../../../messageBroker/MessageBrokerConfig\";\r\n\r\nexport class ConfigApiRegister {\r\n\r\n    public static configuration(navigation: NavigateFunction) {\r\n        \r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './styles/site.css';\r\n\r\nvar mountNode = document.getElementById(\"app\");\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, mountNode);"],"names":["Jwt","exp","token","payload","this","getPayloadFromToken","result","jwt","JSON","parse","prop","hasOwnProperty","split","length","base64Url","base64","replace","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","save","accessToken","clear","jwtInfo","getJwtInfoByToken","localStorage","setItem","TOKEN_STORAGE_KEY","getItem","removeItem","get","getJwtInfo","Date","now","ROOT_APP","RoutingBase","REGISTRATION","USER_REGISTRATION","JOIN_TO_ORGANIZATION","AGREEMENT_USER","ROOT","FORBIDDEN","NOT_FOUND","LOGIN","NO_CONNECTION_TO_SERVER","ORGANIZATIONS","CREATE_ORGANIZATION","NameApp","component","sx","fontSize","color","marginTop","theme","spacing","MainPage","BootstrapButton","styled","backgroundColor","palette","success","main","contrastText","dark","light","ButtonAdd","props","startIcon","Add","primary","ButtonBack","ArrowBack","error","secondary","ButtonRefresh","Refresh","ButtonCancel","Cancel","DialogTitle","LoadingProgress","text","textAlign","CircularProgress","paddingTop","SnackBarError","Snackbar","display","open","message","onClose","handleCloseMessage","Alert","elevation","severity","AlertTitle","style","paper","padding","PageContent","children","MenuItemDef","constructor","to","ColorHr","height","border","BackdropLoading","isLoading","Backdrop","zIndex","drawer","BootstrapBox","width","FormContent","boxProps","FormErrorMessage","FormHelperText","FormRow","FormSimpleHeader","Typography","variant","flexDirection","alignItems","Form","paddingRight","FormButtonPanel","BootstrapPaper","FormOnPaper","paperProps","FormDef","validation","counter","isValid","control","focus","setDisabled","disabled","allwaysDisabled","isChanged","monthNames","splitDate","date","yyyy","getFullYear","mm","getMonth","day","getDate","h","getHours","m","getMinutes","s","getSeconds","padTwo","val","dateToFormatYmd","isNullOrUndefined","d","createDate","rawDateOnly","parts","Number","dd","newDate","setFullYear","setHours","addYears","years","getMaskedDate","ProcessingAgrs","useProcessingOnlyOne","func","deps","errorHandler","isProcessing","setIsProcessing","useStateSmart","callback","useCallback","params","args","tag","console","log","usePathnames","pathname","initialState","funcEffect","state","setState","useState","mounted","useRef","useEffect","current","useMounted","newState","useQuery","search","useMemo","URLSearchParams","RefObjectExtensions","refObject","value","ControlState","emptyValidationResult","ValidationResult","isSetValueRef","inputRef","initialValueRef","initialValue","onChangeValue","bind","processNewValue","getValue","setNewInitialValue","v","setValueOnly","setValue","validResult","getValidResult","prev","setValueInner","e","target","validationResult","validations","item","getInvalid","isRequired","some","x","IsRequiredValidation","getStyleField","margin","getInputPropsBase","inputProps","setMaxLength","setMaxDate","setMinDate","getValidationInfo","maxLengthValidation","find","MaxLengthValidation","maxLength","maxValidation","MaxDateValidation","maxDate","mimValidation","MinDateValidation","minDate","Control","mask","maskChar","super","clean","view","field","onChange","TextField","helperText","getErrorText","fullWidth","label","title","type","required","autoFocus","isAutofocus","InputLabelProps","shrink","InputControl","onKeyPress","PasswordControl","statePassword","showPassword","autoComplete","autocomplete","InputProps","endAdornment","InputAdornment","position","IconButton","size","onClick","onMouseDown","event","preventDefault","VisibilityOff","Visibility","DateControl","getValueToJson","raw","dateYmdToFormatJson","PhoneNumberControl","RadioButtonsControl","FormControl","FormLabel","RadioGroup","row","name","items","ind","FormControlLabel","key","Radio","invalid","errorText","trim","PhoneNumberValidation","lenPhone","curDate","match","MAIL_FORMAT","MinLengthValidation","minLength","ItemInfo","QueryPath","HttpRequestError","Error","statusCode","err","FullName","surname","patronymic","ToString","f","ProfileUser","fullName","avatarUrl","userName","Mediator","pipelineBehaviors","send","request","handler","execute","reverse","reduce","next","pipeline","handle","consumer","consumers","push","MemoryServiceBus","publishEvent","Promise","_","cunsumers","MessageBrokerConfig","getConsumers","filter","eventName","forEach","Consume","TokenService","create","isAllowCanceling","headers","abortController","defaultErrorMessages","getDefaultErrorMessages","locationWhereCalled","location","href","pushErrorMessage","pull","sharedErrorMessages","ERR_CONNECTION_REFUSED_TEXT","processEmptyError","response","msgDefault","body","json","catch","createHttpRequestError","status","then","resp","messageBase","errors","Object","entries","messages","getUnexpectedResponseFromServer","processStandardError","processHandler","ok","handlerDef","getFullUrl","url","baseUrl","startsWith","input","method","data","Headers","append","MEMI_APP_JSON","POST","PUT","k","init","stringify","Request","req","AbortController","signal","fetch","handlerErrConnectionRefuused","post","put","delete","DELETE","GET","cancel","abort","getDefaultSharedErrorMessages","version","Map","set","headerVersionName","HttpClient","IdentityClient","login","password","btoa","HttpClientFactory","createHttpClient","checkInvitationCode","invitationCode","createHttpClientWithAuth","registrationUser","httpClient","getUserModel","registrationUserByCode","UsersClient","me","RegistrationClient","InvitationsClient","serviceBus","mediator","CacheItem","expPerSecond","LocalCache","cacheItem","storageKey","Get","STORAGE_KEY","_profile","cache","Profile","profile","CurrentProfileUserCache","currentProfileUserStore","CurrentProfileUserStore","LoginCommand","identityClient","RegisterServiceCollection","getIdentityClient","usersClient","getUsersClient","resolve","p","EVENT_NAME","LoginFormDef","EmailValidation","pwd","UserProfile","LoginFormState","errorMessage","GetMediator","LoginForm","ERROR","navigation","form","isShowProfile","loginCommand","getServiceBus","RegisterLoginedIntegrationEvent","createFromPromiseCatch","handleKeyDown","goToUserOther","Container","maxWidth","marginBottom","avatarStyle","Avatar","alt","src","getContrastText","deepPurple","AccountCircle","getAvatarControl","Link","getProfileControl","marginRight","endIcon","ExitToApp","RoutingByRegister","LoginPage","RegistrationForm","AlreadyRegisteredIntegrationEvent","Grid","container","justifyContent","xs","sm","md","lg","xl","Card","CardHeader","titleTypographyProps","align","action","CardActions","RegistrationPage","RegistrationUserCommand","registrationClient","getRegistrationClient","UserRegistrationFormDef","UserRegistrationState","UserRegistrationFormStateToCache","email","CACHE_KEY_USER_REG","UserRegistrationForm","stateFromCache","registration","registrationUserCommand","errMessage","ErrorRegisterIntegrationEvent","isDisabled","borderRadius","cursor","BACK","UserRegistrationPage","AgreementUserForm","query","className","AgreementUserPage","InvitationCheckResult","CheckInvitationCodeCommand","invitationsClient","getInvitationsClient","RegistrationUserByCodeCommand","RegEmployeeFormDef","JoinFormState","isValidCode","JoinFormStateToCache","code","CACHE_KEY_JOIN","JoinForm","registrationUserByCodeCommand","isCheckCode","checkCode","checkInvitationCodeCommand","JoinPage","EMPLOYEES","CREATE_EMPLOYEE","EDIT_EMPLOYEE","MenuByEmployees","RoutingByEmployees","MenuByOrganizations","RoutingByOrganizations","organizationsStore","ogranizations","selectedOgranization","hasOgranizations","logout","LogoutCommand","shellStore","avatarObjectURL","getFullnameShort","initialName","charAt","toUpperCase","Brand","textDecoration","paddingLeft","minHeight","boxShadow","WebkitBoxShadow","MozBoxShadow","MainMenu","anchorAccountIconButton","setAnchorEl","navigate","loadingInfo","setIsLoading","pathnames","actionLogout","handleClose","AppBar","Toolbar","menuItems","MenuItem","selected","rootApp","classes","root","currentTarget","userFullName","short","getSurNameAndNameShort","marginLeft","Tooltip","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","boxSelectedOrgainzation","boxUnSelectedOrgainzation","hasSelectedOgranization","Layout","getMenuItems","fetchAvatar","blob","reader","FileReader","onloadend","readAsDataURL","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ForbiddenForm","resource","FORBIDDEN_RESOURCE","getTextResource","ForbiddenPage","NotFoundForm","NotFoundPage","NoConnectionToServerForm","TARGET","NoConnectionToServerPage","Organization","createOrganization","getOrganizations","OrganizationsClient","GetOrganizationsQuery","organizationsClient","OrganizationsServiceCollection","getOrganizationsClient","organizations","org","createAt","organizationId","OrganizationsListFormState","orgs","OrganizationsListForm","loadOrganizations","getOrganizationQuery","selectingOrganization","ogranization","SelectedOrganizationChangedIntegrationEvent","rowSpacing","columnSpacing","avatar","AddHome","CardContent","CardActionArea","fontWeight","getOrganizationView","organization","subheader","OrganizationsListPage","CreateOrganizationArgs","CreateOrganizationCommand","CreateOrganizationFormState","CreateOrganizationFormDef","buttonCancel","CreateOrganizationForm","isRegistrationing","createOrganizationCommand","concat","CreateOrganizationPage","RegisterLoginedConsumer","AlreadyRegisteredConsumer","ErrorRegisterEventConsumer","SelectedOrganizationChangedConsumer","employeesStore","selectedOrganizationId","FilterTypeEnum","ExTableFilterDef","ExTableFilter","propertyName","ExTableSearchParams","orderBy","order","_page","rowsPerPage","filters","page","TableFilter","onChangeFilter","filteType","setOpen","handleFilterApply","Badge","badgeContent","overlap","FilterList","StyledFilterPopper","placement","StyledFilterPaper","StyledFilterButton","ExTableHead","columns","onRequestSort","onRequestFilter","disabledSort","hideFilter","createFilterHandler","property","newValue","col","TableHead","TableRow","column","StyledTableCellTh","alignHead","sortDirection","disibledSort","isDisibledSort","description","TableSortLabel","active","direction","StyledSpanVisuallyHidden","filterType","String","StyledPaper","StyledTable","Table","minWidth","emptyCells","clip","overflow","top","Popper","StyledDivRoot","StyledTableRow","borderBottomWidth","TableCell","borderColor","paddingBottom","StyledTablePagination","TablePagination","borderBottomLeftRadius","borderBottomRightRadius","ExTable","onChangeSearchParams","rows","total","rowDef","setParams","createSearchParams","dataProcess","sParams","isEmpty","TableContainer","newOrder","newFilters","TableBody","colSpan","getClassName","getSx","hover","tabIndex","propertyToKey","index","alignCell","renderDataCell","RenderDataCell","TableFooter","backIconButtonProps","nextIconButtonProps","labelRowsPerPage","labelDisplayedRows","from","count","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","Pagination","totalPages","Employee","birthday","phoneNumber","employmentDate","EmployeeState","EmployeesClient","getBaseUrl","getEmployees","createEmployee","updateEmployee","getEmployee","employeeId","GetEmployeesQuery","employeesClient","EmployeesServiceCollection","GetEmployeesClient","empl","SortInfo","sortType","SortTypeEnum","Asc","Desc","FilterInfo","columnName","GetEmployeesArgs","pageSize","sort","EmployeesSearchFilter","EmployeesState","errorMessageByRows","filterParams","searchParams","pagination","FilterFormDef","STATE_ALL","Active","Dismissed","buttonAdd","filtersBackdrop","filtersPaper","filtersPanelButton","filtersPanel","iconButton","EmployeesListForm","getData","getEmployeesQuery","errMsg","addEmployee","FiltersView","getStyleByEmplItem","isDismissed","substring","editEmployee","Edit","EmployeesListPage","CreateEmployeeArgs","CreateEmployeeCommand","CreateEmployeeFormState","CreateEmployeeFormDef","getMinDate","CreateEmployeeForm","isCreating","CreateEmployeePage","GetEmployeeQuery","UpdateEmployeeArgs","UpdateEmployeeCommand","EditEmployeeFormState","employee","isErrorLoadingByEmployee","EditEmployeeFormDef","EditEmployeeForm","routeParams","getEmployeeQuery","fillErrorField","isSaving","saveEmployee","updateEmployeeCommand","idDisabled","EditEmployeePage","PrivatePage","ToLoginPage","PublicPage","App","document","getElementsByTagName","innerHTML","locationPathname","toLowerCase","msg","createTheme","ThemeProvider","path","element","mountNode","getElementById"],"sourceRoot":""}